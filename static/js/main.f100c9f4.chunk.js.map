{"version":3,"sources":["components/Character.tsx","components/Skills.tsx","components/traits/Traits.tsx","components/Perks.tsx","components/Label.tsx","components/Field.tsx","components/StringField.tsx","components/CharacterSheet.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fSum","n","x","i","Character","copy","name","species","gender","age","background","strength","agility","endurance","perception","willpower","intelligence","skills","perks","traits","this","GetSkillList","undefined","Math","min","floor","sqrt","intMultipler","perkCost","length","map","p","cost","reduce","a","b","traitCost","t","s","level","getStartingPointsAvailable","getCalculatedPointsUsed","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","characterPoints","characterPointsHuman","characterPointsMerlion","characterPointsKlackon","getHook","applyTo","sumOr","sum","or","filter","perk","amount","combat","pilot","spells","investigation","persuation","intimidation","larceny","stealth","survival","science","computer","medicine","surgery","empathy","subtrefuge","athletics","acrobatics","search","slightOfHand","sort","attribute","Coward","description","Brave","FoolHardy","Frail","Resillient","GetTraits","GetPerkList","sortPerk","prevPerk","nextPerk","skill","Label","children","style","display","minWidth","Field","label","value","onChange","max","modifier","enableButtons","useState","viewChildren","setViewChildren","ma","mi","total","Paper","className","Button","key","size","variant","onClick","StringField","props","enableEdit","TextField","e","target","CharacterSheet","useReducer","useCharacter","initialCharacter","character","dispatch","edit","setEdit","viewTraitList","setViewTraitList","perksList","textAlign","Grid","container","spacing","item","xs","sm","getCalculatedPointsLeft","getMaxStrength","action","getMaxAgility","getMaxEndurance","getMaxPerception","getMaxWillpower","getMaxIntelligence","getExperienceMultiplier","getHitpoints","getMana","getFearResistence","getDamageBonusSmall","getDamageBonusMedium","getDamageBonusLarge","substring","toUpperCase","perkToAdd","trait","traitToAdd","paddingBottom","state","r","findIndex","pta","SkillPerkManual","lazy","GameMaster","WorldAndLore","Wizard","PlayerManual","Conditional","shouldView","padding","fallback","Menu","options","option","current","callback","App","viewMode","setViewMode","setCharacter","wizard","MainButton","DialogTitle","info","charData","prompt","c","JSON","parse","log","loadCharacter","characterCallback","float","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f100c9f4.chunk.js","sourcesContent":["import { Skill, GetSkillList } from \"./Skills\";\nimport { Perk } from './Perks';\nimport { Trait } from \"./traits/Traits\";\n\nconst fSum = (n: number): number => {\n    let x = 0;\n    for (let i = 0; i <= n; i++) {\n        x += i;\n    }\n    return x;\n};\n\nexport interface IHooker {\n    applyTo: string;\n    amount: number;\n}\n\nexport interface ICharacter {\n    name: string;\n    species: string;\n    gender: string;\n    background: string;\n    age: number;\n    strength: number;\n    agility: number;\n    endurance: number;\n    perception: number;\n    willpower: number;\n    intelligence: number;\n    skills: Skill[];\n    perks: Perk[];\n    traits: Trait[];\n}\n\nexport class Character {\n    name: string;\n    species: string;\n    gender: string;\n    age: number;\n    background: string;\n    strength: number;\n    agility: number;\n    endurance: number;\n    perception: number;\n    willpower: number;\n    intelligence: number;\n    skills: Skill[];\n    perks: Perk[];\n    traits: Trait[];\n    constructor(copy?: ICharacter) {\n        this.name = (copy && copy.name) || \"\";\n        this.species = (copy && copy.species) || \"\";\n        this.gender = (copy && copy.gender) || \"\";\n        this.background = (copy && copy.background) || \"\";\n        this.strength = (copy && copy.strength) || 4;\n        this.agility = (copy && copy.agility) || 4;\n        this.endurance = (copy && copy.endurance) || 4;\n        this.perception = (copy && copy.perception) || 4;\n        this.willpower = (copy && copy.willpower) || 4;\n        this.intelligence = (copy && copy.intelligence) || 4;\n        this.skills = (copy && copy.skills) || GetSkillList();\n        this.traits = (copy && copy.traits) || [];\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\n        else this.perks = [];\n        this.age = (copy && copy.age) || 24;\n    }\n\n    public getMaxStrength() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 1, 11);\n                if (this.age < 26) return 11;\n                if (this.age < 36) return 12;\n                if (this.age < 50) return 10;\n                if (this.age < 66) return 9;\n                if (this.age < 90) return 8;\n                return 7;\n            case 'merlion':\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\n                if (this.age < 26) return 10;\n                if (this.age < 40) return 11;\n                if (this.age < 70) return 10;\n                if (this.age < 90) return 9;\n                return 8;\n            case 'klackon':\n                return 4 + Math.floor(Math.sqrt(this.age));\n            default: return 10;\n        }\n    }\n    public getMaxAgility() {\n        switch (this.species) {\n            case 'human':\n                return 10;\n            case 'merlion':\n                return 12;\n            case 'klackon':\n                return 9;\n            default: return 10;\n        }\n    }\n    public getMaxEndurance() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 2, 11);\n                if (this.age < 26) return 12;\n                if (this.age < 36) return 13;\n                if (this.age < 50) return 12;\n                if (this.age < 66) return 11;\n                if (this.age < 90) return 10;\n                return 9;\n            case 'merlion':\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\n                if (this.age < 26) return 10;\n                if (this.age < 40) return 11;\n                if (this.age < 70) return 10;\n                if (this.age < 90) return 9;\n                return 8;\n            case 'klackon':\n                return 12\n            default: return 10;\n        }\n    }\n    public getMaxPerception() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 18) return Math.min(Math.floor(this.age / 18) + 1, 13);\n                if (this.age < 26) return 12;\n                if (this.age < 30) return 11;\n                if (this.age < 36) return 9;\n                if (this.age < 42) return 8;\n                if (this.age < 50) return 7;\n                return 6;\n            case 'merlion':\n                return 11;\n            case 'klackon':\n                return 12;\n            default: return 10;\n        }\n    }\n    public getMaxWillpower() {\n        switch (this.species) {\n            case 'human':\n                return 12;\n            case 'merlion':\n                return 8;\n            case 'klackon':\n                return 9;\n            default: return 10;\n        }\n    }\n    public getMaxIntelligence() {\n        switch (this.species) {\n            case 'human':\n                return 10;\n            case 'merlion':\n                return 16;\n            case 'klackon':\n                return 5 + Math.floor(Math.sqrt(Math.sqrt(this.age)));\n            default: return 10;\n        }\n    }\n\n    public getCalculatedPointsUsed() {\n        const intMultipler = this.species === 'merlion' ? 3 : 4;\n        const perkCost = this.perks.length > 0 ? this.perks.map(p => p.cost()).reduce((a, b) => a + b) : 0;\n        const traitCost = this.traits.length > 0 ? this.traits.map(t => t.cost).reduce((a, b) => a + b) : 0;\n        return fSum(this.strength) * 4\n            + fSum(this.agility) * 4\n            + fSum(this.endurance) * 4\n            + fSum(this.perception) * 4\n            + fSum(this.willpower) * 4\n            + fSum(this.intelligence) * intMultipler\n            + this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0)\n            + perkCost\n            + traitCost;\n    }\n\n    public getCalculatedPointsLeft() {\n        return this.getStartingPointsAvailable() - this.getCalculatedPointsUsed();\n    }\n\n    private characterPoints(start: number, agePhases: number[], expPhases: number[]): number {\n        let p = start;\n        if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\n        let prevPhase = 0;\n        for (var phase in agePhases) {\n            let currentAgePhase = agePhases[phase];\n            let expPhase = expPhases[phase];\n\n            let ageRange = currentAgePhase - prevPhase;\n            if (this.age > prevPhase) p += Math.min(this.age - prevPhase, ageRange) * expPhase;\n            prevPhase = currentAgePhase;\n        }\n\n        return p;\n    }\n\n    private characterPointsHuman() {\n        return this.characterPoints(300, [18, 26, 40, 70], [16, 12, 8, 4]);\n    }\n\n    private characterPointsMerlion() {\n        return this.characterPoints(200, [16, 24, 50, 90], [20, 16, 12, 8]);\n    }\n\n    private characterPointsKlackon() {\n        return this.characterPoints(100, [10, 20, 40, 80, 160, 320, 640], [8, 9, 10, 11, 12, 13, 14]);\n    }\n\n\n\n    public getStartingPointsAvailable() {\n\n        switch (this.species) {\n            case 'human': return this.characterPointsHuman();\n            case 'merlion': return this.characterPointsMerlion();\n            case 'klackon': return this.characterPointsKlackon();\n            default: return this.characterPointsHuman();\n        }\n    }\n\n    public getMaximumPointsAvailable() {\n        return this.getStartingPointsAvailable() * 2;\n    }\n\n    public getExperienceMultiplier() {\n        if (this.age < 16) return 3 * + (this.getHook('exp') + 1);\n        if (this.age < 20) return 2.5 * + (this.getHook('exp') + 1);\n        if (this.age < 24) return 2 * + (this.getHook('exp') + 1);\n        if (this.age < 28) return 1.75 * + (this.getHook('exp') + 1);\n        if (this.age < 32) return 1.5 * + (this.getHook('exp') + 1);\n        if (this.age < 36) return 1.25 * + (this.getHook('exp') + 1);\n        return 1;\n    }\n\n    public getHitpoints() {\n        return this.strength + this.endurance * 2 + this.getHook('hitpoints');\n    }\n\n    public getMana() {\n        return this.endurance + this.willpower * 2 + this.getHook('mana');\n    }\n\n    public getFearResistence() {\n        return this.willpower + 2 + this.getHook('fear');\n    }\n\n    public getDamageBonusSmall() {\n        return Math.floor(this.strength / 4) + this.getHook('dmgSmall');\n    }\n\n    public getDamageBonusMedium() {\n        return Math.floor(this.strength / 3) + this.getHook('dmgMedium');\n    }\n    public getDamageBonusLarge() {\n        return Math.floor(this.strength / 2) + this.getHook('dmgLarge');\n    }\n\n    private getHook(applyTo: string): number {\n        return this.sumOr(applyTo, this.perks, 0) + this.sumOr(applyTo, this.traits, 0);\n    }\n\n    private sumOr(applyTo: string, sum: IHooker[], or: number): number {\n        let s = sum.filter(perk => perk.applyTo == applyTo).map(p => p.amount);\n        if (s.length > 0) return s.reduce((a, b) => a + b);\n        else return or;\n    }\n}","import combat from './skills/combat.json';\nimport pilot from './skills/pilot.json';\nimport spells from './skills/spells.json';\nimport investigation from './skills/investigation.json';\nimport intimidation from './skills/intimidation.json';\nimport larceny from './skills/larceny.json';\nimport stealth from './skills/stealth.json';\nimport survival from './skills/survival.json';\nimport science from './skills/science.json';\nimport computer from './skills/computer.json';\nimport medicine from './skills/medicine.json';\nimport surgery from './skills/surgery.json';\nimport empathy from './skills/empathy.json';\nimport subtrefuge from './skills/subtrefuge.json';\nimport athletics from './skills/athletics.json';\nimport acrobatics from './skills/acrobatics.json';\nimport search from './skills/search.json';\nimport slightOfHand from './skills/slightOfHand.json';\nimport persuation from './skills/persuation.json';\n\n\nexport interface Skill {\n    name: string;\n    attribute: string | 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\n    level: number;\n    description: string;\n}\nexport const GetSkillList = (): Skill[] => {\n    return [\n        { ...combat },\n        { ...pilot },\n        { ...spells },\n        { ...investigation },\n        { ...persuation },\n        { ...intimidation },\n        { ...larceny },\n        { ...stealth },\n        {  ...survival },\n        { ...science },\n        { ...computer },\n        { ...medicine },\n        { ...surgery },\n        { ...empathy },\n        { ...subtrefuge },\n        { ...athletics },\n        { ...acrobatics },\n        { ...search },\n        {  ...slightOfHand }\n    ].sort((a, b) => a.attribute < b.attribute ? -1 : 1);\n}","import React from 'react';\nimport { IHooker } from '../Character';\n\n\nexport interface Trait extends IHooker {\n    name: string;\n    cost: number;\n    description: string;\n}\n\nconst Coward: Trait = {\n    name: 'cocowardwardice',\n    cost: -20,\n    description: 'You are a coward that more easily falls vicim to fear. willpower counts as 2 lower for fear',\n    applyTo:'fear',\n    amount:-2,\n}\n\nconst Brave: Trait = {\n    name: 'brave',\n    cost: 20,\n    description: 'You are brave and are less likely to be phased by fear. willpower counts as 2 higher for fear',\n    applyTo:'fear',\n    amount:2,\n}\n\nconst FoolHardy: Trait = {\n    name: 'foolhardy',\n    cost: 10,\n    description: 'At first glance you seem brave, but actually you are just ignoring the feeling completely. You gain 1 fear resistence but you are no longer privy to your own fear stat, the DM will roll for your fear without your knowledge',\n    applyTo:'fear',\n    amount:1,\n}\n\nconst Frail: Trait = {\n    name: 'frail',\n    cost: -20,\n    description: 'You are frail and easily damaged, -2 maximum hitpoints',\n    applyTo:'hitpoints',\n    amount:-2,\n}\n\nconst Resillient: Trait = {\n    name: 'resillient',\n    cost: 20,\n    description: 'You are able to withstand more punishment, +2 maximum hitpoints',\n    applyTo:'hitpoints',\n    amount:2,\n}\n\nexport const GetTraits = ():Trait[] & IHooker[] => {\n    return [\n        Coward,\n        Brave,\n        FoolHardy,\n        Frail,\n        Resillient\n    ]\n};","import gun1 from './perks/gun1.json';\nimport gun2 from './perks/gun2.json';\nimport gun3 from './perks/gun3.json';\nimport gun4 from './perks/gun4.json';\nimport React from 'react';\nimport { GetSkillList } from './Skills';\nimport { IHooker } from './Character.js';\n\n\nexport interface Perk extends IHooker {\n    name: string;\n    skill: string;\n    level:1|2|3|4|5;\n    cost():number;\n    description(): JSX.Element;\n}\n\ninterface IPerk {\n    name: string;\n    skill: string;\n    level:1|2|3|4|5;\n    description: string;\n}\n\nclass PerkTemplate implements Perk {\n    name: string;\n    skill: string;\n    level:1|2|3|4|5;\n    applyTo: string;\n    amount: number;\n    _description: string;\n    description(): JSX.Element {\n        return <>{this._description}</>;\n    }\n    cost() :number {\n        return this.level*10;\n    }\n    constructor(data: IPerk, hook: IHooker) {\n        this.name = data.name;\n        this.skill = data.skill;\n        this.level = data.level;\n        this._description = data.description;\n        this.applyTo= hook.applyTo;\n        this.amount = hook.amount;\n    }\n}\nconst Skills = GetSkillList();\nexport const GetPerkList = (): Perk[] => {\n    return [\n\n    ].sort(sortPerk);\n}\n\nconst sortPerk = (prevPerk: Perk, nextPerk: Perk) => {\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\n};","    import React from 'react';\n\nexport const Label: React.FC<{}> = ({children}) => {\n    return <label style={{display:'inline-block', minWidth:'140px'}}>{children}</label>;\n}\n\n","import React, { useState } from 'react';\nimport { Paper, Button } from '@material-ui/core';\nimport { Label } from './Label';\n\ninterface FieldProps {\n    label: string;\n    value: number;\n    max?: number;\n    min?: number;\n    modifier?: number;\n    enableButtons?: boolean;\n    onChange: (n: number) => void;\n}\n\nexport const Field: React.FC<FieldProps> = ({ label, value, onChange, max, min, modifier, enableButtons, children }) => {\n    const [viewChildren, setViewChildren] = useState(false);\n    let ma = max !== undefined ? max : 10;\n    let mi = min !== undefined ? min : 1;\n    let total = modifier !== undefined ? value + modifier : value;\n    return <Paper className=\"extraPadding\">\n        <Label>{label}:</Label> <Label>{value} {modifier !== undefined ? ` | ${modifier} | ${total}` : null}</Label>\n        {enableButtons === true ? <Button key={'fieldbutton_increase_'+label} size=\"small\" variant=\"contained\" onClick={() => onChange(ma <= value ? value : value + 1)}>+</Button> : null}\n        {enableButtons === true ? <Button key={'fieldbutton_decrease_'+label}  size=\"small\" variant=\"contained\" onClick={() => onChange(mi >= value ? value : value - 1)}>-</Button> : null}\n\n        {children !== undefined ? viewChildren === true ?\n            <Paper><Button  key={'fieldbutton_children_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(false)}>X</Button>{children} </Paper>\n            : (enableButtons === true ? <Button  key={'fieldbutton_children_2_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(true)}>?</Button> : null)\n            : null}\n    </Paper>\n}","import React from 'react';\r\nimport { TextField, Paper } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface FieldProps {\r\n    label: string;\r\n    value: string;\r\n    enableEdit?: boolean;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\nconst StringField: React.FC<FieldProps> = (props: FieldProps) => {\r\n    if (props.enableEdit !== true) return <Paper><Label>{props.label}:</Label><Label>{props.value}</Label></Paper>\r\n    else return <Paper>\r\n        <Label>{props.label}:</Label>\r\n        <TextField value={props.value} onChange={(e) => props.onChange(e.target.value)} >{props.value}</TextField>\r\n    </Paper>\r\n}\r\n\r\nexport default StringField;","import React, { useReducer, useState } from 'react';\nimport { Field } from './Field';\nimport { Paper, Grid, Button } from '@material-ui/core';\nimport { Character } from './Character';\nimport { GetPerkList, Perk } from './Perks';\nimport StringField from './StringField';\nimport { GetTraits, Trait } from './traits/Traits';\n\ninterface CharacterSheetProps {\n    initialCharacter: Character;\n    characterCallback: (c: Character) => void;\n}\n\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\n    const [edit, setEdit] = useState(false);\n    const [viewTraitList, setViewTraitList] = useState(false);\n\n    const perksList = GetPerkList();\n\n    return <Paper style={{ textAlign: 'left' }}>\n        <Button key='charactersheet_edit' onClick={() => setEdit(!edit)}>edit</Button>\n        <Grid container spacing={3} >\n            <Grid item xs={12} sm={6}>\n                Character points left {character.getCalculatedPointsLeft()}\n                <Field enableButtons={edit} max={character.getMaxStrength()} label='strength' value={character.strength} onChange={n => dispatch({ action: 'strength', value: n })}>Raw muscle strength</Field>\n                <Field enableButtons={edit} max={character.getMaxAgility()} label='agility' value={character.agility} onChange={n => dispatch({ action: 'agility', value: n })}>Steady hands, reflexes</Field>\n                <Field enableButtons={edit} max={character.getMaxEndurance()} label='endurance' value={character.endurance} onChange={n => dispatch({ action: 'endurance', value: n })}>Ability to last long</Field>\n                <Field enableButtons={edit} max={character.getMaxPerception()} label='perception' value={character.perception} onChange={n => dispatch({ action: 'perception', value: n })}>eyesight, hearing, and how much you smell</Field>\n                <Field enableButtons={edit} max={character.getMaxWillpower()} label='willpower' value={character.willpower} onChange={n => dispatch({ action: 'willpower', value: n })}>ability to say \"no\" when it's sooo good</Field>\n                <Field enableButtons={edit} max={character.getMaxIntelligence()} label='intelligence' value={character.intelligence} onChange={n => dispatch({ action: 'intelligence', value: n })}>big brainy boy</Field>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <StringField label={'name'} value={character.name} enableEdit={edit} onChange={n => dispatch({ action: 'name', value: 0, name: n })} ></StringField>\n                <StringField label={'gender'} value={character.gender} enableEdit={edit} onChange={n => dispatch({ action: 'gender', value: 0, name: n })} ></StringField>\n                <StringField label={'species'} value={character.species} enableEdit={edit} onChange={n => dispatch({ action: 'species', value: 0, name: n })} ></StringField>\n                <StringField label={'background'} value={character.background} enableEdit={edit} onChange={n => dispatch({ action: 'background', value: 0, name: n })} ></StringField>\n                <Field enableButtons={edit} label='age' max={900} min={1} value={character.age} onChange={n => dispatch({ action: 'age', value: n })}>Your age determines your starting, maximum experience, as well as experience multiplier</Field>\n                <Paper>Experience multiplier: {character.getExperienceMultiplier()}</Paper>\n                <Paper>Hit points: {character.getHitpoints()}</Paper>\n                <Paper>Mana: {character.getMana()}</Paper>\n                <Paper>Fear resistence: {character.getFearResistence()}</Paper>\n                <Paper>Damage bonus small: {character.getDamageBonusSmall()}</Paper>\n                <Paper>Damage bonus medium: {character.getDamageBonusMedium()}</Paper>\n                <Paper>Damage bonus large: {character.getDamageBonusLarge()}</Paper>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                {character.skills.map(s => {\n                    let modifier: number = 0;\n                    switch (s.attribute) {\n                        case 'strength': modifier = character.strength; break;\n                        case 'agility': modifier = character.agility; break;\n                        case 'endurance': modifier = character.endurance; break;\n                        case 'perception': modifier = character.perception; break;\n                        case 'willpower': modifier = character.willpower; break;\n                        case 'intelligence': modifier = character.intelligence; break;\n                    }\n                    return <Field key={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\n                        enableButtons={edit}\n                        modifier={modifier}\n                        max={40}\n                        min={0}\n                        label={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\n                        value={s.level}\n                        onChange={(n => dispatch({ action: 'skill', name: s.name, value: n }))}>\n                        {s.description}\n                        {perksList.filter(p => p.skill === s.name).map(p => {\n                            return <Button key={'addperk_' + p.name} onClick={() => dispatch({ action: 'addperk', name: p.name, value: 0, perkToAdd: p })}>{p.name}</Button>;\n                        })}\n                    </Field>\n                })}\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n                <h1>Traits</h1>\n                {character.traits.map(trait => {\n                    return (<div>\n                        <b>{trait.name}</b> {trait.description} ({trait.cost})\n                        <Button key={'removetrait_' + trait.name} onClick={() => dispatch({ action: 'removetrait', name: trait.name, value: 0, traitToAdd: trait })}>X</Button>\n                    </div>)\n                })}\n                {edit === true ?\n                    <>\n                        {viewTraitList === true ?\n                            <>\n                                <Button key='traitsbutton' onClick={() => setViewTraitList(false)}>Hide Traits</Button>\n                                {GetTraits().map(trait => {\n                                    return <div style={{paddingBottom:'6px'}}>\n                                        <Button size='small' variant='contained' onClick={() => dispatch({ action: 'addtrait', name: trait.name, value: 0, traitToAdd: trait })}>{trait.name}</Button>\n                                        ({trait.cost})\n                                        {trait.description} \n                                        </div>\n                                })}\n                            </>\n                            : <Button key='traitsbutton' onClick={() => setViewTraitList(true)}>View Traits</Button>}\n                    </>\n                    : null\n                }\n                <h1>Perks</h1>\n                {character.perks.map(perk => {\n                    return (<><b>{perk.name}</b> ({perk.cost}) {perk.description()}\n                        <Button key={'removeperk_' + perk.name} size=\"small\" onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>X</Button>\n                    </>)\n                })}\n            </Grid>\n        </Grid>\n    </Paper>;\n}\n\ninterface dispatcher {\n    action: string;\n    name?: string;\n    value: number;\n    perkToAdd?: Perk;\n    traitToAdd?: Trait;\n}\n\nconst useCharacter = (state: Character, action: dispatcher): Character => {\n    switch (action.action) {\n        case 'strength': return new Character({ ...state, strength: action.value });\n        case 'agility': return new Character({ ...state, agility: action.value });\n        case 'endurance': return new Character({ ...state, endurance: action.value });\n        case 'willpower': return new Character({ ...state, willpower: action.value });\n        case 'perception': return new Character({ ...state, perception: action.value });\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\n        case 'age': return new Character({ ...state, age: action.value });\n        case 'skill':\n            let r = new Character({\n                ...state\n            });\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\n            return r;\n        case 'name': return new Character({ ...state, name: action.name || '' });\n        case 'species': return new Character({ ...state, species: action.name || '' });\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\n        case 'background': return new Character({ ...state, background: action.name || '' });\n    }\n    if (action.action === 'addperk') {\n        if (action.perkToAdd !== undefined)\n            return new Character({ ...state, perks: [...state.perks, action.perkToAdd] });\n    }\n    else if (action.action === 'removeperk') {\n        let r = new Character({\n            ...state\n        });\n        if (action.perkToAdd !== undefined) {\n            let pta = action.perkToAdd;\n            r.perks = r.perks.filter(p => p.name !== pta.name);\n        }\n        return r;\n    }\n    else if (action.action === 'addtrait') {\n        if (action.traitToAdd !== undefined)\n            return new Character({ ...state, traits: [...state.traits, action.traitToAdd] });\n    }\n\n    else if (action.action === 'removetrait') {\n        let r = new Character({\n            ...state\n        });\n        if (action.traitToAdd !== undefined) {\n            let pta = action.traitToAdd;\n            r.traits = r.traits.filter(p => p.name !== pta.name);\n        }\n        return r;\n    }\n\n\n    return state;\n}","import React, { useState, Suspense, lazy } from 'react';\nimport { CharacterSheet } from './components/CharacterSheet';\nimport './App.css';\nimport { Character, ICharacter } from './components/Character';\nimport { Button, DialogTitle } from '@material-ui/core';\nconst SkillPerkManual = lazy(() => import('./components/SkillPerkManual'));\nconst GameMaster = lazy(() => import('./components/GameMaster'));\nconst WorldAndLore = lazy(() => import('./components/WorldAndLore'));\nconst Wizard = lazy(() => import('./components/Wizard'));\nconst PlayerManual = lazy(() => import('./components/PlayerManual'));\n\nconst App: React.FC = () => {\n  const main = 'main';\n  const [viewMode, setViewMode] = useState(main);\n  const [character, setCharacter] = useState(new Character());//new Character();\n  const characterSheet = 'View Character Sheet';\n  const playerManual = 'Player Manual';\n  const gameMaster = 'Game Master';\n  const worldAndLore = 'World and Lore';\n  const skillsAndPerks = 'Skills and Perks';\n  const wizard = 'Launch Character Creator Wizard';\n  const about = 'About';\n  let options = [main,\n    characterSheet,\n    playerManual,\n    gameMaster,\n    worldAndLore,\n    skillsAndPerks,\n    wizard,\n    about\n  ];\n  const MainButton = () => <Button onClick={() => setViewMode('main')}>EXIT</Button>;\n\n  const loadCharacter = () => {\n    try {\n      console.info('attempting to load character');\n      const charData = prompt('paste character string here');\n      if (charData !== null) {\n        const c = JSON.parse(charData) as ICharacter;\n        setCharacter(new Character({ ...c }));\n        setViewMode(characterSheet);\n        console.log('character was successfully loaded:', { ...c });\n      } else console.log('no character info was pasted');\n    }\n    catch (error) {\n      console.error({ error });\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <DialogTitle>Infinite Darkness</DialogTitle>\n      <Menu callback={(option) => setViewMode(option)} options={options} current={viewMode} />\n      <Conditional shouldView={viewMode === main}>\n        <Button onClick={() => loadCharacter()}>Load Character</Button>\n      </Conditional>\n      <Conditional shouldView={viewMode === characterSheet}>\n        <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\n      </Conditional>\n      <Conditional shouldView={viewMode === playerManual}>\n        <MainButton />\n        <PlayerManual />\n      </Conditional>\n      <Conditional shouldView={viewMode === gameMaster}>\n        <MainButton />\n        <GameMaster></GameMaster>\n      </Conditional>\n      <Conditional shouldView={viewMode === worldAndLore}>\n        <MainButton />\n        <WorldAndLore></WorldAndLore>\n      </Conditional>\n      <Conditional shouldView={viewMode === skillsAndPerks}>\n        <MainButton />\n        <SkillPerkManual />\n      </Conditional>\n      <Conditional shouldView={viewMode === wizard}>\n        <MainButton />\n        <Wizard />\n      </Conditional>\n      <Conditional shouldView={viewMode === about}>\n        <MainButton />\n        <h2>About</h2>\n        <h3>This is a work in progress</h3>\n        <p>Author: Thorvaldur Saemundsson</p>\n        <p>Technology: ReactJS, github pages</p>\n        <p>Project: Infinite Darkness, a sci-fi and fantasy game</p>\n        <p>Please formulate any complaints and suggestions in the form of a pull request ;)</p>\n        <span style={{ float: 'right', fontSize: '11px' }}>Copyright Thorvaldur Saemundsson</span>\n      </Conditional>\n    </div>\n  );\n}\ninterface ItemProp {\n  shouldView: boolean;\n}\n\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\n  if (shouldView) return <div style={{ textAlign: 'left', padding: '15px' }}><Suspense fallback={<div>Loading...</div>}>{children}</Suspense></div>;\n  else return null;\n}\n\ninterface MenuProps {\n  callback: (option: string) => void;\n  options: string[];\n  current: string;\n}\n\nconst Menu: React.FC<MenuProps> = (props) => {\n  return <div>{props.options.map(option => <Button variant={option === props.current ? \"outlined\" : \"text\"} key={option} onClick={() => props.callback(option)}>{option}</Button>)}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}