{"version":3,"sources":["components/Label.tsx","components/Field.tsx","components/Skills.tsx","components/Character.tsx","components/CharacterSheet.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Label","children","style","display","minWidth","d10","min","max","Math","round","random","Field","label","value","onChange","modifier","enableDice","useState","results","setResults","viewChildren","setViewChildren","ma","undefined","mi","total","Paper","Button","onClick","GetSkillList","name","combat","attribute","level","description","pilot","spells","investigation","persuation","intimidation","larceny","stealth","survival","science","computer","medicine","surgery","empathy","subtrefuge","athletics","acrobatics","search","slightOfHand","sort","a","b","fSum","n","x","i","Character","copy","age","strength","agility","endurance","perception","willpower","intelligence","skills","techniques","this","map","s","reduce","p","getStartingPointsAvailable","floor","CharacterSheet","props","useReducer","useCharacter","initialCharacter","character","dispatch","textAlign","characterCallback","Grid","container","spacing","item","xs","sm","getCalculatedPointsUsed","getMaximumPointsAvailable","action","getExperienceMultiplier","getHitpoints","getMana","getDamageBonusSmall","getDamageBonusMedium","getDamageBonusLarge","substring","toUpperCase","state","r","findIndex","Conditional","shouldView","Menu","options","option","callback","App","viewMode","setViewMode","className","DialogTitle","c","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wlFAEaA,EAAsB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACjC,OAAO,2BAAOC,MAAO,CAACC,QAAQ,eAAgBC,SAAS,UAAWH,ICgBhEI,EAAM,kBAJEC,EAIS,EAJIC,EAID,GAHfC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GADvC,IAACA,EAAaC,GAMdI,EAA8B,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,SAAUP,EAA+C,EAA/CA,IAAKD,EAA0C,EAA1CA,IAAKS,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYf,EAAe,EAAfA,SAAe,EACnFgB,mBAAS,CAAC,EAAG,IADsE,mBAC1GC,EAD0G,KACjGC,EADiG,OAEzEF,oBAAS,GAFgE,mBAE1GG,EAF0G,KAE5FC,EAF4F,KAG7GC,OAAaC,IAARhB,EAAoBA,EAAM,GAC/BiB,OAAaD,IAARjB,EAAoBA,EAAM,EAC/BmB,OAAqBF,IAAbR,EAAyBF,EAAQE,EAAWF,EAExD,OADAG,OAA4BO,IAAfP,GAAmCA,EACzC,kBAACU,EAAA,EAAD,KACH,kBAAC,EAAD,KAAQd,EAAR,KADG,IACqB,kBAAC,EAAD,KAAQC,EAAR,SAA6BU,IAAbR,EAAA,aAA+BA,EAA/B,cAA6CU,GAAU,MAC/F,kBAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAASQ,GAAMT,EAAQA,EAAQA,EAAQ,KAA9D,KACA,kBAACc,EAAA,EAAD,CAAQC,QAAS,kBAAMd,EAASU,GAAMX,EAAQA,EAAQA,EAAQ,KAA9D,KACCG,EAAa,kBAACW,EAAA,EAAD,CAAQC,QAAS,kBAAMT,EAAW,CAACd,IAAOA,QAA1C,KAAgE,KAC9D,IAAfa,EAAQ,GAAR,WAAuBO,EAAvB,mBAAuCP,EAAQ,GAA/C,mBAA4DA,EAAQ,GAApE,eAA6EO,EAAQP,EAAQ,GAAKA,EAAQ,IACrG,UACYK,IAAbtB,GAA0C,IAAjBmB,EACtB,kBAACM,EAAA,EAAD,KAAO,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMP,GAAgB,KAAvC,KAA0DpB,EAAjE,KACE,kBAAC0B,EAAA,EAAD,CAAQC,QAAS,kBAAMP,GAAgB,KAAvC,KACJ,O,gLCXDQ,EAAe,WAGxB,MAAO,CACH,CACIC,KAAMC,IACNC,UAAWD,IACXE,MAAOF,IACPG,YAAaH,KAEjB,CACID,KAAMK,IACNH,UAAWG,IACXF,MAAOE,IACPD,YAAaC,KAEjB,CACIL,KAAMM,IACNJ,UAAWI,IACXH,MAAOG,IACPF,YAAaE,KAEjB,CACIN,KAAMO,IACNL,UAAWK,IACXJ,MAAOI,IACPH,YAAaG,KAEjB,CACIP,KAAMQ,IACNN,UAAWM,IACXL,MAAOK,IACPJ,YAAaI,KAEjB,CACIR,KAAMS,IACNP,UAAWO,IACXN,MAAOM,IACPL,YAAaK,KAEjB,CACIT,KAAMU,IACNR,UAAWQ,IACXP,MAAOO,IACPN,YAAaM,KAEjB,CACIV,KAAMW,IACNT,UAAWS,IACXR,MAAOQ,IACPP,YAAaO,KAEjB,CACIX,KAAMY,IACNV,UAAWU,IACXT,MAAOS,IACPR,YAAaQ,KAEjB,CACIZ,KAAMa,IACNX,UAAWW,IACXV,MAAOU,IACPT,YAAaS,KAEjB,CACIb,KAAMc,IACNZ,UAAWY,IACXX,MAAOW,IACPV,YAAaU,KAEjB,CACId,KAAMe,IACNb,UAAWa,IACXZ,MAAOY,IACPX,YAAaW,KAEjB,CACIf,KAAMgB,IACNd,UAAWc,IACXb,MAAOa,IACPZ,YAAaY,KAEjB,CACIhB,KAAMiB,IACNf,UAAWe,IACXd,MAAOc,IACPb,YAAaa,KAEjB,CACIjB,KAAMkB,IACNhB,UAAWgB,IACXf,MAAOe,IACPd,YAAac,KAEjB,CACIlB,KAAMmB,IACNjB,UAAWiB,IACXhB,MAAOgB,IACPf,YAAae,KAEjB,CACInB,KAAMoB,IACNlB,UAAWkB,IACXjB,MAAOiB,IACPhB,YAAagB,KAEjB,CACIpB,KAAMqB,IACNnB,UAAWmB,IACXlB,MAAOkB,IACPjB,YAAaiB,KAEjB,CACIrB,KAAMsB,IACNpB,UAAWoB,IACXnB,MAAOmB,IACPlB,YAAakB,MAEnBC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEtB,UAAYuB,EAAEvB,WAAa,EAAI,MCzIhDwB,EAAO,SAACC,GAEV,IADA,IAAIC,EAAI,EACCC,EAAI,EAAGA,GAAKF,EAAGE,IACpBD,GAAKC,EAET,OAAOD,GAgBEE,EAAb,WAUI,WAAYC,GAAoB,yBAThCC,SAS+B,OAR/BC,cAQ+B,OAP/BC,aAO+B,OAN/BC,eAM+B,OAL/BC,gBAK+B,OAJ/BC,eAI+B,OAH/BC,kBAG+B,OAF/BC,YAE+B,OAD/BC,gBAC+B,EAC3BC,KAAKR,SAAYF,GAAQA,EAAKE,UAAa,EAC3CQ,KAAKP,QAAWH,GAAQA,EAAKG,SAAY,EACzCO,KAAKN,UAAaJ,GAAQA,EAAKI,WAAc,EAC7CM,KAAKL,WAAcL,GAAQA,EAAKK,YAAe,EAC/CK,KAAKJ,UAAaN,GAAQA,EAAKM,WAAc,EAC7CI,KAAKH,aAAgBP,GAAQA,EAAKO,cAAiB,EACnDG,KAAKF,OAAUR,GAAQA,EAAKQ,QAAWxC,IACvC0C,KAAKD,WAAa,GAClBC,KAAKT,IAAOD,GAAQA,EAAKC,KAAQ,GAnBzC,sEAwBQ,OAA6B,EAAtBN,EAAKe,KAAKR,UACU,EAArBP,EAAKe,KAAKP,SACa,EAAvBR,EAAKe,KAAKN,WACc,EAAxBT,EAAKe,KAAKL,YACa,EAAvBV,EAAKe,KAAKJ,WACgB,EAA1BX,EAAKe,KAAKH,cACVG,KAAKF,OAAOG,KAAI,SAAAC,GAAC,OAAIjB,EAAKiB,EAAExC,UAAQyC,QAAO,SAACpB,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,KA9B1E,mDAiCQ,IAAIoB,EAAI,IAKR,OAJAA,GAA8B,GAAzBnE,KAAKF,IAAIiE,KAAKT,IAAK,IACpBS,KAAKT,IAAM,KAAIa,GAAwC,GAAnCnE,KAAKF,IAAIiE,KAAKT,IAAM,GAAI,IAC5CS,KAAKT,IAAM,KAAIa,GAAwC,GAAnCnE,KAAKF,IAAIiE,KAAKT,IAAM,GAAI,KAC5CS,KAAKT,IAAM,KAAIa,GAAwC,EAAnCnE,KAAKF,IAAIiE,KAAKT,IAAM,GAAI,KACzCa,IAtCf,kDA0CQ,OAA2C,EAApCJ,KAAKK,+BA1CpB,gDA8CQ,OAAIL,KAAKT,IAAM,GAAW,EACtBS,KAAKT,IAAM,GAAW,IACtBS,KAAKT,IAAM,GAAW,EACtBS,KAAKT,IAAM,GAAW,KACtBS,KAAKT,IAAM,GAAW,IACtBS,KAAKT,IAAM,GAAW,KACnB,IApDf,qCAwDQ,OAAOS,KAAKR,SAA4B,EAAjBQ,KAAKN,YAxDpC,gCA4DQ,OAAOM,KAAKN,UAA6B,EAAjBM,KAAKJ,YA5DrC,4CAgEQ,OAAO3D,KAAKqE,MAAMN,KAAKR,SAAW,KAhE1C,6CAoEQ,OAAOvD,KAAKqE,MAAMN,KAAKR,SAAW,KApE1C,4CAuEQ,OAAOvD,KAAKqE,MAAMN,KAAKR,SAAW,OAvE1C,K,yjBCnBO,IAAMe,EAAgD,SAACC,GAAW,IAAD,EACtCC,qBAAWC,EAAcF,EAAMG,kBADO,mBAC7DC,EAD6D,KAClDC,EADkD,KAGpE,OAAO,kBAAC1D,EAAA,EAAD,CAAOxB,MAAO,CAAEmF,UAAW,SAC9B,kBAAC1D,EAAA,EAAD,CAAQC,QAAS,kBAAMmD,EAAMO,kBAAkBH,KAA/C,QACA,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,yBAC2BT,EAAUU,0BADrC,MACmEV,EAAUP,6BAD7E,KAC6GO,EAAUW,4BADvH,IAEI,kBAAC,EAAD,CAAOlF,MAAM,WAAWC,MAAOsE,EAAUpB,SAAUjD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,WAAYlF,MAAO4C,MAAxG,uBACA,kBAAC,EAAD,CAAO7C,MAAM,UAAUC,MAAOsE,EAAUnB,QAASlD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,UAAWlF,MAAO4C,MAArG,0BACA,kBAAC,EAAD,CAAO7C,MAAM,YAAYC,MAAOsE,EAAUlB,UAAWnD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,YAAalF,MAAO4C,MAA3G,wBACA,kBAAC,EAAD,CAAO7C,MAAM,aAAaC,MAAOsE,EAAUjB,WAAYpD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,aAAclF,MAAO4C,MAA9G,6CACA,kBAAC,EAAD,CAAO7C,MAAM,YAAYC,MAAOsE,EAAUhB,UAAWrD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,YAAalF,MAAO4C,MAA3G,4CACA,kBAAC,EAAD,CAAO7C,MAAM,eAAeC,MAAOsE,EAAUf,aAActD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,eAAgBlF,MAAO4C,MAApH,mBAEJ,kBAAC8B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,kBAAC,EAAD,CAAOhF,MAAM,MAAML,IAAK,GAAID,IAAK,GAAIO,MAAOsE,EAAUrB,IAAKhD,SAAU,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,MAAOlF,MAAO4C,MAA3G,2FACA,kBAAC/B,EAAA,EAAD,+BAA+ByD,EAAUa,2BACzC,kBAACtE,EAAA,EAAD,oBAAoByD,EAAUc,gBAC9B,kBAACvE,EAAA,EAAD,cAAcyD,EAAUe,WACxB,kBAACxE,EAAA,EAAD,4BAA4ByD,EAAUgB,uBACtC,kBAACzE,EAAA,EAAD,6BAA6ByD,EAAUiB,wBACvC,kBAAC1E,EAAA,EAAD,4BAA4ByD,EAAUkB,wBAE1C,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAClBT,EAAUd,OAAOG,KAAI,SAAAC,GAClB,IAAI1D,EAAmB,EACvB,OAAQ0D,EAAEzC,WACN,IAAK,WAAYjB,EAAWoE,EAAUpB,SAAU,MAChD,IAAK,UAAWhD,EAAWoE,EAAUnB,QAAS,MAC9C,IAAK,YAAajD,EAAWoE,EAAUlB,UAAW,MAClD,IAAK,aAAclD,EAAWoE,EAAUjB,WAAY,MACpD,IAAK,YAAanD,EAAWoE,EAAUhB,UAAW,MAClD,IAAK,eAAgBpD,EAAWoE,EAAUf,aAE9C,OAAO,kBAAC,EAAD,CACHpD,YAAY,EACZD,SAAUA,EACVR,IAAK,GACLD,IAAK,EACLM,MAAO6D,EAAE3C,KAAO,IAAM2C,EAAEzC,UAAUsE,UAAU,EAAG,GAAGC,cAClD1F,MAAO4D,EAAExC,MACTnB,SAAW,SAAA2C,GAAC,OAAI2B,EAAS,CAAEW,OAAQ,QAASjE,KAAM2C,EAAE3C,KAAMjB,MAAO4C,MAC7DgB,EAAEvC,oBAcxB+C,EAAe,SAACuB,EAAkBT,GACpC,OAAQA,EAAOA,QACX,IAAK,WAAY,OAAO,IAAInC,EAAJ,KAAmB4C,EAAnB,CAA0BzC,SAAUgC,EAAOlF,SACnE,IAAK,UAAW,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0BxC,QAAS+B,EAAOlF,SACjE,IAAK,YAAa,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0BvC,UAAW8B,EAAOlF,SACrE,IAAK,YAAa,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0BrC,UAAW4B,EAAOlF,SACrE,IAAK,aAAc,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0BtC,WAAY6B,EAAOlF,SACvE,IAAK,eAAgB,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0BpC,aAAc2B,EAAOlF,SAC3E,IAAK,MAAO,OAAO,IAAI+C,EAAJ,KAAmB4C,EAAnB,CAA0B1C,IAAKiC,EAAOlF,SACzD,IAAK,QACD,IAAI4F,EAAI,IAAI7C,EAAJ,KACD4C,IAGP,OADAC,EAAEpC,OAAOmC,EAAMnC,OAAOqC,WAAU,SAAAjC,GAAC,OAAIA,EAAE3C,OAASiE,EAAOjE,SAAOG,MAAQ8D,EAAOlF,MACtE4F,EAEf,OAAOD,G,gBCzCLG,EAAkC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAY3G,EAAe,EAAfA,SACrD,OAAI2G,EAAmB,6BAAM3G,GACjB,MAQR4G,EAA4B,SAAC9B,GACjC,OAAO,6BAAMA,EAAM+B,QAAQtC,KAAI,SAAAuC,GAAM,OAAI,kBAACpF,EAAA,EAAD,CAAQC,QAAS,kBAAMmD,EAAMiC,SAASD,KAAUA,QAG5EE,EAlDO,WAAO,IAAD,EACMhG,mBAAS,QADf,mBACnBiG,EADmB,KACTC,EADS,KAEtBhC,EAAY,IAAIvB,EAMpB,OACE,yBAAKwD,UAAU,OACb,kBAAC,EAAD,CAAaR,WAAyB,SAAbM,GACvB,kBAACG,EAAA,EAAD,0BACA,kBAAC,EAAD,CAAML,SAAU,SAACD,GAAD,OAAYI,EAAYJ,IAASD,QATzC,CAAC,YACb,gBACA,cACA,mBAQE,kBAAC,EAAD,CAAaF,WAAyB,cAAbM,GACvB,kBAAC,EAAD,CAAgB5B,kBAAmB,SAACgC,GAAQnC,EAAYmC,EAAGH,EAAY,SAAYjC,iBAAkBC,KAEvG,kBAAC,EAAD,CAAayB,WAAyB,kBAAbM,GAAzB,qCAEE,kBAACvF,EAAA,EAAD,CAAQC,QAAS,kBAAMuF,EAAY,UAAnC,MAEF,kBAAC,EAAD,CAAaP,WAAyB,gBAAbM,GAAzB,mCAEE,kBAACvF,EAAA,EAAD,CAAQC,QAAS,kBAAMuF,EAAY,UAAnC,MAEF,kBAAC,EAAD,CAAaP,WAAyB,iBAAbM,GAAzB,oCAEE,kBAACvF,EAAA,EAAD,CAAQC,QAAS,kBAAMuF,EAAY,UAAnC,QCrBYI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.59bfe928.chunk.js","sourcesContent":["    import React from 'react';\r\n\r\nexport const Label: React.FC<{}> = ({children}) => {\r\n    return <label style={{display:'inline-block', minWidth:'140px'}}>{children}</label>;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface FieldProps {\r\n    label: string;\r\n    value: number;\r\n    max?: number;\r\n    min?: number;\r\n    modifier?: number;\r\n    enableDice?: boolean;\r\n    onChange: (n: number) => void;\r\n}\r\n\r\n\r\nconst rand = (min: number, max: number) => {\r\n    return Math.round(Math.random() * (max - min) + min);\r\n};\r\n\r\nconst d10 = () => rand(1, 10);\r\n//results[0] + ' + ' + results[1] + ' ' + \r\nexport const Field: React.FC<FieldProps> = ({ label, value, onChange, max, min, modifier, enableDice, children }) => {\r\n    const [results, setResults] = useState([0, 0]);\r\n    const [viewChildren, setViewChildren] = useState(false);\r\n    let ma = max !== undefined ? max : 10;\r\n    let mi = min !== undefined ? min : 1;\r\n    let total = modifier !== undefined ? value + modifier : value;\r\n    enableDice = enableDice === undefined ? false : enableDice;\r\n    return <Paper>\r\n        <Label>{label}:</Label> <Label>{value} {modifier !== undefined ? ` | ${modifier} | ${total}` : null}</Label>\r\n        <Button onClick={() => onChange(ma <= value ? value : value + 1)}>+</Button>\r\n        <Button onClick={() => onChange(mi >= value ? value : value - 1)}>-</Button>\r\n        {enableDice ? <Button onClick={() => setResults([d10(), d10()])}>&</Button> : null}\r\n        {results[0] !== 0 ? `(${total}) + d10(${results[0]}) + d10(${results[1]}) = ${total + results[0] + results[1]}`\r\n            : null}\r\n            {children !== undefined ? viewChildren === true ? \r\n                <Paper><Button onClick={() => setViewChildren(false)}>X</Button>{children} </Paper>\r\n                : <Button onClick={() => setViewChildren(true)}>?</Button> \r\n            : null}\r\n    </Paper>\r\n}","import * as combat from './skills/combat.json';\r\nimport * as pilot from './skills/pilot.json';\r\nimport * as spells from './skills/spells.json';\r\nimport * as investigation from './skills/investigation.json';\r\nimport * as intimidation from './skills/intimidation.json';\r\nimport * as larceny from './skills/larceny.json';\r\nimport * as stealth from './skills/stealth.json';\r\nimport * as survival from './skills/survival.json';\r\nimport * as science from './skills/science.json';\r\nimport * as computer from './skills/computer.json';\r\nimport * as medicine from './skills/medicine.json';\r\nimport * as surgery from './skills/surgery.json';\r\nimport * as empathy from './skills/empathy.json';\r\nimport * as subtrefuge from './skills/subtrefuge.json';\r\nimport * as athletics from './skills/athletics.json';\r\nimport * as acrobatics from './skills/acrobatics.json';\r\nimport * as search from './skills/search.json';\r\nimport * as slightOfHand from './skills/slightOfHand.json';\r\nimport * as persuation from './skills/persuation.json';\r\n\r\n\r\nexport interface Skill {\r\n    name: string;\r\n    attribute: string | 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\r\n    level: number;\r\n    description: string;\r\n}\r\nexport const GetSkillList = (): Skill[] => {\r\n\r\n\r\n    return [\r\n        {\r\n            name: combat.name,\r\n            attribute: combat.attribute,\r\n            level: combat.level,\r\n            description: combat.description\r\n        },\r\n        {\r\n            name: pilot.name,\r\n            attribute: pilot.attribute,\r\n            level: pilot.level,\r\n            description: pilot.description\r\n        },\r\n        {\r\n            name: spells.name,\r\n            attribute: spells.attribute,\r\n            level: spells.level,\r\n            description: spells.description\r\n        },\r\n        {\r\n            name: investigation.name,\r\n            attribute: investigation.attribute,\r\n            level: investigation.level,\r\n            description: investigation.description\r\n        },\r\n        {\r\n            name: persuation.name,\r\n            attribute: persuation.attribute,\r\n            level: persuation.level,\r\n            description: persuation.description\r\n        },\r\n        {\r\n            name: intimidation.name,\r\n            attribute: intimidation.attribute,\r\n            level: intimidation.level,\r\n            description: intimidation.description\r\n        },\r\n        {\r\n            name: larceny.name,\r\n            attribute: larceny.attribute,\r\n            level: larceny.level,\r\n            description: larceny.description\r\n        },\r\n        {\r\n            name: stealth.name,\r\n            attribute: stealth.attribute,\r\n            level: stealth.level,\r\n            description: stealth.description\r\n        },\r\n        {\r\n            name: survival.name,\r\n            attribute: survival.attribute,\r\n            level: survival.level,\r\n            description: survival.description\r\n        },\r\n        {\r\n            name: science.name,\r\n            attribute: science.attribute,\r\n            level: science.level,\r\n            description: science.description\r\n        },\r\n        {\r\n            name: computer.name,\r\n            attribute: computer.attribute,\r\n            level: computer.level,\r\n            description: computer.description\r\n        },\r\n        {\r\n            name: medicine.name,\r\n            attribute: medicine.attribute,\r\n            level: medicine.level,\r\n            description: medicine.description\r\n        },\r\n        {\r\n            name: surgery.name,\r\n            attribute: surgery.attribute,\r\n            level: surgery.level,\r\n            description: surgery.description\r\n        },\r\n        {\r\n            name: empathy.name,\r\n            attribute: empathy.attribute,\r\n            level: empathy.level,\r\n            description: empathy.description\r\n        },\r\n        {\r\n            name: subtrefuge.name,\r\n            attribute: subtrefuge.attribute,\r\n            level: subtrefuge.level,\r\n            description: subtrefuge.description\r\n        },\r\n        {\r\n            name: athletics.name,\r\n            attribute: athletics.attribute,\r\n            level: athletics.level,\r\n            description: athletics.description\r\n        },\r\n        {\r\n            name: acrobatics.name,\r\n            attribute: acrobatics.attribute,\r\n            level: acrobatics.level,\r\n            description: acrobatics.description\r\n        },\r\n        {\r\n            name: search.name,\r\n            attribute: search.attribute,\r\n            level: search.level,\r\n            description: search.description\r\n        },\r\n        {\r\n            name: slightOfHand.name,\r\n            attribute: slightOfHand.attribute,\r\n            level: slightOfHand.level,\r\n            description: slightOfHand.description\r\n        }\r\n    ].sort((a, b) => a.attribute < b.attribute ? -1 : 1);\r\n}","import { Skill, GetSkillList } from \"./Skills\";\r\n\r\ninterface Technique {\r\n    name: string;\r\n    bonus: string;\r\n    cost: number;\r\n}\r\n\r\nconst fSum = (n: number): number => {\r\n    let x = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        x += i;\r\n    }\r\n    return x;\r\n};\r\n\r\ninterface ICharacter {\r\n\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    techniques: Technique[];\r\n}\r\n\r\nexport class Character {\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    techniques: Technique[];\r\n    constructor(copy?: ICharacter) {\r\n        this.strength = (copy && copy.strength) || 5;\r\n        this.agility = (copy && copy.agility) || 5;\r\n        this.endurance = (copy && copy.endurance) || 5;\r\n        this.perception = (copy && copy.perception) || 5;\r\n        this.willpower = (copy && copy.willpower) || 5;\r\n        this.intelligence = (copy && copy.intelligence) || 5;\r\n        this.skills = (copy && copy.skills) || GetSkillList();\r\n        this.techniques = [];\r\n        this.age = (copy && copy.age) || 18;\r\n    }\r\n\r\n\r\n    public getCalculatedPointsUsed() {\r\n        return fSum(this.strength) * 4\r\n            + fSum(this.agility) * 4\r\n            + fSum(this.endurance) * 4\r\n            + fSum(this.perception) * 4\r\n            + fSum(this.willpower) * 4\r\n            + fSum(this.intelligence) * 4\r\n            + this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0);\r\n    }\r\n    public getStartingPointsAvailable() {\r\n        let p = 200;\r\n        p += Math.min(this.age, 18) * 20;\r\n        if (this.age > 18) p += Math.min(this.age - 18, 26 - 18) * 15;\r\n        if (this.age > 26) p += Math.min(this.age - 26, 40 - 26) * 10;\r\n        if (this.age > 40) p += Math.min(this.age - 40, 70 - 40) * 5;\r\n        return p;\r\n    }\r\n\r\n    public getMaximumPointsAvailable() {\r\n        return this.getStartingPointsAvailable() * 2;\r\n    }\r\n\r\n    public getExperienceMultiplier() {\r\n        if (this.age < 16) return 3;\r\n        if (this.age < 20) return 2.5;\r\n        if (this.age < 24) return 2;\r\n        if (this.age < 28) return 1.75;\r\n        if (this.age < 32) return 1.5;\r\n        if (this.age < 36) return 1.25;\r\n        return 1;\r\n    }\r\n\r\n    public getHitpoints() {\r\n        return this.strength + this.endurance * 2;\r\n    }\r\n\r\n    public getMana() {\r\n        return this.endurance + this.willpower * 2\r\n    }\r\n\r\n    public getDamageBonusSmall() {\r\n        return Math.floor(this.strength / 4);\r\n    }\r\n\r\n    public getDamageBonusMedium() {\r\n        return Math.floor(this.strength / 3);\r\n    }\r\n    public getDamageBonusLarge() {\r\n        return Math.floor(this.strength / 2);\r\n    }\r\n}","import React, {  useReducer } from 'react';\r\nimport { Field } from './Field';\r\nimport { Paper, Grid,Button } from '@material-ui/core';\r\nimport { Character } from './Character';\r\n\r\ninterface CharacterSheetProps {\r\n    initialCharacter: Character;\r\n    characterCallback:(c:Character) => void;\r\n}\r\n\r\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\r\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\r\n\r\n    return <Paper style={{ textAlign: 'left' }}>\r\n        <Button onClick={() => props.characterCallback(character)}>exit</Button>\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} sm={6}>\r\n                Character points used {character.getCalculatedPointsUsed()} / {character.getStartingPointsAvailable()} ({character.getMaximumPointsAvailable()})\r\n                <Field label='strength' value={character.strength} onChange={n => dispatch({ action: 'strength', value: n })}>Raw muscle strength</Field>\r\n                <Field label='agility' value={character.agility} onChange={n => dispatch({ action: 'agility', value: n })}>Steady hands, reflexes</Field>\r\n                <Field label='endurance' value={character.endurance} onChange={n => dispatch({ action: 'endurance', value: n })}>Ability to last long</Field>\r\n                <Field label='perception' value={character.perception} onChange={n => dispatch({ action: 'perception', value: n })}>eyesight, hearing, and how much you smell</Field>\r\n                <Field label='willpower' value={character.willpower} onChange={n => dispatch({ action: 'willpower', value: n })}>ability to say \"no\" when it's sooo good</Field>\r\n                <Field label='intelligence' value={character.intelligence} onChange={n => dispatch({ action: 'intelligence', value: n })}>big brainy boy</Field>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <Field label='age' max={80} min={15} value={character.age} onChange={n => dispatch({ action: 'age', value: n })}>Your age determines your starting, maximum experience, as well as experience multiplier</Field>\r\n                <Paper>Experience multiplier: {character.getExperienceMultiplier()}</Paper>\r\n                <Paper>Hit points: {character.getHitpoints()}</Paper>\r\n                <Paper>mana: {character.getMana()}</Paper>\r\n                <Paper>damage bonus small: {character.getDamageBonusSmall()}</Paper>\r\n                <Paper>damage bonus medium: {character.getDamageBonusMedium()}</Paper>\r\n                <Paper>damage bonus large: {character.getDamageBonusLarge()}</Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                {character.skills.map(s => {\r\n                    let modifier: number = 0;\r\n                    switch (s.attribute) {\r\n                        case 'strength': modifier = character.strength; break;\r\n                        case 'agility': modifier = character.agility; break;\r\n                        case 'endurance': modifier = character.endurance; break;\r\n                        case 'perception': modifier = character.perception; break;\r\n                        case 'willpower': modifier = character.willpower; break;\r\n                        case 'intelligence': modifier = character.intelligence; break;\r\n                    }\r\n                    return <Field\r\n                        enableDice={true}\r\n                        modifier={modifier}\r\n                        max={30}\r\n                        min={0}\r\n                        label={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()} \r\n                        value={s.level} \r\n                        onChange={(n => dispatch({ action: 'skill', name: s.name, value: n }))}>\r\n                           {s.description} \r\n                    </Field>\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>;\r\n}\r\n\r\ninterface dispatcher {\r\n    action: string;\r\n    name?: string;\r\n    value: number;\r\n}\r\n\r\nconst useCharacter = (state: Character, action: dispatcher): Character => {\r\n    switch (action.action) {\r\n        case 'strength': return new Character({ ...state, strength: action.value });\r\n        case 'agility': return new Character({ ...state, agility: action.value });\r\n        case 'endurance': return new Character({ ...state, endurance: action.value });\r\n        case 'willpower': return new Character({ ...state, willpower: action.value });\r\n        case 'perception': return new Character({ ...state, perception: action.value });\r\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\r\n        case 'age': return new Character({ ...state, age: action.value });\r\n        case 'skill':\r\n            let r = new Character({\r\n                ...state\r\n            });\r\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\r\n            return r;\r\n    }\r\n    return state;\r\n}","import React, { useState } from 'react';\nimport { CharacterSheet } from './components/CharacterSheet';\nimport './App.css';\nimport { Character } from './components/Character';\nimport { Button, DialogTitle } from '@material-ui/core';\n\nconst App: React.FC = () => {\n  const [viewMode, setViewMode] = useState('main');\n  let character = new Character();\n  let options = ['character',\n    'player manual',\n    'game master',\n    'world & lore'];\n\n  return (\n    <div className=\"App\">\n      <Conditional shouldView={viewMode === 'main'}>\n        <DialogTitle>Infinite Darkness</DialogTitle>\n        <Menu callback={(option) => setViewMode(option)} options={options} />\n      </Conditional>\n      <Conditional shouldView={viewMode === 'character'}>\n        <CharacterSheet characterCallback={(c) => { character = c; setViewMode('main'); }} initialCharacter={character} />\n      </Conditional>\n      <Conditional shouldView={viewMode === 'player manual'}>\n        player manual, work in progress...\n        <Button onClick={() => setViewMode('main')}>X</Button>\n      </Conditional>\n      <Conditional shouldView={viewMode === 'game master'}>\n        game master, work in progress...\n        <Button onClick={() => setViewMode('main')}>X</Button>\n      </Conditional>\n      <Conditional shouldView={viewMode === 'world & lore'}>\n        world & lore, work in progress...\n        <Button onClick={() => setViewMode('main')}>X</Button>\n      </Conditional>\n    </div>\n  );\n}\ninterface ItemProp {\n  shouldView: boolean;\n}\n\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\n  if (shouldView) return <div>{children}</div>;\n  else return null;\n}\n\ninterface MenuProps {\n  callback: (option: string) => void;\n  options: string[];\n}\n\nconst Menu: React.FC<MenuProps> = (props) => {\n  return <div>{props.options.map(option => <Button onClick={() => props.callback(option)}>{option}</Button>)}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}