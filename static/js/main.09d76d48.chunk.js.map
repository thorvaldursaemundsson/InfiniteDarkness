{"version":3,"sources":["components/equipment/Item.ts","components/general/Skills.tsx","components/general/HideText.tsx","components/Character.tsx","utils/utilFunctions.tsx","components/races/Races.ts","components/Section.tsx","components/equipment/Armors.ts","utils/Conditional.tsx","components/equipment/Firearms.ts","components/races/Humans.ts","components/races/Merlions.ts","components/races/Nekovians.ts","components/races/Shambras.ts","components/races/Synth.ts","utils/usePersistentState.tsx","components/equipment/Consumables.ts","components/perks/Spells.tsx","components/skills/computer.ts","components/skills/empathy.ts","components/skills/intimidation.ts","components/skills/investigation.ts","components/skills/larceny.ts","components/skills/medicine.ts","components/skills/persuasion.ts","components/skills/pilot.ts","components/skills/spells.ts","components/skills/subterfuge.ts","components/skills/mechanics.tsx","components/skills/streetwise.ts","components/skills/Science.ts","components/skills/electronics.ts","components/skills/explosives.ts","components/skills/generalknowledge.ts","components/skills/savoir-faire.ts","components/general/GetSkillList.tsx","components/skills/acrobatics.ts","components/skills/athletics.ts","components/skills/combat.ts","components/skills/firearms.ts","components/skills/stealth.ts","components/skills/survival.ts","components/skills/cooking.ts","components/traits/Traits.ts","components/equipment/MeleeWeapons.ts","components/equipment/FirearmCrafter.tsx","components/equipment/ArmorCrafter.tsx","components/general/Perks.tsx","components/perks/Combat.ts","components/perks/Firearms.ts","components/perks/Pilot.ts","components/perks/Investigation.ts","components/perks/Intimidation.ts","components/perks/Larceny.ts","components/perks/Stealth.ts","components/perks/Survival.ts","components/perks/Computer.ts","components/perks/Medicine.ts","components/perks/Empathy.ts","components/perks/Subterfuge.ts","components/perks/Athletics.ts","components/perks/Acrobatics.ts","components/perks/Persuasion.ts","components/perks/Streetwise.ts","components/perks/Science.ts","components/perks/SavoirFaire.ts","components/perks/Cooking.ts","components/perks/Electronics.ts","components/perks/Explosives.ts","components/perks/GeneralKnowledge.ts","components/perks/Mechanics.ts","components/general/GetPerkList.ts","components/general/useCharacter.ts","components/FloatingSection.tsx","views/CharacterSheet.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Condition","label","effect","valueModifier","Quality","D","n","s","sides","numberOfDice","bonus","writeDamageDice","d","b","Math","abs","SkillTemplate","name","description","useCases","level","this","HideText","isEdit","txt","explain","className","HideNumber","EditNumber","onChange","type","e","p","parseFloat","isNaN","parseNumber","target","value","SelectText","options","useState","isOpen","setIsOpen","onFocus","map","option","onClick","EditText","fSum","x","i","CharacterSizes","CharacterSizeMods","size","strengthMod","secondaryMod","damageAbsorbtion","speedBase","averageHeight","averageWeight","consumption","lifeMod","Character","copy","species","gender","age","background","strength","agility","endurance","perception","willpower","intelligence","skills","perks","traits","bonusExp","GetSkillList","undefined","length","cost","reduce","a","t","intMultipler","getCharacterPointsCostPerks","getCharacterPointsCostSkills","getCharacterPointsCostTraits","getCalculatedPointsUsed","getCharacterPointsCostAttribute","getStartingPointsAvailable","skillName","skill","find","f","getHook","combat","getSkillLevel","acrobatics","getPassiveDefense","max","getBaseDefense","findDefenseFromSize","getDefenseFromSize","limitMod","getCarryCapacity","findSpeedFromSize","athletics","getSpeedFromSpecies","getSizeSpeed","getSpeedFromSkill","limitPenalty","humansData","experienceMultipler","merlionsData","shambrasData","nekovianData","synthsData","athleticsBonus","getLifeModSize","findLifeFromSize","spellsBonus","spells","mentalHealthBonus","applyTo","sumOr","calculateActionPoints","what","sum","or","filter","perk","amount","Error","experiencePoints","character","floor","weightConverter","grams","toFixed","bigNumberSeparator","numb","toString","replace","RollDice","sidesPerDice","Array","random","Selector","values","callback","preset","v","key","selected","findRacialModFromRage","output","racialMods","irm","ageSpan","shuffle","array","randomIndex","currentIndex","newArray","CharacterPoints","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","min","getExperienceAges","raceData","maxAge","index","arr","exp","mult","Section","title","tab","border","children","initiallyOpen","usePersistentState","tabSize","style","paddingLeft","bodySuits","damageReduction","minimumDamage","weight","actionPointMod","armorType","armorPlates","powerArmors","perceptionMod","integratedSystems","abilityModifiers","stack","ability","modifier","Conditional","shouldView","fallback","AmmoTypesInformation","ammo","types","loudness","deafnessRange","deafnessTime","hearingRange","AmmoModifications","hitAdd","damageAdd","armorPiercingMultiplier","armorPiercingAdd","rangeMultiplier","damageMultiplier","splashMultiplier","FireArm","damage","fireArmClass","range","fireAction","capacity","strengthRequirement","hitbonus","armorpiercing","rps","splashRange","lowDamageZone","reload","fireCost","relatedSkill","ammoModification","firearmModification","quality","condition","getQualityBonus","getConditionBonus","getAmmoHitBonus","getModHitBonus","getAmmoArmorPercingBonus","getModArmorPercingBonus","getAmmoArmorPercingFactor","getModDamageBonus","getAmmoDamageBonus","hitMod","armorPiercingMod","damageMod","Firearms","FirearmModifications","effects","costMultiplier","rangeMod","weightMultiplier","ammoCapacityMod","pointBuyMod","sizeOptions","special","defaultValue","str","sessionStorage","getItem","def","JSON","parse","state","setState","useEffect","setItem","stringify","ConsumableWeapons","charges","ConsumableTools","ConsumableMedicine","medicineSkillRolls","spellhook","SpellTemplate","actionPoints","results","rangeText","castingText","DimensionalSwap","Splinter","Unmask","UmbraConstant","MirrorTrap","DarkVortex","LuminiferousTransubstantiation","ColorBias","Rift","Conversation","HyperSight","Tesseraction","SensoryMeld","EmapthicEqualibrium","SpiritualRegeneration","Quintessence","SolarFlare","QuantumLeap","Assimilation","ManipulateSpacetime","MoteOfPureEntropy","Precognition","ThoughtInvasion","Electrostatic","FalseDeath","SpellsPerks","Computer","attribute","Empathy","Intimidation","Investigation","Larceny","Medicine","Persuasion","Pilot","Spells","Subterfuge","Mechanics","Streetwise","Science","Electronics","Explosives","GeneralKnowledge","SavoirFaire","Acrobatics","Athletics","Combat","Stealth","Survival","Cooking","sort","toLowerCase","Coward","race","Brave","FoolHardy","Frail","Resillient","Reckless","Gifted","FastMetabolism","DoubleHanded","Phobia","WealthyFamily","LightningReflexes","Frugal","Durable","MentallyFlexible","Stubborn","ForgetfulFace","Blind","Deaf","Mute","NaturalTalent","Conspiritorial","PersonOfAction","Flight","Blubber","Magnetoreception","HardShell","Hyperredolexant","GetTraits","MeleeWeapons","numberOrZero","DisplayFirearm","firearm","ammoType","setAmmoType","selectedFirearmMods","setSelectedFirearmMods","setQuality","setCondition","ammoMod","maybeMod","am","toLocaleLowerCase","ammoModGetter","firearmModsCost","sfm","firearmModsCostMultiplier","firearmModsStrengthMod","firearmModsDamageMod","firearmModsRangeMod","firearmModsWeightMod","firearmModsWeightMultMod","firearmModsAmmoMultMod","ammoCost","width","rowSpan","fm","isSelected","mod","current","checked","parseInt","c","q","getHitBonus","getArmorPercing","join","colSpan","getAmmoByName","maybeAmmo","FirearmCrafter","onGetFirearm","setFirearm","firearmName","setter","maybeFirearm","selectFirearm","getSizeMod","FullArmor","data","bodySuit","armorPlate","powerArmor","integratedSystemsOnArmor","longDescription","getWeight","getName","getValue","bodySuitDr","armorPlateDr","powerArmorDr","bodySuitM","armorPlateM","powerArmorM","m","ArmorCrafter","setBodySuit","setArmorPlate","setPowerArmor","setIntegratedSystemsOnArmor","qualityMod","setQualityMod","setSize","protectionAmount","setProtectionAmount","theArmor","getDamageAbsorbtion","damageMinimum","bs","ap","pa","is","add","item","getActionPointMod","getStrengthMod","getPerceptionMod","PerkTemplate","hook","Deflection","LightWeaponSpecialization","LightWeaponsMaster","MediumWeaponSpecialization","MediumWeaponMaster","HeavyWeaponSpecialization","HeavyWeaponMaster","MartialArts","MartialArtsExpert","MartialArtsMaster","Disarm","DualWeaponFighter","DualWeaponMaster","Barbarian","Berzerker","Beast","CombatPerks","HandGunSpecialization","HandGunExpert","HandGunMaster","RifleSpecialization","RifleExpert","MachineGunSpecialization","MachineGunExpert","RocketLaunchersSpecialization","LaserSpecialization","LaserExpert","PlasmaSpecialization","PlasmaExpert","Sniper","Marksman","DeadEye","DeadlyShot","AnnihilatingShot","FastShooter","Suppressor","RapidReload","HeavyHandle","FirearmsPerks","QualifiedForCar","QualifiedForBoat","QualifiedForShip","QualifiedForSubmarine","QualifiedForAirplane","QualifiedForSpaceship","PilotPerks","InvestigationPerks","IntimidationPerks","LarcenyPerks","StealthPerks","SurvivalPerks","ComputerPerks","Healer","MedicineExpert","Surgeon","Diagnostician","MedicinePerks","Mentalist","EmpathicListener","EmpathyPerks","SubtreFugePerks","Climber","DistanceThrower","Runner","Jumper","AthleticsPerks","Balance","AccurateThrower","Dodger","Evasive","Elusive","RapidMovement","AcrobaticsPerks","PersuasionPerks","StreetwisePerks","Physicist","AdvancedPhysicist","Chemist","AdvancedChemist","SciencePerks","SavoirFairePerks","CookingPerks","ElectronicsPerks","ExplosivesPerks","GeneralKnowledgePerks","MechanicsPerks","GetPerkList","sortPerk","GetPerkListBySkills","prevPerk","nextPerk","getSizeFromString","stringToRace","useCharacter","action","r","findIndex","perkToAdd","pta","traitToAdd","isMoving","xDispatcher","yDispatcher","offsetX","offsetY","stopMoving","FloatingSection","setX","y","setY","left","top","cursor","onMouseDown","event","currentX","currentY","screenX","screenY","mouseDown","onMouseUp","onMouseOut","onMouseLeave","onMouseMove","onMouseEnter","Button","CharacterSheet","props","useReducer","initialCharacter","dispatch","viewState","setViewState","viewTraitList","setViewTraitList","viewPerkList","setViewPerkList","inventory","setInventory","isAddingInventory","setIsAddingInventory","carryWeight","characterDamageReduction","getDamageAbsorption","armors","damageAbsFromInventory","damageAbsInventory","minDamageFromInventory","damageAbs","minDamage","getLife","getMentalHealth","getSequence","getCalculatedPointsLeft","getActiveDefense","getExperienceMultiplier","getBaseCarryingCapacity","getBaseSpeed","getMana","getActionPoints","Pad","perkBySkill","skillRanks","padSize","trait","marginTop","verticalAlign","items","w","damageDice","getDamageDice","removeItem","arm","consumables","currentList","remove","ViewFireArms","ViewConsumables","minSize","ar","counter","push","SmallLabel","Battleview","lazy","SkillPerkManual","GameMaster","WorldAndLore","PlayerManual","getOrNull","test","RoutableApp","initialView","levelTwo","viewMode","setViewMode","setCharacter","DialogTitle","textDecoration","color","clear","characterCallback","route","Menu","active","Tab","App","text","params","URLSearchParams","window","location","search","get","split","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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,4IACA,mIACA,+IACA,gFACA,+JAIFc,EAAe,IAAId,EACrB,eACA,sQACA,EACA,YACA,CACI,eACA,4CACA,4CACA,0BACA,gDAIFe,EAAa,IAAIf,EACnB,cACA,0KACA,EACA,WACA,CACI,eACA,yCACA,0CAGFgB,EAAe,IAAIhB,EACrB,eACA,qRACA,EACA,yBACA,CACI,eACA,wCACA,yCACA,uDAIFiB,EAAc,IAAIjB,EACpB,eACA,wcACA,EACA,4BACA,CACI,eACA,wCACA,0CACA,yBACA,gFAIFkB,EAAsB,IAAIlB,EAC5B,uBACA,qSACA,EACA,2BACA,CACI,eACA,0DAIFmB,EAAwB,IAAInB,EAC9B,yBACA,oFACA,EACA,6BACA,CACI,qDACA,sEACA,6EACA,iKAIFoB,EAAe,IAAIpB,EACrB,eACA,iOACA,EACA,WACA,CACI,kEACA,+BACA,2BACA,6BACA,0BACA,4BACA,2FACA,6FACA,2EAIFqB,EAAa,IAAIrB,EACnB,cACA,gcACA,EACA,2BACA,CACI,gGACA,4FACA,+DACA,6EACA,iEACA,eACA,qEACA,4CACA,6DAIFsB,EAAc,IAAItB,EACpB,eACA,2eACA,EACA,WACA,CACI,0GACA,+CACA,kIACA,mJACA,uGACA,8CACA,uEAIFuB,EAAe,IAAIvB,EACrB,eACA,weACA,EACA,QACA,CACI,eACA,+DACA,uDACA,+DACA,uEACA,yHAIFwB,EAAsB,IAAIxB,EAC5B,uBACA,6gBACA,EACA,aACA,CACI,eACA,gHACA,yEACA,kEACA,uEAIFyB,EAAoB,IAAIzB,EAC1B,uBACA,uiBACA,EACA,YACA,CACI,eACA,mCACA,kFACA,+JACA,oIACA,kNACA,uGACA,0IACA,gKACA,uDACA,sHACA,4HACA,+FAIF0B,EAAe,IAAI1B,EACrB,eACA,yaACA,OACA/M,EACA,CACI,4CACA,4CACA,8CACA,0CACA,4CACA,4CACA,6CACA,+CAIF0O,EAAkB,IAAI3B,EACxB,mBACA,4VACA,EACA,YACA,CACI,eACA,0EACA,wIACA,oFACA,4LAIF4B,EAAgB,IAAI5B,EACtB,gBACA,+UACA,EACA,QACA,CACI,uCACA,8DACA,kOACA,8OACA,kNACA,oGAIF6B,EAAa,IAAI7B,EACnB,cACA,ufACA,EACA,4BACA,CACI,eACA,uDACA,8CACA,8JA2MK8B,EAAc,CAtMP,IAAI9B,EACpB,eACA,uPACA/M,OACAA,EACA,CACI,+CACA,qDACA,8GACA,gDACA,gDAIQ,IAAI+M,EAChB,UACA,oWACA,OACA/M,EACA,CACI,yDACA,kEACA,sEACA,wDACA,gCAIO,IAAI+M,EACf,SACA,yVACA/M,OACAA,EACA,CACI,6EACA,+DAIS,IAAI+M,EACjB,WACA,yWACA,OACA/M,EACA,CACI,oGACA,eACA,qDACA,mCACA,kCACA,wEAIS,IAAI+M,EACjB,YACA,wOACA/M,EACA,QACA,CACI,mHACA,2HACA,wHACA,wLACA,2LAIO,IAAI+M,EACf,SACA,8SACA,OACA/M,EACA,CACI,2CACA,8EACA,2EACA,oCACA,iCACA,8FACA,qDACA,qDACA,wOAIY,IAAI+M,EACpB,eACA,6YACA,OACA/M,EACA,CACI,mCACA,sFACA,gJACA,6EAIW,IAAI+M,EACnB,eACA,ybACA,OACA/M,EACA,CACI,4HACA,iNACA,wFAIU,IAAI+M,EAClB,aACA,oPACA,OACA/M,EACA,CACI,uGACA,iEACA,2CACA,kLACA,uNAIY,IAAI+M,EACpB,eACA,4KACA,OACA/M,EACA,CACI,gIACA,qWACA,4JAIwB,IAAI+M,EAChC,2BACA,8dACA,EACA,OACA,CACI,6GACA,eACA,eACA,iBAIY,IAAIA,EACpB,cACA,4cACA/M,OACAA,EACA,CACI,+CACA,4CACA,2DACA,4BACA,8FACA,qDACA,qDACA,4KACA,2BAIoB,IAAI+M,EAC5B,uBACA,gHACA/M,OACAA,EACA,CACI,yBACA,+BACA,gCACA,iCACA,gCACA,+BACA,2BAIe,IAAI+M,EACvB,mBACA,4KACA,EACA,WACA,CACI,iDACA,2JACA,+IACA,mNACA,6TAOJK,EAAiBC,EAAUC,EAAQC,EAAeC,EAAYC,EAAYC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","file":"static/js/main.09d76d48.chunk.js","sourcesContent":["import { SkillName } from \"../general/Skills\";\r\n\r\nexport type qualityMod = 3 | 2 | 1 | 0 | -1 | -2 | -3 | -4;\r\nexport type conditionMod = 2 | 1 | 0 | -1 | -2 | -3 | -4;\r\n\r\ninterface Item {\r\n    /** grams */\r\n    weight: number;\r\n    value: number;\r\n    description?: string;\r\n    longDescription?: string | undefined;\r\n    name: string;\r\n    relatedSkill: SkillName;\r\n    condition?: undefined | ICondition;\r\n    quality?: undefined | IQuality;\r\n}\r\n\r\nexport interface IQuality {\r\n    label: string;\r\n    effect: number;\r\n    valueModifier: number;\r\n}\r\n\r\nexport interface ICondition {\r\n    label: string;\r\n    /** bonus or penalty to skill roll */\r\n    effect: number;\r\n    /** factor of value */\r\n    valueModifier: number;\r\n}\r\n\r\nexport const Condition: ICondition[] = [\r\n    {\r\n        label: 'Pristine',\r\n        effect: +2,\r\n        valueModifier: 1\r\n    },\r\n    {\r\n        label: 'Intact',\r\n        effect: +1,\r\n        valueModifier: .9\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        effect: 0,\r\n        valueModifier: .8\r\n    },\r\n    {\r\n        label: 'Used',\r\n        effect: -1,\r\n        valueModifier: .7\r\n    },\r\n    {\r\n        label: 'Worn',\r\n        effect: -2,\r\n        valueModifier: .6\r\n    },\r\n    {\r\n        label: 'Damaged',\r\n        effect: -3,\r\n        valueModifier: .5\r\n    },\r\n    {\r\n        label: 'Broken',\r\n        effect: -4,\r\n        valueModifier: .5\r\n    }\r\n];\r\n\r\nexport const Quality: IQuality[] = [\r\n    {\r\n        label: 'Superb',\r\n        effect: 3,\r\n        valueModifier: 10\r\n    },\r\n    {\r\n        label: 'Great',\r\n        effect: 2,\r\n        valueModifier: 3\r\n    },\r\n    {\r\n        label: 'Good',\r\n        effect: 1,\r\n        valueModifier: 1.5\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        effect: 0,\r\n        valueModifier: 1\r\n    },\r\n    {\r\n        label: 'Poor',\r\n        effect: -1,\r\n        valueModifier: .9\r\n    },\r\n    {\r\n        label: 'Bad',\r\n        effect: -2,\r\n        valueModifier: .7\r\n    },\r\n    {\r\n        label: 'Awful',\r\n        effect: -3,\r\n        valueModifier: .5\r\n    },\r\n    {\r\n        label: 'Trash',\r\n        effect: -4,\r\n        valueModifier: .4\r\n    },\r\n];\r\n\r\nexport interface IDamageDice {\r\n    sides: number;\r\n    numberOfDice: number;\r\n    bonus: number;\r\n}\r\n\r\n/**\r\n* \r\n* @param n number of dice\r\n* @param s sides per dice\r\n* @param b flat bonus damage\r\n* @returns \r\n*/\r\nexport const D = (n: number, s: number): IDamageDice => {\r\n    return {\r\n        sides: s, numberOfDice: n, bonus: 0\r\n    };\r\n}\r\n\r\nexport const writeDamageDice = (d: IDamageDice, b: number) => {\r\n    if (d.bonus + b === 0) return `${d.numberOfDice}d${d.sides}`;\r\n    else if (d.bonus + b > 0) return `${d.numberOfDice}d${d.sides} + ${d.bonus + b}`;\r\n    if (d.bonus + b < 0) return `${d.numberOfDice}d${d.sides} - ${Math.abs(d.bonus + b)}`;\r\n}\r\n\r\n\r\n\r\nexport default Item;","\r\nexport type SkillName = 'acrobatics'|'athletics'|'combat'|'computer'|'cooking'|'electronics'|'empathy'|'explosives'|'firearms'|'general knowledge'|'intimidation'|'investigation'|'larceny'|'mechanics'|'medicine'|'persuasion'|'pilot'|'savoir-faire'|'science'|'spells'|'stealth'|'streetwise'|'subterfuge'|'survival';\r\n\r\nexport type abilities = 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\r\n\r\nexport interface UseCase {\r\n    attribute: abilities;\r\n    name: string;\r\n    description: string;\r\n    results?: string[];\r\n    type: 'active' | 'passive';\r\n}\r\n\r\nexport interface Skill {\r\n    name: SkillName;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n}\r\n\r\n\r\nexport class SkillTemplate implements Skill {\r\n    name: SkillName;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n    constructor(name: SkillName, description: string, useCases: UseCase[], level = 0) {\r\n        this.name = name;\r\n        this.level = level;\r\n        this.description = description;\r\n        this.useCases = useCases;\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\ninterface IHideText {\r\n    isEdit: \"edit\" | \"print\" | \"explain\" | \"hide\";\r\n    explain: string;\r\n    txt: string;\r\n}\r\n\r\nexport const HideText: React.FC<IHideText> = ({ isEdit, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <span className='no-print'>{txt}</span>;\r\n    else if (isEdit === \"explain\")\r\n        return <span className='no-print'>{explain}</span>;\r\n    else return null;\r\n}\r\n\r\ninterface IEditText extends IHideText {\r\n    onChange: (str: string) => void;\r\n}\r\n\r\nconst EditText: React.FC<IEditText> = ({ isEdit, onChange, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <input className='no-print' type=\"text\" onChange={(e) => onChange(e.target.value)} value={txt}></input>\r\n    else return <HideText txt={txt} isEdit={isEdit} explain={explain} />\r\n}\r\n\r\ninterface IHideNumber {\r\n    isEdit: \"edit\" | \"print\" | \"explain\" | \"hide\";\r\n    explain: string;\r\n    txt: number;\r\n}\r\n\r\nexport const HideNumber: React.FC<IHideNumber> = ({ isEdit, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <span className='no-print'>{txt}</span>;\r\n    else if (isEdit === \"explain\")\r\n        return <span className='no-print'>{explain}</span>;\r\n    else return null;\r\n}\r\n\r\ninterface IEditNumber extends IHideNumber {\r\n    onChange: (str: number) => void;\r\n}\r\nconst parseNumber = (p:string, d:number):number => {\r\n    const n = parseFloat(p);\r\n    if (isNaN(n)) return d;\r\n    return n;\r\n};\r\nexport const EditNumber: React.FC<IEditNumber> = ({ isEdit, onChange, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <input className='no-print' type=\"text\" onChange={(e) => onChange(parseNumber(e.target.value, txt))} value={txt}></input>\r\n    else return <HideNumber txt={txt} isEdit={isEdit} explain={explain} />\r\n}\r\n\r\ninterface ISelectText extends IEditText {\r\n    options: string[];\r\n}\r\n\r\nexport const SelectText: React.FC<ISelectText> = ({ isEdit, onChange, txt, explain, options }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    if (isEdit === \"edit\") {\r\n        return <>\r\n            <input onFocus={() => setIsOpen(true)} className='no-print' type=\"text\" onChange={(e) => onChange(e.target.value)} value={txt}></input>\r\n            {isOpen &&\r\n                <span className=\"SelectTextBlock\">\r\n                    {options.map(option => <span className=\"SelectTextOption\" onClick={() => { onChange(option); setIsOpen(false); }}>{option}</span>)}\r\n                </span>}\r\n        </>\r\n    }\r\n    else return <HideText txt={txt} isEdit={isEdit} explain={explain} />\r\n}\r\n\r\n\r\nexport default EditText;","import { Skill } from \"./general/Skills\";\r\nimport { Perk } from './general/Perks';\r\nimport { Trait } from \"./traits/Traits\";\r\nimport { GetSkillList } from \"./general/GetSkillList\";\r\nimport { race } from \"./races/Races\";\r\nimport { humansData } from \"./races/Humans\";\r\nimport { merlionsData } from \"./races/Merlions\";\r\nimport { nekovianData } from \"./races/Nekovians\";\r\nimport { shambrasData } from \"./races/Shambras\";\r\nimport { synthsData } from \"./races/Synth\";\r\n\r\nexport const fSum = (n: number): number => {\r\n    let x = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        x += i;\r\n    }\r\n    return x;\r\n};\r\n\r\nexport interface IHooker {\r\n    applyTo: string;\r\n    amount: number;\r\n}\r\n\r\ninterface CharacterSizeMod {\r\n    size: CharacterSize;\r\n    strengthMod: number;\r\n    secondaryMod: number;\r\n    damageAbsorbtion: number;\r\n    speedBase: number;\r\n    averageHeight: [number, number];\r\n    averageWeight: [number, number];\r\n    consumption: number;\r\n    lifeMod: number;\r\n}\r\n\r\nexport type CharacterSize = 'minute' | 'tiny' | 'small' | 'medium' | 'large' | 'huge' | 'gigantic' | 'colossal' | 'titanic';\r\nexport const CharacterSizes = ['minute', 'tiny', 'small', 'medium', 'large', 'huge', 'gigantic', 'colossal', 'titanic'];\r\n\r\nexport const CharacterSizeMods: CharacterSizeMod[] = [\r\n    {\r\n        size: 'minute',\r\n        strengthMod: -4,\r\n        secondaryMod: +8,\r\n        damageAbsorbtion: 0,\r\n        speedBase: 3,\r\n        averageHeight: [60, 100],\r\n        averageWeight: [10, 30],\r\n        consumption: 1,\r\n        lifeMod: -3,\r\n    },\r\n    {\r\n        size: 'tiny',\r\n        strengthMod: -2,\r\n        secondaryMod: +4,\r\n        damageAbsorbtion: 0,\r\n        speedBase: 4,\r\n        averageHeight: [90, 130],\r\n        averageWeight: [25, 40],\r\n        consumption: 1.5,\r\n        lifeMod: -2,\r\n    },\r\n    {\r\n        size: 'small',\r\n        strengthMod: -1,\r\n        secondaryMod: +2,\r\n        damageAbsorbtion: 0,\r\n        speedBase: 5,\r\n        averageHeight: [120, 160],\r\n        averageWeight: [35, 65],\r\n        consumption: 2,\r\n        lifeMod: -1,\r\n    },\r\n    {\r\n        size: 'medium',\r\n        strengthMod: 0,\r\n        secondaryMod: 0,\r\n        damageAbsorbtion: 0,\r\n        speedBase: 6,\r\n        averageHeight: [150, 190],\r\n        averageWeight: [60, 110],\r\n        consumption: 2.5,\r\n        lifeMod: 0,\r\n    },\r\n    {\r\n        size: 'large',\r\n        strengthMod: +1,\r\n        secondaryMod: -2,\r\n        damageAbsorbtion: 0,\r\n        speedBase: 7,\r\n        averageHeight: [180, 250],\r\n        averageWeight: [90, 160],\r\n        consumption: 3,\r\n        lifeMod: 1,\r\n    },\r\n    {\r\n        size: 'huge',\r\n        strengthMod: +3,\r\n        secondaryMod: -4,\r\n        damageAbsorbtion: 1,\r\n        speedBase: 8,\r\n        averageHeight: [240, 300],\r\n        averageWeight: [150, 300],\r\n        consumption: 4,\r\n        lifeMod: 2,\r\n    },\r\n    {\r\n        size: 'gigantic',\r\n        strengthMod: +6,\r\n        secondaryMod: -8,\r\n        damageAbsorbtion: 2,\r\n        speedBase: 9,\r\n        averageHeight: [290, 350],\r\n        averageWeight: [280, 500],\r\n        consumption: 6,\r\n        lifeMod: 4,\r\n    },\r\n    {\r\n        size: 'colossal',\r\n        strengthMod: +10,\r\n        secondaryMod: -10,\r\n        damageAbsorbtion: 3,\r\n        speedBase: 10,\r\n        averageHeight: [330, 450],\r\n        averageWeight: [480, 1000],\r\n        consumption: 10,\r\n        lifeMod: 8,\r\n    },\r\n    {\r\n        size: 'titanic',\r\n        strengthMod: +16,\r\n        secondaryMod: -12,\r\n        damageAbsorbtion: 4,\r\n        speedBase: 11,\r\n        averageHeight: [420, 600],\r\n        averageWeight: [900, 2000],\r\n        consumption: 15,\r\n        lifeMod: 16,\r\n    },\r\n];\r\n\r\nexport interface ICharacter {\r\n    name: string;\r\n    species: race;\r\n    gender: string;\r\n    background: string;\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n    size: CharacterSize;\r\n    bonusExp?: number;\r\n}\r\n\r\nexport class Character {\r\n    name: string;\r\n    species: race;\r\n    gender: string;\r\n    age: number;\r\n    background: string;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n    size: CharacterSize;\r\n    bonusExp: number;\r\n    constructor(copy?: ICharacter) {\r\n        this.name = (copy && copy.name) || \"\";\r\n        this.species = (copy && copy.species) || 'human';\r\n        this.gender = (copy && copy.gender) || \"\";\r\n        this.background = (copy && copy.background) || \"\";\r\n        this.strength = (copy && copy.strength) || 4;\r\n        this.agility = (copy && copy.agility) || 4;\r\n        this.endurance = (copy && copy.endurance) || 4;\r\n        this.perception = (copy && copy.perception) || 4;\r\n        this.willpower = (copy && copy.willpower) || 4;\r\n        this.intelligence = (copy && copy.intelligence) || 4;\r\n        this.skills = (copy && copy.skills) || GetSkillList();\r\n        this.traits = (copy && copy.traits) || [];\r\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\r\n        else this.perks = [];\r\n        this.age = (copy && copy.age) || 24;\r\n        this.size = (copy && copy.size) || 'medium';\r\n        this.bonusExp = (copy && copy.bonusExp && copy.bonusExp) || 0;\r\n    }\r\n\r\n    public getCharacterPointsCostPerks() {\r\n        return this.perks.length > 0 ? this.perks.map(p => p.cost()).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostTraits() {\r\n        return this.traits.length > 0 ? this.traits.map(t => t.cost).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostSkills() {\r\n        return this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    public getCharacterPointsCostAttribute() {\r\n        const intMultipler = this.species === 'merlion' ? 3 : 4;\r\n        return fSum(this.strength) * 4\r\n            + fSum(this.agility) * 4\r\n            + fSum(this.endurance) * 4\r\n            + fSum(this.perception) * 4\r\n            + fSum(this.willpower) * 4\r\n            + fSum(this.intelligence) * intMultipler;\r\n    }\r\n\r\n    public getCalculatedPointsUsed() {\r\n        return this.getCharacterPointsCostPerks() + this.getCharacterPointsCostSkills() + this.getCharacterPointsCostTraits();\r\n    }\r\n\r\n    public getCalculatedPointsUsedPointBuy() {\r\n        return this.getCalculatedPointsUsed() + this.getCharacterPointsCostAttribute();\r\n    }\r\n\r\n    public getCalculatedPointsLeft() {\r\n        return this.getStartingPointsAvailable() - this.getCalculatedPointsUsed();\r\n    }\r\n\r\n    public getSkillLevel(skillName: string) {\r\n        const skill = this.skills.find(s => s.name === skillName);\r\n        if (skill !== undefined) return skill.level;\r\n        return 0;\r\n    }\r\n\r\n    public getDamageAbsorption() {\r\n        const f = CharacterSizeMods.find(s => s.size === this.size);\r\n        if (f !== undefined) {\r\n            return f.damageAbsorbtion + this.getHook('damageAbsorption');\r\n        }\r\n        return this.getHook('damageAbsorption');\r\n    }\r\n\r\n    public getActiveDefense() {\r\n        const combat = this.getSkillLevel('combat');\r\n        const acrobatics = this.getSkillLevel('acrobatics');\r\n        return this.getPassiveDefense() + Math.max(combat, acrobatics) + this.getHook('activedefense');\r\n    }\r\n\r\n    private getPassiveDefense() {\r\n        return this.getBaseDefense() + Math.max(this.agility, 0) + this.getHook('passivedefense');\r\n    }\r\n\r\n\r\n    public static findDefenseFromSize(size: CharacterSize): number {\r\n        const f = CharacterSizeMods.find(s => s.size === size);\r\n        if (f !== undefined) {\r\n            return f.secondaryMod;\r\n        }\r\n        else throw new Error('Missing character size');\r\n    }\r\n\r\n    private getDefenseFromSize() {\r\n        return 10 + Character.findDefenseFromSize(this.size);\r\n    }\r\n\r\n    public getBaseDefense() {\r\n        return this.getDefenseFromSize() + this.getHook('basedefense');\r\n    }\r\n\r\n    public getBaseCarryingCapacity(limitMod: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8) {\r\n        return (this.getCarryCapacity(limitMod) + this.getHook('carryingCapacity'))\r\n    }\r\n\r\n    public static findSpeedFromSize(size: CharacterSize): number {\r\n        const f = CharacterSizeMods.find(s => s.size === size);\r\n        if (f !== undefined) {\r\n            return f.speedBase;\r\n        }\r\n        else throw new Error('Missing character size');\r\n    }\r\n\r\n    public static findLifeFromSize(size: CharacterSize): number {\r\n        const f = CharacterSizeMods.find(s => s.size === size);\r\n        if (f !== undefined) {\r\n            return f.lifeMod;\r\n        }\r\n        else throw new Error('Missing character size');\r\n    }\r\n\r\n    public getSizeSpeed() {\r\n        return Character.findSpeedFromSize(this.size);\r\n    }\r\n\r\n    public getSpeedFromSkill() {\r\n        let athletics = this.getSkillLevel('athletics');\r\n        if (athletics >= 18) return 3;\r\n        else if (athletics >= 12) return 2;\r\n        else if (athletics >= 6) return 1;\r\n        return 0;\r\n    }\r\n\r\n    public getSpeedFromSpecies() {\r\n        switch (this.species) {\r\n            case 'human': return 1;\r\n            case 'merlion': return 1;\r\n            case 'nekovian': return 2;\r\n            case 'shambras': return 0;\r\n            case 'synth': return 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    public getBaseSpeed(): number {\r\n        const base = this.getSpeedFromSpecies();\r\n\r\n        const size = this.getSizeSpeed();\r\n\r\n        const skill = this.getSpeedFromSkill();\r\n\r\n        const hookBonus = this.getHook('speed');\r\n\r\n        return base + size + skill + hookBonus;\r\n\r\n    }\r\n\r\n    public static getCarryCapacity(strength: number, limitPenalty: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9, size: CharacterSize): number {\r\n        switch (size) {\r\n            case 'minute': return (strength + 1) * limitPenalty * 1;\r\n            case 'tiny': return (strength + 1) * limitPenalty * 2;\r\n            case 'small': return (strength + 1) * limitPenalty * 3;\r\n            case 'medium': return (strength + 1) * limitPenalty * 4;\r\n            case 'large': return (strength + 1) * limitPenalty * 5;\r\n            case 'huge': return (strength + 1) * limitPenalty * 6;\r\n            case 'gigantic': return (strength + 1) * limitPenalty * 7;\r\n            case 'colossal': return (strength + 1) * limitPenalty * 8;\r\n            case 'titanic': return (strength + 1) * limitPenalty * 10;\r\n        }\r\n    }\r\n\r\n    public getCarryCapacity(limitPenalty: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8) {\r\n        return Character.getCarryCapacity(this.strength, limitPenalty, this.size);\r\n    }\r\n\r\n\r\n    public getStartingPointsAvailable(): number {\r\n\r\n        return Character.getStartingPointsAvailable(this.age, this.species) + this.bonusExp;\r\n    }\r\n\r\n    public static getStartingPointsAvailable(age: number, species: race): number {\r\n\r\n        switch (species) {\r\n            case 'human': return humansData.experiencePoints(age);\r\n            case 'merlion': return merlionsData.experiencePoints(age);\r\n            case 'shambras': return shambrasData.experiencePoints(age);\r\n            case 'nekovian': return nekovianData.experiencePoints(age);\r\n            case 'synth': return synthsData.experiencePoints(age);\r\n        }\r\n    }\r\n\r\n    public getExperienceMultiplier(): number {\r\n        switch (this.species) {\r\n            case 'human': return Math.max(humansData.experienceMultipler(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'merlion': return Math.max(merlionsData.experienceMultipler(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'shambras': return Math.max(shambrasData.experienceMultipler(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'nekovian': return Math.max(nekovianData.experienceMultipler(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'synth': return Math.max(synthsData.experienceMultipler(this.age) + this.getHook('experienceMultiplier'), 1);\r\n        }\r\n\r\n    }\r\n    public getLife() {\r\n        let athleticsBonus = 0;\r\n        const athletics = this.getSkillLevel('athletics');\r\n        if (athletics >= 9) athleticsBonus++;\r\n        if (athletics >= 18) athleticsBonus++;\r\n\r\n        return Math.max(athleticsBonus + this.strength + this.endurance * 2 + this.getHook('life') + this.getLifeModSize(), 1);\r\n    }\r\n\r\n    public getLifeModSize(): number {\r\n        return Character.findLifeFromSize(this.size);\r\n    }\r\n\r\n    public getMana() {\r\n        let spellsBonus = 0;\r\n        const spells = this.getSkillLevel('spells');\r\n        if (spells >= 6) spellsBonus++;\r\n        if (spells >= 12) spellsBonus++;\r\n        if (spells >= 18) spellsBonus++;\r\n        return Math.max(spellsBonus + this.endurance + this.willpower * 2 + this.getHook('mana'), 1);\r\n    }\r\n\r\n    public getMentalHealth() {\r\n        let mentalHealthBonus = 0;\r\n        const empathy = this.getSkillLevel('empathy');\r\n        const survival = this.getSkillLevel('survival');\r\n        if (empathy >= 9) mentalHealthBonus++;\r\n        if (survival >= 9) mentalHealthBonus++;\r\n        return Math.max(mentalHealthBonus + this.willpower * 2 + this.getHook('mentalHealth'), 1);\r\n    }\r\n\r\n    public getSequence() {\r\n        return Math.max(this.perception + this.agility + this.getHook('sequence'), 0);\r\n    }\r\n\r\n    public getHook(applyTo: string): number {\r\n\r\n        return this.sumOr(applyTo, this.perks, 0) + this.sumOr(applyTo, this.traits, 0);\r\n    }\r\n\r\n    public static calculateActionPoints(character: Character): number {\r\n        const baseActionPoints = 4;\r\n        const agilityBonus = Math.floor(character.agility / 2);\r\n        const acrobaticsBonus = Math.floor(character.getSkillLevel('acrobatics') / 6);\r\n        const combatBonus = Math.floor(character.getSkillLevel('combat') / 6);\r\n        const perkBonuses = character.getHook('actionpoints');\r\n\r\n        return baseActionPoints + agilityBonus + acrobaticsBonus + combatBonus + perkBonuses;\r\n    }\r\n\r\n    public getActionPoints(): number {\r\n        return Character.calculateActionPoints(this);\r\n    }\r\n\r\n    public explain(what: string): string {\r\n        switch (what) {\r\n            case 'strength': return 'muscle power';\r\n            case 'endurance': return 'stamina';\r\n            case 'agility': return 'speed, coordination';\r\n            case 'perception': return 'seeing, hearing';\r\n            case 'intelligence': return 'brain power';\r\n            case 'willpower': return 'brain stamina';\r\n            case 'life': return 'STR + 2 x END';\r\n            case 'mana': return 'END + 2 x WILL';\r\n            case 'mentalHealth': return 'WILL x 2';\r\n            case 'age': return 'how old';\r\n            case 'damageBonus': return 'STR /5, /4, /3';\r\n            case 'name': return '';\r\n            case 'gender': return '';\r\n            case 'species': return '';\r\n            case 'pointsLeft': return 'points remaining';\r\n            case 'experienceMultiplier': return 'exp bonus';\r\n            case 'basedefense': return 'size';\r\n            case 'passivedefense': return 'agility';\r\n            case 'activedefense': return 'skill';\r\n            case 'sequence': return 'AGI+PER';\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    private sumOr(applyTo: string, sum: IHooker[], or: number): number {\r\n        let s = sum.filter(perk => perk.applyTo === applyTo).map(p => p.amount);\r\n        if (s.length > 0) return s.reduce((a, b) => a + b);\r\n        else return or;\r\n    }\r\n}","import React from \"react\";\r\nimport { humansData } from \"../components/races/Humans\";\r\nimport { merlionsData } from \"../components/races/Merlions\";\r\nimport { nekovianData } from \"../components/races/Nekovians\";\r\nimport { IRacialMod, race } from \"../components/races/Races\";\r\nimport { shambrasData } from \"../components/races/Shambras\";\r\nimport { synthsData } from \"../components/races/Synth\";\r\n\r\nexport const weightConverter = (grams: number) => {\r\n    if (grams < 1000) return `${grams.toFixed(0)}g`;\r\n    else if (grams < (10000000)) return `${(grams / 1000).toFixed(0)}kg`;\r\n    else return `${(grams / 1000000).toFixed(1)} tons`;\r\n};\r\n\r\nexport const bigNumberSeparator = (numb: number) => {\r\n    return numb\r\n        .toFixed(1)\r\n        .toString()\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst RollSingleDice = (sides: number) => Math.floor(Math.random() * sides) + 1;\r\n\r\nexport const RollDice = (numberOfDice: number, sidesPerDice: number) =>\r\n    [...Array(numberOfDice)].map(n => RollSingleDice(sidesPerDice));\r\n\r\ninterface ISelector {\r\n    values: string[];\r\n    callback: (v: string) => void;\r\n    preset: string;\r\n    label: string;\r\n}\r\n\r\nexport const Selector: React.FC<ISelector> = ({ values, callback, preset, label }) => {\r\n    return <label className='mediumSizedLabel'>{label}<select onChange={e => callback(e.target.value)}>\r\n        {values.map(v => <option key={`selector_${label}_${v}`} value={v} selected={preset === v}>{v}</option>)}\r\n    </select></label>\r\n};\r\n\r\nexport const findRacialModFromRage = (species: race | undefined, age: number | undefined) => {\r\n    if (species === undefined || age === undefined) return undefined;\r\n    let output: IRacialMod | undefined = undefined;\r\n    switch (species) {\r\n        case 'human':\r\n            output = humansData.racialMods.find(irm => irm.ageSpan[1] >= age && irm.ageSpan[0] <= age);\r\n            break;\r\n        case 'merlion':\r\n            output = merlionsData.racialMods.find(irm => irm.ageSpan[1] >= age && irm.ageSpan[0] <= age);\r\n            break;\r\n        case 'nekovian':\r\n            output = nekovianData.racialMods.find(irm => irm.ageSpan[1] >= age && irm.ageSpan[0] <= age);\r\n            break;\r\n        case 'shambras':\r\n            output = shambrasData.racialMods.find(irm => irm.ageSpan[1] >= age && irm.ageSpan[0] <= age);\r\n            break;\r\n        case 'synth':\r\n            output = synthsData.racialMods.find(irm => irm.ageSpan[1] >= age && irm.ageSpan[0] <= age);\r\n            break;\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\nexport function shuffle<T>(array: T[]) {\r\n    let currentIndex = array.length, randomIndex;\r\n    const newArray = [...array];\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n\r\n        // And swap it with the current element.\r\n        [newArray[currentIndex], newArray[randomIndex]] = [\r\n            newArray[randomIndex], newArray[currentIndex]];\r\n    }\r\n\r\n    return newArray;\r\n}","import { CharacterSize } from \"../Character\";\r\n\r\nexport type race = 'human' | 'shambras' | 'merlion' | 'nekovian' | 'synth';\r\n\r\nexport interface IDice {\r\n    numberOfDice: 1 | 2 | 3 | 4;\r\n    sidesPerDice: 2 | 4 | 6 | 8 | 10 | 12;\r\n    pointBuyMod: -3 | -2 | -1 | 0 | 1 | 2 | 3 | 4;\r\n}\r\n\r\nexport interface IRaceData {\r\n    racialMods: IRacialMod[];\r\n    experienceMultipler: (age: number) => number;\r\n    experiencePoints: (age: number) => number;\r\n}\r\n\r\nexport interface IRacialMod {\r\n    ageSpan: [number, number];\r\n    species: race;\r\n    strength: IDice;\r\n    endurance: IDice;\r\n    agility: IDice;\r\n    intelligence: IDice;\r\n    perception: IDice;\r\n    willpower: IDice;\r\n    sizeOptions: CharacterSize[];\r\n    special?: string | undefined;\r\n}\r\n\r\nexport const CharacterPoints = (start: number, agePhases: number[], expPhases: number[], age: number): number => {\r\n    let p = start;\r\n    if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\r\n    let prevPhase = 0;\r\n    for (var phase in agePhases) {\r\n        let currentAgePhase = agePhases[phase];\r\n        let expPhase = expPhases[phase];\r\n\r\n        let ageRange = currentAgePhase - prevPhase;\r\n        if (age > prevPhase) p += Math.min(age - prevPhase, ageRange) * expPhase;\r\n        prevPhase = currentAgePhase;\r\n    }\r\n\r\n    return p;\r\n}\r\n\r\nexport const getExperienceAges = (raceData: IRaceData, maxAge: number) => [...Array(maxAge)]\r\n    .map((v: any, index: number, arr: any[]) => {\r\n        return { age: index, exp: raceData.experiencePoints(index), mult: raceData.experienceMultipler(index) };\r\n    });\r\n\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport usePersistentState from \"../utils/usePersistentState\";\r\n\r\nexport interface ISection {\r\n    title: string;\r\n    tab?: number;\r\n    border?: boolean;\r\n    initiallyOpen?: boolean;\r\n}\r\n\r\nconst Section: React.FC<ISection> = ({ title, tab, border, children, initiallyOpen }) => {\r\n    const [isOpen, setIsOpen] = usePersistentState<boolean>(title + tab, initiallyOpen || false);\r\n    let tabSize = '0';\r\n    if (tab !== undefined)\r\n        tabSize = tab + 'px';\r\n    return <div className={border === true ? 'bordersection' : ''} style={{ paddingLeft: tabSize }}>\r\n        <Button onClick={() => setIsOpen(!isOpen)}>{title} {isOpen ? '-' : '+'}</Button>\r\n        {isOpen && children}\r\n    </div>;\r\n}\r\n\r\nexport default Section;","import { abilities } from \"../general/Skills\";\r\n\r\nexport interface DamageAbsorbtion {\r\n    damageReduction: number;\r\n    minimumDamage: number;\r\n}\r\n\r\nexport interface ArmorData {\r\n    name: string;\r\n    damageAbsorbtion: DamageAbsorbtion;\r\n    weight: number;\r\n    cost: number;\r\n    actionPointMod: number;\r\n    description: string;\r\n    armorType: string;\r\n}\r\n\r\nexport interface BodySuit extends ArmorData {\r\n}\r\n\r\nexport interface ArmorPlate extends ArmorData {\r\n}\r\n\r\ninterface AbilityMod {\r\n    ability: abilities,\r\n    modifier: number;\r\n}\r\n\r\nexport interface IntegratedSystem {\r\n    name: string;\r\n    description: string;\r\n    cost: number;\r\n    weight: number;\r\n    damageAbsorbtion: number;\r\n    abilityModifiers: AbilityMod[];\r\n    stack: number;\r\n}\r\n\r\nexport interface PowerArmor extends ArmorData {\r\n    strengthMod: number;\r\n    perceptionMod: number;\r\n}\r\n\r\n\r\nconst bodySuits: BodySuit[] = [\r\n    {\r\n        name: 'Nylon Polyester Composite',\r\n        damageAbsorbtion: { damageReduction: 3, minimumDamage: 1 },\r\n        weight: 10,\r\n        cost: 3000,\r\n        actionPointMod: -1,\r\n        description: 'Composite armor made primarily of nylon and polyester, thick layers give stab and cut protection',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'Kevlar',\r\n        damageAbsorbtion: { damageReduction: 2, minimumDamage: 0 },\r\n        weight: 5,\r\n        cost: 4500,\r\n        actionPointMod: 0,\r\n        description: 'Heat resistant synthetic fiber, woven into a flexible and light body suit',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'Carbon Reinforced Kevlar',\r\n        damageAbsorbtion: { damageReduction: 3, minimumDamage: 1 },\r\n        weight: 10,\r\n        cost: 6000,\r\n        actionPointMod: 0,\r\n        description: 'An incredibly strong weave of carbon fiber, kevlar and nylon and polyester. Gives incredible defense',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'Carbon Fiber Weave',\r\n        damageAbsorbtion: { damageReduction: 5, minimumDamage: 2 },\r\n        weight: 15,\r\n        cost: 12000,\r\n        actionPointMod: -2,\r\n        description: 'An incredibly strong weave of carbon fiber, kevlar and nylon and polyester. Gives incredible defense',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'Nanotube Superstructure Fiber',\r\n        damageAbsorbtion: { damageReduction: 6, minimumDamage: 2 },\r\n        weight: 10,\r\n        cost: 30000,\r\n        actionPointMod: -1,\r\n        description: 'A kevlar body suit reinforced with graphene nanotube super structures which gives protection against most attacks',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'High Yield Nanosuit',\r\n        damageAbsorbtion: { damageReduction: 7, minimumDamage: 2 },\r\n        weight: 8,\r\n        cost: 40000,\r\n        actionPointMod: 0,\r\n        description: 'A body armor made entirely out of nanotube carbyne weave, incredibly strong, light and expensive',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'High Yield Nanosuit MKII',\r\n        damageAbsorbtion: { damageReduction: 8, minimumDamage: 2 },\r\n        weight: 8,\r\n        cost: 400000,\r\n        actionPointMod: 0,\r\n        description: 'MKII version of high yield nanosuit',\r\n        armorType: 'bodySuit'\r\n    },\r\n    {\r\n        name: 'High Yield Nanosuit MKIII',\r\n        damageAbsorbtion: { damageReduction: 9, minimumDamage: 3 },\r\n        weight: 8,\r\n        cost: 4000000,\r\n        actionPointMod: 0,\r\n        description: 'MKII version of high yield nanosuit',\r\n        armorType: 'bodySuit'\r\n    }\r\n];\r\n\r\nconst armorPlates: ArmorPlate[] = [\r\n    {\r\n        name: 'Hard Plast Plates',\r\n        damageAbsorbtion: { damageReduction: 2, minimumDamage: 0 },\r\n        weight: 8,\r\n        cost: 2500,\r\n        actionPointMod: 0,\r\n        description: 'Hard but elastic plastic plates which reflect impacts, very durable',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Ceramic Plates',\r\n        damageAbsorbtion: { damageReduction: 4, minimumDamage: 1 },\r\n        weight: 10,\r\n        cost: 3500,\r\n        actionPointMod: -1,\r\n        description: 'Very hard ceramic plates which absorb a lot of damage, however each time the damage is exceeded they lose 1 damage absorbtion. These are replaced after every combat',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Steel Plates',\r\n        damageAbsorbtion: { damageReduction: 5, minimumDamage: 2 },\r\n        weight: 12,\r\n        cost: 4000,\r\n        actionPointMod: -2,\r\n        description: 'High carbon hardened steel plates, very strong but also heavy',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Steel Fullplate',\r\n        damageAbsorbtion: { damageReduction: 7, minimumDamage: 3 },\r\n        weight: 18,\r\n        cost: 8000,\r\n        actionPointMod: -3,\r\n        description: 'High carbon hardened steel plates, very strong but also heavy. Fullplate means more thickness and coverage.',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Titan Alloy Plates',\r\n        damageAbsorbtion: { damageReduction: 6, minimumDamage: 2 },\r\n        weight: 10,\r\n        cost: 9000,\r\n        actionPointMod: -2,\r\n        description: 'An alloy of titanium and gold, stronger than steel. And significantly more expensive',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Titan Alloy Fullplate',\r\n        damageAbsorbtion: { damageReduction: 8, minimumDamage: 3 },\r\n        weight: 16,\r\n        cost: 18000,\r\n        actionPointMod: -3,\r\n        description: 'An alloy of titanium and gold, stronger than steel. And significantly more expensive. Fullplate means more thickness and coverage.',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Hyper Nanostructure Plates',\r\n        damageAbsorbtion: { damageReduction: 7, minimumDamage: 3 },\r\n        weight: 8,\r\n        cost: 18000,\r\n        actionPointMod: -1,\r\n        description: 'Titan alloy reinforced by a weave of graphene nanotube super structure',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Hyper Nanostructure Fullplates',\r\n        damageAbsorbtion: { damageReduction: 9, minimumDamage: 3 },\r\n        weight: 12,\r\n        cost: 32000,\r\n        actionPointMod: -2,\r\n        description: 'Titan alloy reinforced by a weave of graphene nanotube super structure. Fullplate means more thickness and coverage.',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Hyper Nanostructure Fullplates MKII',\r\n        damageAbsorbtion: { damageReduction: 10, minimumDamage: 3 },\r\n        weight: 12,\r\n        cost: 320000,\r\n        actionPointMod: -2,\r\n        description: 'MKII version of the Hyper Nanostructure Fullplates',\r\n        armorType: 'armorPlate'\r\n    },\r\n    {\r\n        name: 'Hyper Nanostructure Fullplates MKIII',\r\n        damageAbsorbtion: { damageReduction: 11, minimumDamage: 3 },\r\n        weight: 12,\r\n        cost: 3200000,\r\n        actionPointMod: -2,\r\n        description: 'MKIII version of the Hyper Nanostructure Fullplates',\r\n        armorType: 'armorPlate'\r\n    },\r\n]\r\n\r\nconst powerArmors: PowerArmor[] = [\r\n    {\r\n        name: 'Exo-Servos',\r\n        damageAbsorbtion: { damageReduction: 0, minimumDamage: 0 },\r\n        weight: 6,\r\n        cost: 4000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 0,\r\n        strengthMod: 1,\r\n        description: 'Servos placed on joints aid movement speed, agility and strength',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Exoskeletal Frame',\r\n        damageAbsorbtion: { damageReduction: 1, minimumDamage: 1 },\r\n        weight: 12,\r\n        cost: 7000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 0,\r\n        strengthMod: 3,\r\n        description: 'Frame around the body grants greater strength, speed and agility',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Scout Frame',\r\n        damageAbsorbtion: { damageReduction: 1, minimumDamage: 1 },\r\n        weight: 14,\r\n        cost: 8000,\r\n        actionPointMod: 3,\r\n        perceptionMod: 0,\r\n        strengthMod: 2,\r\n        description: 'Advanced frame around the body, which grants great mobility and strength',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Powered Armor',\r\n        damageAbsorbtion: { damageReduction: 4, minimumDamage: 2 },\r\n        weight: 18,\r\n        cost: 9000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 1,\r\n        strengthMod: 4,\r\n        description: 'This armor frame encapsulates the entire body and greats great strength, as well as visual prowess and mobility',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Titan Power Armor',\r\n        damageAbsorbtion: { damageReduction: 5, minimumDamage: 2 },\r\n        weight: 24,\r\n        cost: 12000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 1,\r\n        strengthMod: 5,\r\n        description: 'This armor frame is almost a vehicle, the strength bonus it grants is beyond belief',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Mecha Titan',\r\n        damageAbsorbtion: { damageReduction: 6, minimumDamage: 2 },\r\n        weight: 30,\r\n        cost: 16000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 1,\r\n        strengthMod: 5,\r\n        description: 'An even larger version of the Titan Power Armor',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Mecha Titan MKII',\r\n        damageAbsorbtion: { damageReduction: 7, minimumDamage: 2 },\r\n        weight: 30,\r\n        cost: 160000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 1,\r\n        strengthMod: 6,\r\n        description: 'MKII version of the Mecha Titan',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Mecha Titan MKIII',\r\n        damageAbsorbtion: { damageReduction: 8, minimumDamage: 3 },\r\n        weight: 30,\r\n        cost: 1600000,\r\n        actionPointMod: 1,\r\n        perceptionMod: 1,\r\n        strengthMod: 8,\r\n        description: 'MKIII version of the Mecha Titan',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Merlion Warrior Armor',\r\n        damageAbsorbtion: { damageReduction: 4, minimumDamage: 1 },\r\n        weight: 12,\r\n        cost: 15000,\r\n        actionPointMod: 2,\r\n        perceptionMod: 2,\r\n        strengthMod: 2,\r\n        description: 'The fabled merlion warrior armor frame grants a balanced bonus to visual prowess, mobility and strength',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Merlion Warrior Armor MKII',\r\n        damageAbsorbtion: { damageReduction: 5, minimumDamage: 1 },\r\n        weight: 12,\r\n        cost: 150000,\r\n        actionPointMod: 3,\r\n        perceptionMod: 3,\r\n        strengthMod: 3,\r\n        description: 'The MKII version of the merlion warrior armor',\r\n        armorType: 'powerArmor'\r\n    },\r\n    {\r\n        name: 'Merlion Warrior Armor MKIII',\r\n        damageAbsorbtion: { damageReduction: 6, minimumDamage: 1 },\r\n        weight: 12,\r\n        cost: 1500000,\r\n        actionPointMod: 4,\r\n        perceptionMod: 4,\r\n        strengthMod: 4,\r\n        description: 'The MKIII version of the merlion warrior armor',\r\n        armorType: 'powerArmor'\r\n    },\r\n];\r\n\r\nconst integratedSystems: IntegratedSystem[] = [\r\n    {\r\n        name: 'Breathing apparatus',\r\n        description: 'allows the user to breathe air from an oxygen tank, lasts up to 4 hours of use. Can be switched on and off at will. Can be refueled for 100 credits',\r\n        weight: 2,\r\n        cost: 3000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Hermetic seal',\r\n        description: 'Makes the armor air tight and pressure resistant to up to 1000 pascal (~10x sea level earth atmosphere). Does not include gas mask',\r\n        weight: 1,\r\n        cost: 8000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Radiation shield',\r\n        description: 'Armor includes radiation protection, gain +2 radiation shield while inside armor, reduces damage absorbtion by 1 due to gold and lead being soft',\r\n        weight: 3,\r\n        cost: 6000,\r\n        damageAbsorbtion: -1,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Strength booster',\r\n        description: 'Increases strength booster, can be stacked up to 3 times',\r\n        weight: 4,\r\n        cost: 3000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [\r\n            {\r\n                ability: 'strength',\r\n                modifier: 1,\r\n            }\r\n        ],\r\n        stack: 3,\r\n    },\r\n    {\r\n        name: 'Accelerator',\r\n        description: 'Increases movement speed by 1',\r\n        weight: 10,\r\n        cost: 5000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Mule Servos',\r\n        description: 'Improves carrying capacity, you count as 4 strengths higher for carrying capacity, can be stacked twice',\r\n        weight: 3,\r\n        cost: 3000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 2,\r\n    },\r\n    {\r\n        name: 'Hydrophobic coating',\r\n        description: 'Protects the armor from water, salt water and most liquids that would damage the armor',\r\n        weight: 1,\r\n        cost: 7000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Inertial Stabilizer',\r\n        description: 'Armor gives full damage absorbtion from fall and crash damage',\r\n        weight: 10,\r\n        cost: 12000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1,\r\n    },\r\n    {\r\n        name: 'Plate polarizer',\r\n        description: 'Power armor is not disabled by electrical damage',\r\n        weight: 4,\r\n        cost: 8000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 1\r\n    },\r\n    {\r\n        name: 'Extra Battery',\r\n        description: 'Increases power armor battery life time by 5 days (or exactly 80 hours). Adds equivalent time to recharge.',\r\n        weight: 5,\r\n        cost: 6000,\r\n        damageAbsorbtion: 0,\r\n        abilityModifiers: [],\r\n        stack: 2\r\n    },\r\n];\r\n\r\nexport { bodySuits, armorPlates, powerArmors, integratedSystems }\r\n","import React, { Suspense } from \"react\";\r\n\r\ninterface ItemProp {\r\n    shouldView: boolean;\r\n  }\r\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\r\n    if (shouldView) return <Suspense fallback={<div>Loading...</div>}>{children}</Suspense>;\r\n    else return null;\r\n  };\r\n\r\n  export default Conditional;","import { SkillName } from \"../general/Skills\";\r\nimport Item, { D, ICondition, IDamageDice, IQuality } from \"./Item\";\r\n\r\nexport type Ammo = '9x17' | '9x21' | '9x23' |\r\n    '10x19' | '10x21' |\r\n    '11x17' | '11x21' |\r\n    '12x20' | '12x24' | '12x28' |\r\n    '4mm ec' |\r\n    '12 gauge' | '20 gauge' |\r\n    '20mm rpg' | '30mm rpg' | '40mm rpg' | '50mm rpg' |\r\n    '1hec' | '2hec' | '3hec' | '5hec' | '10hec';\r\n\r\nexport interface ILoudness {\r\n    deafnessRange: number;\r\n    deafnessTime: number;\r\n    hearingRange: number;\r\n}\r\n\r\nexport interface AmmoInformation {\r\n    ammo: Ammo;\r\n    cost: number;\r\n    /** grams */\r\n    weight: number;\r\n    types: string[];\r\n    description: string;\r\n    loudness: ILoudness;\r\n}\r\n\r\nexport const AmmoTypesInformation: AmmoInformation[] = [\r\n    {\r\n        ammo: '9x17',\r\n        cost: 2,\r\n        weight: 7,\r\n        types: ['tracer', 'hollow point', 'standard'],\r\n        description: 'a small short 9mm bullet',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 1000,\r\n        }\r\n    }, {\r\n        ammo: '9x21',\r\n        cost: 3,\r\n        weight: 9,\r\n        types: ['tracer', 'hollow point', 'armor piercing', 'standard'],\r\n        description: 'a slightly longer version of the 9mm',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 1500,\r\n        }\r\n    }, {\r\n        ammo: '9x23',\r\n        cost: 3.5,\r\n        weight: 11,\r\n        types: ['tracer', 'hollow point', 'armor piercing', 'standard'],\r\n        description: 'a long version of the 9mm',\r\n        loudness: {\r\n            deafnessRange: 1,\r\n            deafnessTime: 1,\r\n            hearingRange: 2000,\r\n        }\r\n    }, {\r\n        ammo: '10x19',\r\n        cost: 2.8,\r\n        weight: 10,\r\n        types: ['hollow point', 'standard'],\r\n        description: 'a standard 10cm bullet',\r\n        loudness: {\r\n            deafnessRange: 1,\r\n            deafnessTime: 1,\r\n            hearingRange: 1500,\r\n        }\r\n    }, {\r\n        ammo: '10x21',\r\n        cost: 3.6,\r\n        weight: 11,\r\n        types: ['tracer', 'hollow point', 'armor piercing', 'standard'],\r\n        description: 'a long version of the 10cm bullet',\r\n        loudness: {\r\n            deafnessRange: 1,\r\n            deafnessTime: 2,\r\n            hearingRange: 2000,\r\n        }\r\n    }, {\r\n        ammo: '11x17',\r\n        cost: 3.8,\r\n        weight: 12,\r\n        types: ['incendiary', 'standard'],\r\n        description: 'a short wide 11cm bullet',\r\n        loudness: {\r\n            deafnessRange: 2,\r\n            deafnessTime: 1,\r\n            hearingRange: 2000,\r\n        }\r\n    }, {\r\n        ammo: '11x21',\r\n        cost: 6,\r\n        weight: 15,\r\n        types: ['armor piercing', 'incendiary', 'standard'],\r\n        description: 'a normal 11cm bullet',\r\n        loudness: {\r\n            deafnessRange: 2,\r\n            deafnessTime: 2,\r\n            hearingRange: 3000,\r\n        }\r\n    }, {\r\n        ammo: '12x20',\r\n        cost: 10,\r\n        weight: 16,\r\n        types: ['armor piercing', 'incendiary', 'standard'],\r\n        description: 'a large 12cm bullet',\r\n        loudness: {\r\n            deafnessRange: 2,\r\n            deafnessTime: 5,\r\n            hearingRange: 5000,\r\n        }\r\n    }, {\r\n        ammo: '12x24',\r\n        cost: 16,\r\n        weight: 20,\r\n        types: ['hollow point', 'armor piercing', 'incendiary', 'standard'],\r\n        description: 'a long large 12cm bullet',\r\n        loudness: {\r\n            deafnessRange: 3,\r\n            deafnessTime: 10,\r\n            hearingRange: 10000,\r\n        }\r\n    }, {\r\n        ammo: '12x28',\r\n        cost: 20,\r\n        weight: 25,\r\n        types: ['tracer', 'hollow point', 'armor piercing', 'incendiary', 'standard'],\r\n        description: 'a very long large 12cm bullet',\r\n        loudness: {\r\n            deafnessRange: 3,\r\n            deafnessTime: 12,\r\n            hearingRange: 20000,\r\n        }\r\n    }, {\r\n        ammo: '4mm ec',\r\n        cost: 3,\r\n        weight: 0.2,\r\n        types: ['standard', 'neodymium'],\r\n        description: 'a tiny caseless ferromagnetic iron bullet',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 900,\r\n        }\r\n    }, {\r\n        ammo: '12 gauge',\r\n        cost: 9,\r\n        weight: 28,\r\n        types: ['shell', 'slug', 'explosive', 'wolf'],\r\n        description: 'a 12 gauge shotgun shell',\r\n        loudness: {\r\n            deafnessRange: 2,\r\n            deafnessTime: 2,\r\n            hearingRange: 2000,\r\n        }\r\n    }, {\r\n        ammo: '20 gauge',\r\n        cost: 6.6,\r\n        weight: 21,\r\n        types: ['shell', 'slug', 'wolf'],\r\n        description: 'a 20 gauge shotgun shell',\r\n        loudness: {\r\n            deafnessRange: 1,\r\n            deafnessTime: 1,\r\n            hearingRange: 2000,\r\n        }\r\n    }, {\r\n        ammo: '20mm rpg',\r\n        cost: 1500,\r\n        weight: 800,\r\n        types: ['standard', 'grenade'],\r\n        description: 'a 40mm rocket propelled grenade',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 20000,\r\n        }\r\n    }, {\r\n        ammo: '30mm rpg',\r\n        cost: 2500,\r\n        weight: 1600,\r\n        types: ['frag', 'standard', 'grenade', 'fire bomb'],\r\n        description: 'a 40mm rocket propelled grenade',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 25000,\r\n        }\r\n    }, {\r\n        ammo: '40mm rpg',\r\n        cost: 4000,\r\n        weight: 2200,\r\n        types: ['plasma bomb', 'frag', 'standard', 'grenade', 'fire bomb'],\r\n        description: 'a 40mm rocket propelled grenade',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 40000,\r\n        }\r\n    }, {\r\n        ammo: '50mm rpg',\r\n        cost: 8000,\r\n        weight: 3000,\r\n        types: ['plasma bomb', 'homing', 'standard', 'grenade', 'fire bomb'],\r\n        description: 'a 50mm rocket propelled grenade',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 100000,\r\n        }\r\n    }, {\r\n        ammo: '1hec',\r\n        cost: 0.01,\r\n        weight: 0,\r\n        types: ['standard'],\r\n        description: '1 unit of hyperelectron charge, battery rechargeable',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 500,\r\n        }\r\n    }, {\r\n        ammo: '2hec',\r\n        cost: 0.2,\r\n        weight: 0,\r\n        types: ['standard'],\r\n        description: '1 unit of hyperelectron charge, battery rechargeable',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 500,\r\n        }\r\n    }, {\r\n        ammo: '3hec',\r\n        cost: 1,\r\n        weight: 0,\r\n        types: ['standard'],\r\n        description: '1 unit of hyperelectron charge, battery rechargeable, designed for high discharge',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 500,\r\n        }\r\n    }, {\r\n        ammo: '5hec',\r\n        cost: 2,\r\n        weight: 0,\r\n        types: ['standard'],\r\n        description: '1 unit of hyperelectron charge, battery rechargeable, designed for very high discharge',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 500,\r\n        }\r\n    }, {\r\n        ammo: '10hec',\r\n        cost: 4,\r\n        weight: 0,\r\n        types: ['standard'],\r\n        description: '10 units of hyperelectron charge, battery rechargeable, designed for extreme discharge',\r\n        loudness: {\r\n            deafnessRange: 0,\r\n            deafnessTime: 0,\r\n            hearingRange: 500,\r\n        }\r\n    }\r\n];\r\n\r\nexport interface IAmmoModification {\r\n    name: string;\r\n    description: string;\r\n    cost: number;\r\n    armorPiercingAdd?: number | undefined;\r\n    armorPiercingMultiplier?: number | undefined;\r\n    damageAdd?: number | undefined;\r\n    damageMultiplier?: number | undefined;\r\n    splashAdd?: number | undefined;\r\n    splashMultiplier?: number | undefined;\r\n    hitAdd?: number | undefined;\r\n    rangeMultiplier?: number | undefined;\r\n}\r\n\r\nexport const AmmoModifications: IAmmoModification[] = [\r\n    { name: 'Standard', description: 'default version of the ammo, assumes the weapons stats unchanged', cost: 1 },\r\n    { name: 'Tracer', description: 'tracer rounds have built in pyrotechnics which makes the bullet projectile more visible, adds +3 to hit.', hitAdd: 3, cost: 1.3 },\r\n    { name: 'Hollow point', description: 'hollow point bullets are designed to shatter upon impact, adds +3 damage, reduces armor piercing to zero and doubles damage reduction from armor', damageAdd: 3, armorPiercingMultiplier: 0, cost: 1.1 },\r\n    { name: 'Armor Piercing', description: 'bullet made of hard steel alloy instead of lead, adds +4 armor piercing, -1 damage.', armorPiercingAdd: 4, damageAdd: -1, cost: 1.1 },\r\n    { name: 'Incendiary', description: 'bullet is designed to superheat, allows it to melt metal upon impact and cause massive damage +2 armor piercing and +1 damage.', damageAdd: 1, armorPiercingAdd: 2, cost: 2.5 },\r\n    { name: 'Shell', description: 'contains multiple pellets which spread and gives to hit bonus', cost: 1 },\r\n    { name: 'Slug', description: 'contains a single metal slug, removes splash, adds +4 armor piercing, +1 to hit bonus, double range', armorPiercingAdd: 2, damageAdd: 1, hitAdd: 1, cost: 1, rangeMultiplier: 2 },\r\n    { name: 'Explosive', description: 'contains an alloy which explodes on contact, removes splash, adds +2 damage, +3 armor piercing, +1 to hit.', damageAdd: 2, armorPiercingAdd: 3, hitAdd: 1, cost: 2 },\r\n    { name: 'Wolf', description: 'tungsten slug, named after the old name of tungsten, extremely hard and heavy slug, double range. armor piercing +5, damage +2', armorPiercingAdd: 5, damageAdd: 2, cost: 10, rangeMultiplier: 2 },\r\n    { name: 'Neodymium', description: 'ferromagnetic neodymium bullet, stronger magnet results in more force', armorPiercingAdd: 1, damageAdd: 1, cost: 10 },\r\n    { name: 'Plasma Bomb', description: 'Uses the bomb to initiate a thermo-nuclear fusion reaction, releasing super heated plasma. Increase damaga and area of effect by 50%, deals fire and electric damage, armor piercing reduced to 0.', damageMultiplier: 1.5, splashMultiplier: 1.5, cost: 5 },\r\n    { name: 'Fire Bomb', description: 'The grenade releases a rapidly burning accelerant, half damage every round for anyone within the area, removes armor piercing, anying leaving instead takes 1d6, lasts 1d4 rounds, +150% cost. Not compatible  with fire or frag', cost: 1 },\r\n    { name: 'Frag', description: 'releases metal fragments at extreme velocity. Double damage and damage reduction from armor/cover. Not compatible with plasma', cost: 1 },\r\n    { name: 'Homing', description: 'homes in on target, requires snipe shot. Range penalties are halved. Not compatible with grenade', cost: 1.5 },\r\n    { name: 'Grenade', description: 'non-rocket propelled, reduces range to 80m, removes backblast property, adds +1 strength requirement due to recoil', cost: 1 },\r\n];\r\n\r\n\r\ntype fireAction = 'single action revolver' | 'double action revolver' | 'bolt action' | 'pump action' | 'semi-automatic' | 'fully-automatic' | 'continuous';\r\n\r\ntype fireArmClass = 'handgun' | 'submachinegun' | 'rifle' | 'machinegun' | 'rocketlauncher' | 'laser' | 'plasma';\r\n\r\n\r\ntype actionCost = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\r\n\r\nexport interface IFirearm extends Item {\r\n    fireArmClass: fireArmClass,\r\n    damage: IDamageDice;\r\n    /**\r\n     * meters\r\n     */\r\n    range: number;\r\n    armorpiercing?: number;\r\n    hitbonus?: number;\r\n    fireAction: fireAction[];\r\n    capacity: number;\r\n    ammo: Ammo;\r\n    rps?: number;\r\n    strengthRequirement: number;\r\n    splashRange?: number;\r\n    lowDamageZone?: number;\r\n    /** default move action */\r\n    reload: actionCost;\r\n    fireCost: actionCost;\r\n}\r\n\r\n\r\n\r\nexport class FireArm implements IFirearm {\r\n    fireArmClass: fireArmClass;\r\n    damage: IDamageDice;\r\n    range: number;\r\n    armorpiercing?: number;\r\n    hitbonus?: number;\r\n    fireAction: fireAction[];\r\n    capacity: number;\r\n    ammo: Ammo;\r\n    rps?: number;\r\n    weight: number;\r\n    value: number;\r\n    description?: string;\r\n    name: string;\r\n    strengthRequirement: number;\r\n    splashRange?: number;\r\n    lowDamageZone?: number;\r\n    reload: actionCost;\r\n    fireCost: actionCost;\r\n    relatedSkill: SkillName = 'firearms';\r\n    ammoModification?: IAmmoModification = undefined;\r\n    firearmModification?: IFirearmModification[] = [];\r\n    quality?: IQuality;\r\n    condition?: ICondition;\r\n\r\n    constructor(name: string, weight: number, value: number, damage: IDamageDice, fireArmClass: fireArmClass, range: number, fireAction: fireAction[], capacity: number, ammo: Ammo, strengthRequirement: number, description: string | undefined, hitbonus: number | undefined, armorpiercing: number | undefined, rps: number | undefined, splashRange: number | undefined, lowDamageZone: number | undefined, reload: actionCost, fireCost: actionCost) {\r\n        this.fireArmClass = fireArmClass;\r\n        this.name = name;\r\n        this.weight = weight;\r\n        this.value = value;\r\n        this.damage = damage;\r\n        this.description = description;\r\n        this.hitbonus = hitbonus;\r\n        this.armorpiercing = armorpiercing;\r\n        this.range = range;\r\n        this.fireAction = fireAction;\r\n        this.capacity = capacity;\r\n        this.ammo = ammo;\r\n        this.rps = rps;\r\n        this.strengthRequirement = strengthRequirement;\r\n        this.splashRange = splashRange;\r\n        this.lowDamageZone = lowDamageZone;\r\n        this.reload = reload;\r\n        this.fireCost = fireCost;\r\n        this.firearmModification = [];\r\n    }\r\n\r\n    public getHitBonus(): number {\r\n        return (this.hitbonus || 0) + this.getQualityBonus() + this.getConditionBonus() + this.getAmmoHitBonus() + this.getModHitBonus();\r\n    }\r\n\r\n    public getArmorPercing(): number {\r\n        return ((this.armorpiercing || 0) + this.getAmmoArmorPercingBonus() + this.getModArmorPercingBonus()) * this.getAmmoArmorPercingFactor();\r\n    }\r\n\r\n    public getDamageDice(): IDamageDice {\r\n\r\n\r\n        return {\r\n            numberOfDice: this.damage.numberOfDice,\r\n            sides: this.damage.sides,\r\n            bonus: this.damage.bonus + this.getModDamageBonus() + this.getAmmoDamageBonus() + this.getQualityBonus(),\r\n        };\r\n    }\r\n\r\n    private getQualityBonus(): number {\r\n        return (this.quality && this.quality.effect) || 0;\r\n    }\r\n\r\n    private getConditionBonus(): number {\r\n        return (this.condition && this.condition.effect) || 0;\r\n    }\r\n\r\n    private getAmmoHitBonus(): number {\r\n        if (this.ammoModification !== undefined &&\r\n            this.ammoModification.hitAdd !== undefined) {\r\n            return this.ammoModification.hitAdd;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private getAmmoDamageBonus(): number {\r\n        if (this.ammoModification !== undefined &&\r\n            this.ammoModification.damageAdd !== undefined) {\r\n            return this.ammoModification.damageAdd;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private getAmmoArmorPercingBonus(): number {\r\n        if (this.ammoModification !== undefined &&\r\n            this.ammoModification.armorPiercingAdd !== undefined) {\r\n            return this.ammoModification.armorPiercingAdd;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private getAmmoArmorPercingFactor(): number {\r\n        if (this.ammoModification !== undefined &&\r\n            this.ammoModification.armorPiercingMultiplier !== undefined) {\r\n            return this.ammoModification.armorPiercingMultiplier;\r\n        }\r\n        else return 1;\r\n    }\r\n\r\n    private getModHitBonus(): number {\r\n        let b = 0;\r\n        if (this.firearmModification !== undefined && this.firearmModification.length > 0) {\r\n            for (var index in this.firearmModification) {\r\n                const fm = this.firearmModification[index];\r\n                b += fm.hitMod || 0;\r\n            }\r\n        }\r\n        return b;\r\n    }\r\n\r\n    private getModArmorPercingBonus(): number {\r\n        let b = 0;\r\n        if (this.firearmModification !== undefined && this.firearmModification.length > 0) {\r\n            for (var index in this.firearmModification) {\r\n                const fm = this.firearmModification[index];\r\n                b += fm.armorPiercingMod || 0;\r\n            }\r\n        }\r\n        return b;\r\n    }\r\n\r\n    private getModDamageBonus(): number {\r\n        let b = 0;\r\n        if (this.firearmModification !== undefined && this.firearmModification.length > 0) {\r\n            for (var index in this.firearmModification) {\r\n                const fm = this.firearmModification[index];\r\n                b += fm.damageMod || 0;\r\n            }\r\n        }\r\n        return b;\r\n    }\r\n}\r\n\r\nconst IFirearms: IFirearm[] = [\r\n    //hand guns\r\n    {\r\n        fireArmClass: 'handgun', name: 'revolver', damage: D(1, 10), range: 300, ammo: '10x19', strengthRequirement: 2, capacity: 6, fireAction: ['double action revolver'], armorpiercing: 1, weight: 800, value: 1000,\r\n        description: 'basic revolver, this antique weapon design is mostly considered a collectors item for gun and antique enthusiasts. It still works.', reload: 3, fireCost: 4, relatedSkill: 'firearms'\r\n    },\r\n    {\r\n        fireArmClass: 'handgun', name: 'Fantry Light Model', damage: D(2, 6), range: 350, ammo: '10x21', strengthRequirement: 1, capacity: 19, fireAction: ['semi-automatic'], armorpiercing: 1, weight: 950, value: 900,\r\n        description: 'the light handgun model of the fantry gun manufacturer, has a generous ammo capacity and the design makes it less loud than other handguns', relatedSkill: 'firearms', reload: 3, fireCost: 3\r\n    },\r\n    {\r\n        fireArmClass: 'handgun', name: 'Fantry Heavy Model', damage: D(2, 8), range: 450, ammo: '11x21', strengthRequirement: 4, capacity: 14, fireAction: ['semi-automatic'], armorpiercing: 2, weight: 1200, value: 1200,\r\n        description: 'a large hand gun designed to inflict serious damage', relatedSkill: 'firearms', reload: 3, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'handgun', name: 'Merlion Atomic', damage: D(2, 6), range: 400, ammo: '10x21', strengthRequirement: 2, capacity: 12, fireAction: ['semi-automatic'], armorpiercing: 2, weight: 850, hitbonus: 2, value: 1700,\r\n        description: 'Common handgun used exclusively by merlions, the arcane alloys allows for both supreme recoil handling', relatedSkill: 'firearms', reload: 2, fireCost: 3\r\n    },\r\n\r\n    //submachinegun\r\n    {\r\n        fireArmClass: 'handgun', name: 'Fantry Sub Model', damage: D(1, 8), range: 350, ammo: '9x21', strengthRequirement: 3, capacity: 24, fireAction: ['semi-automatic', 'fully-automatic'], armorpiercing: 2, rps: 8, weight: 1800, value: 2800,\r\n        description: 'A very light submachine gun, fires relatively slow for a submachine gun on while on full automatic', relatedSkill: 'firearms', reload: 4, fireCost: 3\r\n    },\r\n    {\r\n        fireArmClass: 'handgun', name: 'Skolt cleaner', damage: D(1, 10), range: 300, ammo: '10x19', strengthRequirement: 4, capacity: 36, fireAction: ['semi-automatic', 'fully-automatic'], armorpiercing: 1, rps: 10, weight: 2100, value: 3100,\r\n        description: 'The Skolt Cleaner is a popular submachinegun', reload: 4, fireCost: 4, relatedSkill: 'firearms',\r\n    },\r\n\r\n    //rifle\r\n    {\r\n        fireArmClass: 'rifle', name: 'Fantry Assault Model', damage: D(2, 6), range: 800, ammo: '11x17', strengthRequirement: 3, capacity: 48, fireAction: ['semi-automatic', 'fully-automatic'], armorpiercing: 1, weight: 2200, value: 1500,\r\n        description: 'A light weight assault weapon', rps: 6, hitbonus: 1, relatedSkill: 'firearms', reload: 4, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Skolt Hunter', damage: D(2, 8), range: 100, ammo: '12x20', strengthRequirement: 4, capacity: 8, fireAction: ['bolt action'], armorpiercing: 2, weight: 2300, value: 2000,\r\n        description: 'A rifle primarily designed for hunting', reload: 5, fireCost: 5, relatedSkill: 'firearms',\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Skolt LG', damage: D(2, 10), range: 1200, ammo: '12x24', strengthRequirement: 5, capacity: 6, fireAction: ['bolt action'], armorpiercing: 3, weight: 3500, value: 2100,\r\n        description: 'The skolt LG (long gun) is primarily designed for hunting large game', reload: 6, fireCost: 5, relatedSkill: 'firearms',\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Night AV Sniper', damage: D(2, 10), range: 1800, ammo: '12x28', strengthRequirement: 5, capacity: 4, fireAction: ['bolt action'], armorpiercing: 5, hitbonus: -1, weight: 8200, value: 3600,\r\n        description: 'This huge sniper rifle is designed to take out targets at extreme range, or damage vehicles', reload: 5, fireCost: 5, relatedSkill: 'firearms',\r\n    },\r\n    //automatic rifle\r\n    {\r\n        fireArmClass: 'rifle', name: 'Skolt Advanced', damage: D(1, 12), range: 700, ammo: '11x21', strengthRequirement: 4, capacity: 60, fireAction: ['semi-automatic', 'fully-automatic'], armorpiercing: 3, rps: 8, weight: 3200, value: 3600,\r\n        description: 'A slim and futuristic looking fully automatic assault rifle designed for urban warfare ', hitbonus: 1, relatedSkill: 'firearms', reload: 4, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Merlion Predator', damage: D(2, 10), range: 1100, ammo: '12x24', strengthRequirement: 4, capacity: 45, fireAction: ['semi-automatic', 'fully-automatic'], armorpiercing: 4, rps: 12, weight: 3600, value: 11000,\r\n        description: 'This strange merlion designed weapon was originally intended as an anti-human weapon, but when merlions decided that humans were harmless creatures they offered this weapon as a gesture of good will', relatedSkill: 'firearms', reload: 4, fireCost: 4\r\n    },\r\n    //shotgun\r\n    {\r\n        fireArmClass: 'rifle', name: 'Skolt Crusher', damage: D(2, 6), range: 160, ammo: '12 gauge', strengthRequirement: 4, capacity: 10, fireAction: ['semi-automatic'], weight: 2600, value: 2400, armorpiercing: 1,\r\n        description: 'The skolt crusher is a long barrel semi-automatic shotgun, has a low spread. If within 3 meters lowest damage dice counts as max. Double range penalty to accuracy.', splashRange: 0.5, lowDamageZone: 1, relatedSkill: 'firearms',\r\n        reload: 5, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Night Hammer', damage: D(2, 6), range: 80, ammo: '12 gauge', strengthRequirement: 4, capacity: 12, fireAction: ['pump action'], weight: 2700, value: 2100, hitbonus: 1,\r\n        description: 'This old fashioned pump action shotgun offers a wide spread which increases likelyhood of hitting. If within 2 meters lowest damage dice counts as max. Double range penalty to accuracy.', splashRange: 0.8, lowDamageZone: 1, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Night Hammer sawed off', damage: D(2, 6), range: 40, ammo: '12 gauge', strengthRequirement: 4, capacity: 12, fireAction: ['pump action'], weight: 2000, value: 2000, hitbonus: 2,\r\n        description: 'A sawed off version of the Night Hammer, slightly lighter and has a huge spread. If within 1 meters lowest damage dice counts as max. Double range penalty to accuracy.', splashRange: 1, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 3\r\n    },\r\n    //magnetic guns\r\n    {\r\n        fireArmClass: 'rifle', name: 'Night Coil', damage: D(2, 6), range: 1200, ammo: '4mm ec', strengthRequirement: 6, capacity: 60, fireAction: ['semi-automatic'], weight: 7000, value: 2600, hitbonus: 2, armorpiercing: 4,\r\n        description: 'This experimental weapon uses electromagnetic induction to launch a bullet, naturally very silent', reload: 6, fireCost: 4, relatedSkill: 'firearms',\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Skolt Railgun', damage: D(2, 8), range: 1800, ammo: '4mm ec', strengthRequirement: 7, capacity: 60, fireAction: ['semi-automatic'], weight: 11000, value: 3800, hitbonus: 1, armorpiercing: 5,\r\n        description: 'A huge railgun, has two long rails along which a tiny ferromagnetic bullet is accelerated to breathtaking speeds', reload: 6, fireCost: 5, relatedSkill: 'firearms',\r\n    },\r\n    {\r\n        fireArmClass: 'rifle', name: 'Merlion Force Gun', damage: D(2, 8), range: 2000, ammo: '4mm ec', strengthRequirement: 6, capacity: 60, fireAction: ['semi-automatic'], weight: 9000, value: 5400, hitbonus: 1, armorpiercing: 5,\r\n        description: 'A strange rifle that exploits the electroweak force in an unknown way', reload: 3, fireCost: 5, relatedSkill: 'firearms',\r\n    },\r\n    //machinegun\r\n    {\r\n        fireArmClass: 'machinegun', name: 'Fantry Tyrant Model', damage: D(1, 8), range: 600, ammo: '9x17', strengthRequirement: 5, capacity: 200, fireAction: ['fully-automatic'], rps: 6, weight: 8000, value: 5500,\r\n        description: 'The Tyrant model of the Fantry gun manufacturer, fully automatic machine gun light enough to hold up or using the tripod', relatedSkill: 'firearms', reload: 8, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'machinegun', name: 'Merlion Durium', damage: D(1, 12), range: 900, ammo: '9x23', strengthRequirement: 6, capacity: 150, fireAction: ['fully-automatic'], armorpiercing: 3, rps: 6, weight: 7000, value: 6700, hitbonus: 3,\r\n        description: 'An elegant machine gun used only be the merlion military', relatedSkill: 'firearms', reload: 6, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'machinegun', name: 'Skolt Obliderator', damage: D(2, 10), range: 1600, ammo: '12x28', strengthRequirement: 9, capacity: 120, fireAction: ['fully-automatic'], armorpiercing: 4, rps: 8, weight: 12000, value: 9500,\r\n        description: 'Point this massive machinegun in a direction, hold down the trigger and watch as everything is turned into swiss cheese. Reloading takes a full round action', reload: 8, fireCost: 6, relatedSkill: 'firearms',\r\n    },\r\n    //rocket launcher\r\n    {\r\n        fireArmClass: 'rocketlauncher', name: 'Minirocket Launcher', damage: D(6, 8), range: 600, ammo: '20mm rpg', strengthRequirement: 6, capacity: 8, fireAction: ['semi-automatic'], armorpiercing: 2, weight: 6000, value: 6000, hitbonus: -1,\r\n        description: 'Specialized rocket launcher, fires small rockets, designed to take out heavily armored soldiers. Reloading takes a full round action. Backblast: Deals 3d6 fire damage to anyone standing behind operator in up to 2 meters', splashRange: .5, lowDamageZone: 2, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 6\r\n    },\r\n    {\r\n        fireArmClass: 'rocketlauncher', name: 'AV-RPG', damage: D(8, 8), range: 1000, ammo: '30mm rpg', strengthRequirement: 6, capacity: 3, fireAction: ['bolt action'], armorpiercing: 4, weight: 5000, value: 800, hitbonus: -2,\r\n        description: 'Standard anti-vehicle rocket launcher, destroys light tanks, up to 1 meter concrete. Reloading takes a full round action. Backblast: Deals 4d6 fire damage to anyone standing behind operator in up to 4 meters', splashRange: 2, lowDamageZone: 3, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 6\r\n    },\r\n    {\r\n        fireArmClass: 'rocketlauncher', name: 'AT-RPG', damage: D(10, 8), range: 2500, ammo: '40mm rpg', strengthRequirement: 6, capacity: 2, fireAction: ['bolt action'], armorpiercing: 6, weight: 5000, value: 12000, hitbonus: -3,\r\n        description: 'Heavy anti-tank rocket launcher, will destroy any vehicle or base. Reloading takes a full round action. Backblast: Deals 5d6 fire damage to anyone standing behind operator in up to 8 meters', splashRange: .5, lowDamageZone: 1, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 7\r\n    },\r\n    {\r\n        fireArmClass: 'rocketlauncher', name: 'AB-RPG', damage: D(12, 8), range: 3500, ammo: '50mm rpg', strengthRequirement: 6, capacity: 1, fireAction: ['bolt action'], armorpiercing: 8, weight: 7000, value: 14000, hitbonus: -4,\r\n        description: 'This rocket launcher is designed to destroy entire buildings, anything hit by it is vaporized. Reloading takes a full round action. Backblast: Deals 6d6 fire damage to anyone standing behind operator in up to 16 meters', splashRange: .5, lowDamageZone: 1, relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 7\r\n    },\r\n    //energy weapons\r\n    {\r\n        fireArmClass: 'laser', name: 'Fantry Lasergun', damage: D(2, 4), range: 1800, ammo: '1hec', strengthRequirement: 1, capacity: 80, fireAction: ['semi-automatic', 'continuous'], armorpiercing: 1, hitbonus: 5, weight: 1100, value: 2800,\r\n        description: 'the only laser handgun, fires green laser, needs protective gear to use, has blinding effect to all within 2 meters for 2d4 rounds (acrobatics 20 for half) and additionally -1 (cumulative) on all sight related checks until a long rest has been completed, half range penalty', relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 3\r\n    },\r\n    {\r\n        fireArmClass: 'laser', name: 'Skolt Lightpulse', damage: D(3, 4), range: 2000, ammo: '2hec', strengthRequirement: 3, capacity: 60, fireAction: ['semi-automatic', 'continuous'], armorpiercing: 2, hitbonus: 4, weight: 3000, value: 4400,\r\n        description: 'shoots a high energy blue laser pulse, needs protective gear to use, has blinding effect to all within 3 meters for 3d4 rounds (acrobatics 20 for half) and additionally -2 (cumulative) on all sight related checks until a long rest has been completed, half range penalty', relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'laser', name: 'Merlion Deathray', damage: D(3, 6), range: 2400, ammo: '3hec', strengthRequirement: 3, capacity: 40, fireAction: ['semi-automatic', 'continuous'], armorpiercing: 3, hitbonus: 4, weight: 3000, value: 16000,\r\n        description: 'shoots a ultraviolet laser pulse, needs protective gear to use, has blinding effect to all within 4 meters for 3d6 rounds (acrobatics 25 for half) and additionally -4 (cumulative) on all sight related checks until a long rest has been completed, inflicts 1 radiation dose every 10 shots in 4 meter thick clothes negates radiation, half range penalty', relatedSkill: 'firearms',\r\n        reload: 6, fireCost: 4\r\n    },\r\n    {\r\n        fireArmClass: 'plasma', name: 'Skolt Plasma Bloom', damage: D(4, 6), range: 120, ammo: '5hec', strengthRequirement: 4, capacity: 20, fireAction: ['semi-automatic'], hitbonus: 1, weight: 6200, value: 18000,\r\n        description: 'shoots an intense laser which causes the air to \"bloom\", induction is used to propel the blooming plasma, has blinding effect to all within 2 meters for 2d4 rounds (acrobatics 18 for half), level 2 radiation, half damage at 40 meters', relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 6\r\n    },\r\n    {\r\n        fireArmClass: 'plasma', name: 'Merlion Plasma Cannon', damage: D(6, 6), range: 100, ammo: '10hec', strengthRequirement: 4, capacity: 15, fireAction: ['semi-automatic'], hitbonus: 1, weight: 6000, value: 24000,\r\n        description: 'shoots highly energetic beam of charged particles which ionizes the air as it passes through it, needs protective gear to use, has blinding effect to all within 2 meters for 2d4 rounds (acrobatics 18 for half), level 5 radiation , half damage at 50 meters', relatedSkill: 'firearms',\r\n        reload: 8, fireCost: 6\r\n    }\r\n];\r\n\r\nconst Firearms = IFirearms.map(f => new FireArm(f.name, f.weight, f.value, f.damage, f.fireArmClass, f.range, f.fireAction, f.capacity, f.ammo,\r\n    f.strengthRequirement, f.description, f.hitbonus, f.armorpiercing, f.rps, f.splashRange, f.lowDamageZone, f.reload, f.fireCost));\r\n\r\nexport interface IFirearmModification {\r\n    name: string;\r\n    description: string;\r\n    cost: number;\r\n    costMultiplier: number;\r\n    /**\r\n     * grams\r\n     */\r\n    weight: number;\r\n    weightMultiplier?: number | undefined;\r\n    effects: string[];\r\n    strengthMod?: number | undefined;\r\n    hitMod?: number | undefined;\r\n    damageMod?: number | undefined;\r\n    armorPiercingMod?: number | undefined;\r\n    rangeMod?: number | undefined;\r\n    ammoCapacityMod?: number | undefined;\r\n}\r\n\r\nexport const FirearmModifications: IFirearmModification[] = [\r\n    {\r\n        name: 'Scope',\r\n        description: 'Reduces long range penalties by half when using snipe or aimed shot',\r\n        effects: [],\r\n        cost: 300,\r\n        costMultiplier: 1,\r\n        weight: 200,\r\n    },\r\n    {\r\n        name: 'Targeting gyro scope',\r\n        description: 'Reduces long range penalties by third when using snipe shot or half when using aimed shot. Does not stack with regular scope',\r\n        effects: [],\r\n        cost: 2200,\r\n        costMultiplier: 1,\r\n        weight: 400,\r\n    },\r\n    {\r\n        name: 'Suppressor',\r\n        description: 'Reduces the sound of a ballistic firearm (handguns, submachine guns, rifles, machineguns)',\r\n        effects: ['sound -50%', 'deafness -1 round', '-20% range', '-1 armor piercing'],\r\n        cost: 400,\r\n        costMultiplier: 1,\r\n        weight: 100,\r\n        rangeMod: .8,\r\n        armorPiercingMod: -1,\r\n    },\r\n    {\r\n        name: 'Heavy Suppressor',\r\n        description: 'Reduces the sound of a ballistic firearm (handguns, submachine guns, rifles, machineguns)',\r\n        effects: ['sound -75%', 'deafness -2 round', '-40% range', '-2 armor piercing'],\r\n        cost: 500,\r\n        costMultiplier: 1,\r\n        weight: 200,\r\n        rangeMod: .6,\r\n        armorPiercingMod: -2,\r\n    },\r\n    {\r\n        name: 'Laser Target',\r\n        description: 'Adds a laser target which helps aiming.',\r\n        effects: ['+2 hit bonus'],\r\n        cost: 600,\r\n        costMultiplier: 1,\r\n        weight: 0,\r\n        hitMod: 2,\r\n    },\r\n    {\r\n        name: 'Extended magazine',\r\n        description: 'Double clip size',\r\n        effects: ['ammo +100%'],\r\n        cost: 0,\r\n        costMultiplier: 1.2,\r\n        weight: 0,\r\n        weightMultiplier: 1.1,\r\n        ammoCapacityMod: 2,\r\n    },\r\n    {\r\n        name: 'Auto-loader',\r\n        description: 'Converts a semi-automatic firearm into a fully-automatic one, removes semi-auto mode, adds full-auto mode. Not available for energy weapons',\r\n        effects: ['remove semi-auto', 'add full-auto', 'hit bonus -4', 'armor piercing -1'],\r\n        cost: 100,\r\n        weight: 0,\r\n        costMultiplier: 1,\r\n        hitMod: -4,\r\n        armorPiercingMod: -1,\r\n    },\r\n    {\r\n        name: 'Extra barrel',\r\n        description: 'Adds a secondary barrel (often 20mm rpg), single ammo capacity, reduces accuracy slightly. Only available to rifle type weapons.',\r\n        effects: ['hit bonus -1'],\r\n        cost: 200,\r\n        weight: 500,\r\n        costMultiplier: 1,\r\n    },\r\n    {\r\n        name: 'Heavy Stock',\r\n        description: 'Improves recoil control, can not be transferred to other firearms.',\r\n        effects: ['+1 hit bonus', '+1 damage bonus'],\r\n        cost: 0,\r\n        costMultiplier: 1.2,\r\n        weight: 0,\r\n        weightMultiplier: 1.4,\r\n        hitMod: 1,\r\n        damageMod: 1,\r\n    },\r\n    {\r\n        name: 'Bayonet',\r\n        description: 'Adds a spear at the end of your firearm turning it into a spear, not available to handguns and machineguns. Uses long spear stats',\r\n        effects: [],\r\n        cost: 600,\r\n        costMultiplier: 1,\r\n        weight: 800,\r\n    },\r\n    {\r\n        name: 'Long barrel',\r\n        description: 'Longer barrel range for increased range, not available to machineguns and energy weapons.',\r\n        effects: ['+50% maximum range'],\r\n        cost: 0,\r\n        costMultiplier: 1.1,\r\n        weight: 0,\r\n        weightMultiplier: 1.1,\r\n        rangeMod: 1.5\r\n    },\r\n    {\r\n        name: 'Environmental shielding',\r\n        description: 'This weapon is protected from environmental damages including water, salt, acid, heat, emp.',\r\n        effects: [],\r\n        cost: 0,\r\n        costMultiplier: 1.2,\r\n        weight: 0,\r\n        weightMultiplier: 1,\r\n    },\r\n    {\r\n        name: 'Tripod',\r\n        description: 'Reduces strength requirement, only avalable for rifles and machineguns. Placing tripod uses move action',\r\n        effects: ['-2 strength requirement'],\r\n        cost: 100,\r\n        costMultiplier: 1,\r\n        weight: 300,\r\n        strengthMod: -2,\r\n    },\r\n    {\r\n        name: 'Large Tripod',\r\n        description: 'Reduces strength requirement, only avalable for rifles and machineguns. Placing tripod uses move action',\r\n        effects: ['-3 strength requirement'],\r\n        cost: 200,\r\n        costMultiplier: 1,\r\n        weight: 1000,\r\n        strengthMod: -3,\r\n    },\r\n    {\r\n        name: 'Arm mount',\r\n        description: 'Allows use of two handed firearms with one hand',\r\n        effects: ['+3 strength requirement'],\r\n        cost: 200,\r\n        costMultiplier: 1,\r\n        weight: 1000,\r\n        strengthMod: +3,\r\n    },\r\n    {\r\n        name: 'Turbo charge',\r\n        description: '(energy weapons) +50% damage, can only fire once per round.',\r\n        effects: ['ammo use +100%', '-25% range', 'Overheats: uses 2 ammo per shot, can only fire every other turn, if used two turns in a row will immediately overheat after second shot'],\r\n        cost: 0,\r\n        costMultiplier: 1.25,\r\n        weight: 500,\r\n    },\r\n    {\r\n        name: 'Barrel Cooler',\r\n        description: 'Delays overheating, speeds up cooling.',\r\n        effects: ['Overheats at 4x ammo capacity', 'Cools after 1 minute'],\r\n        cost: 400,\r\n        weight: 300,\r\n        costMultiplier: 1,\r\n    },\r\n    {\r\n        name: 'Heat sink',\r\n        description: 'Absorbs heat and vents it into the air, if combined with Turbo charge will instead allow fire once every turn and increases ammo use to 4 per shot. If used on normal firearm prevents overheating',\r\n        effects: ['Energy weapon does not overheat', 'Uses 1 ec charge every 10th used.'],\r\n        cost: 600,\r\n        weight: 600,\r\n        costMultiplier: 1,\r\n    }\r\n];\r\n\r\nexport default Firearms;","import { CharacterPoints, IRaceData } from \"./Races\";\r\n\r\nexport const humansData: IRaceData = {\r\n    racialMods: [\r\n        {\r\n            ageSpan: [18, 26],\r\n            species: 'human',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            sizeOptions: ['small', 'medium', 'large']\r\n        },\r\n        {\r\n            ageSpan: [27, 40],\r\n            species: 'human',\r\n            strength: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            endurance: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['small', 'medium', 'large']\r\n        },\r\n        {\r\n            ageSpan: [41, 80],\r\n            species: 'human',\r\n            strength: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            endurance: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            agility: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            perception: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['small', 'medium', 'large']\r\n        },\r\n        {\r\n            ageSpan: [81, 180],\r\n            species: 'human',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['small', 'medium', 'large']\r\n        },\r\n    ],\r\n    experiencePoints: age => CharacterPoints(0, [18, 26, 40, 80], [10, 8, 6, 4], age),\r\n    experienceMultipler: age => {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    },\r\n};","import { CharacterPoints, IRaceData } from \"./Races\";\r\n\r\nexport const merlionsData: IRaceData = {\r\n    racialMods: [\r\n        {\r\n            ageSpan: [18, 40],\r\n            species: 'merlion',\r\n            strength: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 2, pointBuyMod: 4 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['tiny', 'small', 'medium']\r\n        },\r\n        {\r\n            ageSpan: [41, 80],\r\n            species: 'merlion',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            agility: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            perception: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 2, pointBuyMod: 4 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['tiny', 'small', 'medium']\r\n        },\r\n        {\r\n            ageSpan: [81, 120],\r\n            species: 'merlion',\r\n            strength: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            endurance: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            agility: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 2, pointBuyMod: 4 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['tiny', 'small', 'medium']\r\n        },\r\n        {\r\n            ageSpan: [121, 180],\r\n            species: 'merlion',\r\n            strength: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            endurance: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            agility: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            intelligence: { sidesPerDice: 6, numberOfDice: 2, pointBuyMod: 3 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['tiny', 'small', 'medium']\r\n        },\r\n    ],\r\n    experiencePoints: age => CharacterPoints(0, [16, 28, 50, 90], [10, 8, 6, 4], age),\r\n    experienceMultipler: age => {\r\n        if (age > 70) return 1;\r\n        if (age > 60) return 1.5;\r\n        if (age > 50) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    },\r\n};","import { CharacterPoints, IRaceData } from \"./Races\";\r\n\r\n\r\nexport const nekovianData: IRaceData = {\r\n    racialMods: [\r\n        {\r\n            ageSpan: [16, 24],\r\n            species: 'nekovian',\r\n            strength: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            endurance: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            agility: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            perception: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            willpower: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            sizeOptions: ['tiny', 'small']\r\n        },\r\n        {\r\n            ageSpan: [25, 36],\r\n            species: 'nekovian',\r\n            strength: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            endurance: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            sizeOptions: ['tiny', 'small']\r\n        },\r\n        {\r\n            ageSpan: [37, 60],\r\n            species: 'nekovian',\r\n            strength: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            endurance: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            willpower: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            sizeOptions: ['tiny', 'small']\r\n        },\r\n        {\r\n            ageSpan: [61, 120],\r\n            species: 'nekovian',\r\n            strength: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            perception: { sidesPerDice: 4, numberOfDice: 1, pointBuyMod: -2 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            willpower: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            sizeOptions: ['tiny', 'small']\r\n        },\r\n    ],\r\n    experiencePoints: age => CharacterPoints(0, [16, 24, 36, 80], [10, 8, 6, 4], age),\r\n    experienceMultipler: age => {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 30) return 2.5;\r\n        if (age > 26) return 3;\r\n        if (age > 24) return 3.5;\r\n        if (age > 20) return 4;\r\n        if (age > 16) return 4.5;\r\n        return 5;\r\n    },\r\n};","import { CharacterPoints, IRaceData } from \"./Races\";\r\n\r\nexport const shambrasData: IRaceData = {\r\n    racialMods: [\r\n        {\r\n            ageSpan: [15, 20],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            endurance: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            intelligence: { sidesPerDice: 4, numberOfDice: 1, pointBuyMod: -2 },\r\n            willpower: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            sizeOptions: ['tiny', 'small', 'medium'],\r\n            special: '-2 climb and swim -3 jump'\r\n        },\r\n        {\r\n            ageSpan: [21, 25],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            endurance: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            intelligence: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['small', 'medium'],\r\n            special: '-4 climb and swim -6 jump'\r\n        },\r\n        {\r\n            ageSpan: [26, 35],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            perception: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            intelligence: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['small', 'medium', 'large'],\r\n            special: '-6 climb and swim -9 jump'\r\n        },\r\n        {\r\n            ageSpan: [36, 50],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            perception: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            intelligence: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['medium', 'large'],\r\n            special: '-8 climb and swim -12 jump'\r\n        },\r\n        {\r\n            ageSpan: [51, 100],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            endurance: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            agility: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            perception: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            intelligence: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['medium', 'large', 'huge'],\r\n            special: '-10 climb and swim -15 jump'\r\n        },\r\n        {\r\n            ageSpan: [101, 200],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 6, numberOfDice: 2, pointBuyMod: 3 },\r\n            endurance: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            agility: { sidesPerDice: 4, numberOfDice: 1, pointBuyMod: -1 },\r\n            perception: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            sizeOptions: ['large', 'huge'],\r\n            special: '-12 climb and swim -18 jump'\r\n        },\r\n        {\r\n            ageSpan: [201, 300],\r\n            species: 'shambras',\r\n            strength: { sidesPerDice: 8, numberOfDice: 2, pointBuyMod: 4 },\r\n            endurance: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            agility: { sidesPerDice: 2, numberOfDice: 1, pointBuyMod: -2 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 1, pointBuyMod: -1 },\r\n            intelligence: { sidesPerDice: 12, numberOfDice: 1, pointBuyMod: 2 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['large', 'huge', 'gigantic'],\r\n            special: '-14 climb and swim -21 jump'\r\n        },\r\n    ],\r\n    experiencePoints: age => CharacterPoints(0, [10, 20, 40, 80, 160, 320, 640], [4, 5, 6, 8, 10, 11, 12], age),\r\n    experienceMultipler: age => {\r\n        if (age > 100) return 3;\r\n        if (age > 80) return 2.5;\r\n        if (age > 60) return 2;\r\n        if (age > 40) return 1.5;\r\n        return 1;\r\n    },\r\n};","import { CharacterPoints, IRaceData } from \"./Races\";\r\n\r\nexport const synthsData: IRaceData = {\r\n    racialMods: [\r\n        {\r\n            ageSpan: [2, 200],\r\n            species: 'human',\r\n            strength: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            endurance: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            agility: { sidesPerDice: 6, numberOfDice: 2, pointBuyMod: 3 },\r\n            perception: { sidesPerDice: 6, numberOfDice: 2, pointBuyMod: 3 },\r\n            intelligence: { sidesPerDice: 10, numberOfDice: 1, pointBuyMod: 1 },\r\n            willpower: { sidesPerDice: 8, numberOfDice: 1, pointBuyMod: 0 },\r\n            sizeOptions: ['tiny', 'small', 'medium', 'large', 'huge', 'gigantic', 'colossal', 'titanic']\r\n        },\r\n    ], experiencePoints: age => CharacterPoints(200, [20, 100, 300], [4, 2, 1], age),\r\n    experienceMultipler: age => {\r\n        if (age > 100) return 2;\r\n        if (age > 20) return 3;\r\n        return 4;\r\n    },\r\n};","import { useState, useEffect } from 'react';\r\n\r\nfunction parseJsonOr<T>(str:string|null, def:T){\r\n  if (str === null) return def;\r\n  return JSON.parse(str) as T;\r\n}\r\n\r\nfunction usePersistentState<T>(key:string, defaultValue:T):[T, React.Dispatch<T>] {\r\n    const [state, setState] = useState<T>(\r\n      () => parseJsonOr<T>(sessionStorage.getItem(key), defaultValue)\r\n    );\r\n    useEffect(() => {\r\n      sessionStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState];\r\n  }\r\n  \r\n\r\nexport default usePersistentState;","import Item from \"./Item\";\r\n\r\nexport interface IConsumable extends Item {\r\n    charges: number;\r\n}\r\n\r\nexport const ConsumableWeapons: IConsumable[] = [\r\n    {\r\n        name: 'Frag Grenade',\r\n        description: 'Does 6d8 damage in a radius of 2 meters (hexes) and quarter 1 meter radius more. Destroys objects. Deafness in blast area for 4 rounds.',\r\n        value: 1400,\r\n        weight: 900,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Incendiary Grenade',\r\n        description: 'Does 2d6 thermal damage in a radius of 3 meters to everyone starting in or moving through the area. Lasts 10 rounds. Anyone standing in the area when the incendiary grenade detonates will also burn for 10 rounds, taking 2d6 at the start of their turn. Being on fire imposes a -10 to all perception based rolls and the burning creature must succeed a DC 15 willpower roll or become paniced.',\r\n        value: 1300,\r\n        weight: 950,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Plasma Grenade',\r\n        description: 'Does 10d6 thermal and electrical damage in a radius of 3 meters.',\r\n        value: 3000,\r\n        weight: 1500,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Electric Pulse Grenade',\r\n        description: 'Does 2d4 electric damage with 10 armor piercing in a radius of 6 meters. Double damage to electronics.',\r\n        value: 3000,\r\n        weight: 1200,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Flash grenade',\r\n        description: 'Blinds and deafens everyone within 5 meters for 2d6+4 rounds and everyone within 10 meters for 1d6+2 rounds. Make a contested acrobatics + agility to protect your eyes OR your ears.',\r\n        value: 700,\r\n        weight: 750,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Smoke Bomb',\r\n        description: 'Creates smoke that expands by 1 meter (hex) per round to a maximum of 10 meter. Smoke prevents vision and lasts 20 rounds. Anyone beginning their turn inside smoke and is breathing must succeed an endurance roll against 20 or lose their action for their turn.',\r\n        value: 600,\r\n        weight: 700,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Steel foam grenade',\r\n        description: 'Creates steel foam that expands up to 2 meters in all direction, each round it hardens and gains 5 points up to 20.',\r\n        value: 1200,\r\n        weight: 2000,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n    {\r\n        name: 'Oil Disperser',\r\n        description: 'Releases slippery oil and marbles on a 4meter radius area, terrain becomes difficult and anyone attempting to walk across it must succeed on a DC 20 acrobatics + agility roll of fall prone and lose their action.',\r\n        value: 600,\r\n        weight: 700,\r\n        charges: 1,\r\n        relatedSkill: 'explosives',\r\n    },\r\n];\r\n\r\nexport const ConsumableTools: IConsumable[] = [\r\n    {\r\n        name: 'med kit',\r\n        description: 'contains stempacks, antibotics, antivirals, diagnostic tools, antivenom, weak and strong painkillers',\r\n        charges: 20,\r\n        weight: 2500,\r\n        value: 4000,\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Climing/Parkour gear',\r\n        description: 'contains traction cleats, anchors, rope, revo belay',\r\n        charges: 50,\r\n        weight: 3000,\r\n        value: 1500,\r\n        relatedSkill: 'acrobatics',\r\n    },\r\n    {\r\n        name: 'Sports gear',\r\n        description: 'contains pair of sneakers, towel, water bottle, headband, aerodynamic one-piece',\r\n        charges: 40,\r\n        weight: 2000,\r\n        value: 2000,\r\n        relatedSkill: 'athletics',\r\n    },\r\n    {\r\n        name: 'Sharpening tools',\r\n        description: 'Contains sharpening stick for blades',\r\n        charges: 1000,\r\n        weight: 500,\r\n        value: 100,\r\n        relatedSkill: 'combat',\r\n    },\r\n    {\r\n        name: 'Portable Cooking set',\r\n        description: 'contains a small pot, a large pot, a light frying pan, one electric stove, portable refrigerator, including batteries for up to 10 meals.',\r\n        charges: 100,\r\n        weight: 10000,\r\n        value: 5000,\r\n        relatedSkill: 'cooking'\r\n    },\r\n    {\r\n        name: 'Electronics toolkit',\r\n        description: 'contains multi meter, spare wires and cables, wireboard, universal screwdriver, soldering tools',\r\n        charges: 30,\r\n        weight: 4000,\r\n        value: 2000,\r\n        relatedSkill: 'electronics'\r\n    },\r\n    {\r\n        name: 'Ballistic kit',\r\n        description: 'contains universal screwdriver, spare screws, oil, small brush, protective eyewear',\r\n        charges: 40,\r\n        weight: 300,\r\n        value: 400,\r\n        relatedSkill: 'firearms'\r\n    },\r\n    {\r\n        name: 'Forensics kit',\r\n        description: 'contains darklight, fingerprint duster, biosample collector, laser pointer',\r\n        charges: 40,\r\n        weight: 1000,\r\n        value: 1200,\r\n        relatedSkill: 'investigation'\r\n    },\r\n    {\r\n        name: 'Lockpick',\r\n        description: 'contains assortment of lockpicks',\r\n        charges: 100,\r\n        weight: 200,\r\n        value: 500,\r\n        relatedSkill: 'larceny'\r\n    },\r\n    {\r\n        name: 'Electronic lockpick',\r\n        description: 'contains connector, IR coms, UV coms, micro-hologram projector, adaptor, cryptogram chip',\r\n        charges: 80,\r\n        weight: 2000,\r\n        value: 3500,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Mechanics kit',\r\n        description: 'contains universal screwdrivers, hammer, spare nuts, bolts, screws, nails, adjustable wrench',\r\n        charges: 1000,\r\n        weight: 5000,\r\n        value: 1500,\r\n        relatedSkill: 'mechanics'\r\n    },\r\n    {\r\n        name: 'Batteries',\r\n        description: 'Rechargeble Lithium ion battery, can be used to recharge energy weapons, computers, tools, even vehicles',\r\n        charges: 10000,\r\n        weight: 1000,\r\n        value: 1000,\r\n        relatedSkill: 'electronics'\r\n    },\r\n    {\r\n        name: 'Personal solar array',\r\n        description: 'A 1x1 meter solar foldable panel, can charge one battery over the course of a day.',\r\n        charges: 10000,\r\n        weight: 500,\r\n        value: 2000,\r\n        relatedSkill: 'electronics'\r\n    },\r\n    {\r\n        name: 'Motion sensor',\r\n        description: 'detects air movement and vibrations up to 100 meters, can be adjusted to less',\r\n        charges: 100,\r\n        weight: 200,\r\n        value: 200,\r\n        relatedSkill: 'mechanics'\r\n    },\r\n    {\r\n        name: 'Tiny tracker',\r\n        description: 'tiny tracker emits weak long band microwaves, adjustable to an exact frequency and pattern, trackable up to 100km. Illegal',\r\n        charges: 1,\r\n        weight: 10,\r\n        value: 300,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Infrared googles',\r\n        description: 'Googles that track infra-red light, allows visible light to be seen too as an option.',\r\n        charges: 10000,\r\n        weight: 200,\r\n        value: 900,\r\n        relatedSkill: 'stealth'\r\n    },\r\n    {\r\n        name: 'Ultraviolet googles',\r\n        description: 'Googles that track ultra-violet light, allows visible light to be seen too as an option.',\r\n        charges: 10000,\r\n        weight: 300,\r\n        value: 1600,\r\n        relatedSkill: 'stealth'\r\n    },\r\n    {\r\n        name: 'Pocket Computer',\r\n        description: 'Basically a futuristic smartphone. Allows user to substitute computer roll for any knowledge roll. 10TB storage, 12x 5.5GH cpu cores, 512GB ram, 4 cameras, gyrometer, accelerometer, geigercounter, radiobooster. 48h battery',\r\n        charges: 1000,\r\n        weight: 1000,\r\n        value: 2000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Jetpack',\r\n        description: 'Allows for short bursts which propel the user. Jump +50 meters up, +100 meters forward, requires athletics + agility 20 to safely land. Can hover if your total weight is 80kg or less',\r\n        charges: 100,\r\n        weight: 6000,\r\n        value: 14000,\r\n        relatedSkill: 'athletics'\r\n    },\r\n    {\r\n        name: 'Flightsuit',\r\n        description: 'Allows for gliding, flying if paired with jetpack. Landing safely requires acrobatics + agility 20. Not compatible with armor plating or power armor. Maximum capacity 90kg',\r\n        charges: 80,\r\n        weight: 10000,\r\n        value: 8000,\r\n        relatedSkill: 'athletics'\r\n    },\r\n    {\r\n        name: 'SCUBA suit',\r\n        description: 'Airbreathing underwater for 3 hours. Includes wetsuit which protects against cold oceanic water.',\r\n        charges: 10,\r\n        weight: 6000,\r\n        value: 12000,\r\n        relatedSkill: 'athletics'\r\n    },\r\n    {\r\n        name: 'Parachute',\r\n        description: 'Includes parachute, altimeter, jumpsuit, parachute container, oxygenator. Must be repackaged (10 minutes) and refueled every time. Maximum capacity 140kg. Each kg over maximum capacity counts as up to 1 meter falling damage',\r\n        charges: 100,\r\n        weight: 5000,\r\n        value: 7000,\r\n        relatedSkill: 'athletics'\r\n    },\r\n    {\r\n        name: 'Massive Parachute',\r\n        description: 'Includes four parachutes, drogue chute, altimeter, jumpsuit, parachute container, oxygenator. Must be repackaged (1 hour) and refueled every time. Maximum capacity 300kg. Each kg over maximum capacity counts as up to 1 meter falling damage',\r\n        charges: 50,\r\n        weight: 10000,\r\n        value: 20000,\r\n        relatedSkill: 'athletics'\r\n    },\r\n    {\r\n        name: 'Laser protection gear',\r\n        description: 'Protective gear against damage from laser, protects against blinding.',\r\n        charges: 1000,\r\n        weight: 100,\r\n        value: 500,\r\n        relatedSkill: 'firearms'\r\n    },\r\n    {\r\n        name: 'Plasma protection gear',\r\n        description: 'Protective gear against damage from plasma weapons, protects against blinding and damage, does not offer protection if directly fired upon.',\r\n        charges: 1000,\r\n        weight: 1000,\r\n        value: 1600,\r\n        relatedSkill: 'firearms'\r\n    },\r\n    {\r\n        name: 'Spy drone',\r\n        description: '\tSmall drone, charges propellers to fly but cacharges virtually no noice, has a small mounted camera and comes with remote controll (can also be controlled via computer), range 1km. Has +5 to stealth checks to remain hidden.',\r\n        charges: 500,\r\n        weight: 200,\r\n        value: 4000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Carrier drone',\r\n        description: 'Medium sized drone, similar to spy drone but can carry 1kg and is not silent.',\r\n        charges: 500,\r\n        weight: 2000,\r\n        value: 9000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Large carrier drone',\r\n        description: 'Large sized drone, similar to carrier drone, can carry 6kg. Has -5 to steath checks to remain hidden.',\r\n        charges: 500,\r\n        weight: 10000,\r\n        value: 15000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Industrial carrier drone',\r\n        description: 'Large sized drone, similar to large carrier but can carry 52kg. Has -10 to steath checks to remain hidden.',\r\n        charges: 500,\r\n        weight: 80000,\r\n        value: 25000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'H.W. Industrial carrier drone',\r\n        description: 'Heavy weight indistrial carrier drone, capacity 175kg. Basically a small hellicopter. Has -15 to steath checks to remain hidden.',\r\n        charges: 500,\r\n        weight: 250000,\r\n        value: 35000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Transport drone',\r\n        description: 'It\\'s a vehicle, capacity 3500kg. Has -20 to steath checks to remain hidden.',\r\n        charges: 500,\r\n        weight: 5000000,\r\n        value: 90000,\r\n        relatedSkill: 'computer'\r\n    },\r\n    {\r\n        name: 'Camping kit',\r\n        description: 'contains single person tent, bedroll, igniter, boiler',\r\n        charges: 50,\r\n        weight: 20000,\r\n        value: 4000,\r\n        relatedSkill: 'survival'\r\n    },\r\n    {\r\n        name: 'Field physics kit',\r\n        description: 'Contains telescope, microscope, spectrometer, scale, thermometer, hydrometer, electrometer',\r\n        charges: 100,\r\n        weight: 6000,\r\n        value: 8000,\r\n        relatedSkill: 'science'\r\n    },\r\n    {\r\n        name: 'Field chemistry kit',\r\n        description: 'Contains microscope, ph-meter, tweesers, beakers, heater, condenser',\r\n        charges: 100,\r\n        weight: 3000,\r\n        value: 7000,\r\n        relatedSkill: 'science'\r\n    },\r\n    {\r\n        name: 'Field biology kit',\r\n        description: 'Contains high focus microscope, stereliser, sealed strong bags',\r\n        charges: 100,\r\n        weight: 3000,\r\n        value: 7000,\r\n        relatedSkill: 'science'\r\n    },\r\n    {\r\n        name: 'Neural enhancer',\r\n        description: 'A neural enhancer charges very precise magnetic fields to speed up brainwaves. Roll science + intelligence vs 25 to adapt it to your brain, the adaption lasts until you gain experience points. If you succeed then you add +1 to all intelligence, perception and agility rolls for 4 hours. When the time is elapsed you take a -2 penalty for 4 hours. If you dont wait 16 hours to use it again you take 1 mental health damage.',\r\n        charges: 1000,\r\n        weight: 1000,\r\n        value: 8000,\r\n        relatedSkill: 'science'\r\n    }\r\n];\r\n\r\ninterface IMedicine extends IConsumable {\r\n    medicineSkillRolls: string[];\r\n}\r\n\r\nexport const ConsumableMedicine: IMedicine[] = [\r\n    {\r\n        name: 'Adrenaline',\r\n        description: 'Immediately awakens someone who is unconscious',\r\n        charges: 5,\r\n        weight: 100,\r\n        value: 1600,\r\n        medicineSkillRolls: [\r\n            '20+: can awaken someone who is not critically incapacitated',\r\n            '30+: can awaken someone who is critically incapacitated',\r\n        ],\r\n        relatedSkill: 'medicine'\r\n    },\r\n    {\r\n        name: 'Stempack',\r\n        description: 'Over the course of 24 hours will regenerate life equal to endurance. Can be used up to 3 times spaced 8 hours apart with stacking effect, but always gain exhaustion per administration.',\r\n        charges: 10,\r\n        weight: 10,\r\n        value: 2000,\r\n        medicineSkillRolls: [\r\n            '14 or less: takes 6 seconds. causes 1d4 damage. Causes 1 level of exhaustion',\r\n            '20-24: Takes 10 minutes. Causes 1 level of exhaustion',\r\n            '25-30: Takes 1 minute. Causes 1 level of exhaustion',\r\n            '31-40: Takes 30 seconds',\r\n            '41+: Takes 30 seconds, immediately heal 1 life'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Antibiotics',\r\n        description: 'Strengthens immune response to bacterial infection. When rolling immune response vs bacterial disease roll add +10',\r\n        charges: 5,\r\n        weight: 10,\r\n        value: 2000,\r\n        medicineSkillRolls: [\r\n            '14 or less: takes 6 seconds. Gain no benefit from antibiotics, gain 1 level of exhaustion',\r\n            '20-29: Takes 10 minutes',\r\n            '30+: Takes 1 minute'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Antivirals',\r\n        description: 'Strengthens immune response to viral infection. When rolling immune response vs bacterial disease add +10',\r\n        charges: 2,\r\n        weight: 10,\r\n        value: 1600,\r\n        medicineSkillRolls: [\r\n            '14 or less: takes 6 seconds. Gain no benefit from antibiotics, gain 1 level of exhaustion',\r\n            '20-29: Takes 10 minutes',\r\n            '30+: Takes 1 minute'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Radioflush',\r\n        description: 'Removes radioactive materials from body over the course of 72 hours (does not drop radiation level). Causes 1 level of exhaustion',\r\n        charges: 2,\r\n        weight: 50,\r\n        value: 1600,\r\n        medicineSkillRolls: [\r\n            '19 or less: Takes 6 seconds. do not gain benefits',\r\n            '20-29: Takes 1 minute.',\r\n            '30+: Takes 1 minute. No exhaustion'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Gene therapy detox',\r\n        description: 'Reduces radiation dose by 1, takes 30 days to take effect. Causes 1 level of exhaustion after every rest while active.',\r\n        charges: 4,\r\n        weight: 10,\r\n        value: 2400,\r\n        medicineSkillRolls: [\r\n            '24 or less: Takes 6 seconds. do not gain benefits',\r\n            '25-29: Takes 60 minutes.',\r\n            '30-34: Takes 60 minutes. Effect only requires 20 days.',\r\n            '35-39: Takes 60 minutes. Effect only requires 10 days.',\r\n            '40+: Takes 60 minutes. Effect only requires 5 days.',\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Antivenom',\r\n        description: 'Counteracts venom, stops it from causing further harm.',\r\n        charges: 1,\r\n        weight: 20,\r\n        value: 1200,\r\n        medicineSkillRolls: [\r\n            '20-24: takes 5 minutes. Causes 1 level of exhaustion',\r\n            '25-29: takes 1 minute. Causes 1 level of exhaustion',\r\n            '30+: takes 12 seconds.'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Anti-Radiation drug',\r\n        description: 'reduces accumulation of radiation damage for 30 days by 1 level',\r\n        charges: 5,\r\n        weight: 50,\r\n        value: 1000,\r\n        medicineSkillRolls: [\r\n            '10-19: causes 1 level of exhaustion',\r\n            '20-29: normal effect',\r\n            '30+: may take second dose with additional effect'\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Active carbon',\r\n        description: 'reduces effect of poisons recently consumed, neutralizes medicines and drugs taken orally',\r\n        charges: 10,\r\n        weight: 100,\r\n        value: 100,\r\n        medicineSkillRolls: [\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Weak painkillers',\r\n        description: 'Half penalty to all rolls from life damage, max 10',\r\n        charges: 20,\r\n        weight: 100,\r\n        value: 200,\r\n        medicineSkillRolls: [\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n    {\r\n        name: 'Strong painkiller',\r\n        description: 'Quarter penalty to all rolls from life damage, max 30.',\r\n        charges: 20,\r\n        weight: 100,\r\n        value: 1000,\r\n        medicineSkillRolls: [\r\n        ],\r\n        relatedSkill: 'medicine',\r\n    },\r\n];","import { PerkTemplate } from \"../general/Perks\";\r\nimport { IHooker } from \"../Character\";\r\nimport { actionPointsUses } from \"../equipment/MeleeWeapons\";\r\n\r\nconst spellhook: IHooker = {\r\n    applyTo: 'spells',\r\n    amount: 0\r\n}\r\n\r\nclass SpellTemplate implements PerkTemplate {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    description: string;\r\n    results?: string[];\r\n    actionPoints?: actionPointsUses;\r\n    constructor(name: string, description: string, actionPoints?: actionPointsUses, range?: string, results?: string[] | undefined) {\r\n        this.name = name;\r\n        this.skill = 'spells';\r\n        this.level = 1;\r\n        this.actionPoints = actionPoints;\r\n        const rangeText = range !== undefined ? `\\n Range: ${range}` : '';\r\n        const castingText = actionPoints ? `action points: ${this.actionPoints}. ` : '';\r\n        this.description = `${castingText}${description}${rangeText}`;\r\n        this.applyTo = spellhook.applyTo;\r\n        this.amount = spellhook.amount;\r\n        this.results = results;\r\n    }\r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n}\r\n\r\n//spells\r\nconst DimensionalSwap = new SpellTemplate(\r\n    'Dimensional Swap',\r\n    'Spell: You can cause an object to begin to exist or seize to exist by finding a virtual parallel universe which is identical in every way except for the objects existence.' +\r\n    'The object can not be of any previous consequence since it had to have either existed or not in both worlds. The object and its circumstances must be known to you. It is not possible to create paradoxes',\r\n    1,\r\n    '10 meters, visual contact',\r\n    [\r\n        'base mana: 2',\r\n        'increasse object mass: +1 mana/kg',\r\n        'object is not within visual sight of caster: +2 mana',\r\n        'object is/was partially used: (GM discretion)',\r\n        'increase range: +1 mana per 10 meters'\r\n    ]\r\n);\r\n\r\nconst Splinter = new SpellTemplate(\r\n    'Splinter',\r\n    'Spell: You cover yourself in a cocoon, after a minute the cocoon splits open revealing two clones of yourself with all of your capabilities and has shared mana, both think they are the original, your equipment and inventory is duplicated. Lasts 24 hours after which one will die and whoever is left is the original (players choice). The duplicate will slowly disintigrate into nothing after death (including equipment which immediately disintegrates into useless ash). Spend 2 mana every day to keep it alive longer, prevents mana regen while active. Skills gained by a clone is gained by the original too, experience multiplier applies across the whole set. Mana is shared between clones',\r\n    8,\r\n    'personal',\r\n    [\r\n        'Base mana: 3',\r\n        'Increase duration: +1 mana per 24 hour',\r\n        'Increase number of clones: +3 per clone'\r\n    ]\r\n);\r\n\r\nconst Unmask = new SpellTemplate(\r\n    'Unmask',\r\n    'Spell: Your skin splits open and shreds to pieces, revealing a new person hiding underneat. This person is the real you, this person doesnt need to have your face, gender, DNA or even height (you may increase or decrease up to 10cm). Leaves behind residue of your old skin.',\r\n    8,\r\n    'personal',\r\n    [\r\n        'base mana: 2 (change face only)',\r\n        'change fingerprints/retina/other ID: +1 mana (to random, can not choose what new is)',\r\n        'change color of skin, eyes and/or hair: +1 mana (can only change to natural variants)',\r\n        'change sex: +2 mana (requires change DNA, bypasses functional features limitation for this only)',\r\n        'change DNA: +1 mana, (you can not add functional features with this)',\r\n        'change trait: +3 mana (requires experience points if you add a positive or remove a negative, only one trait)',\r\n        'you can not copy someone else\\'s dna, fingerprints, retina, etc, to match someone\\'s looks you must also roll a (disguise) subterfuge'\r\n    ]\r\n);\r\n\r\nconst UmbraConstant = new SpellTemplate(\r\n    'Umbra Constant',\r\n    'Spell: Your shadow becomes a temporary fixture on the ground, you may also enter the shadow and hide inside it for up to one hour. If the surface is damaged you get pushed out immediately.',\r\n    3,\r\n    'direct contact',\r\n    ['base mana: 2',\r\n        'increase to five hours: +1 mana',\r\n        'increase to two days: +2 mana',\r\n        'increase to ten days: +3 mana',\r\n        'increase to fourty days: +4 mana',\r\n        'increase to one hundred days: +5 mana',\r\n        'hide additional stuff: +1 mana per 10 kg']\r\n);\r\n\r\nconst MirrorTrap = new SpellTemplate(\r\n    'Mirror Trap',\r\n    'Spell: you trap someone in a mirror when you see them through the mirror directly, they become trapped inside a fake mirror universe, they are automatically freed when the mirror is broken, while inside the mirror they are timeless and immortal, lasts 1 day',\r\n    4,\r\n    '10 meters, visual contact',\r\n    ['base mana: 3',\r\n        'increase by 1 day: +1 mana per day']\r\n);\r\n\r\nconst DarkVortex = new SpellTemplate(\r\n    'Dark Vortex',\r\n    'Spell: You draw dark matter from all directions into one single point up to 1 meter away from your head, the dark matter creates a gravity well with 1m/s/s pull at 1 meter away, lasts 1 minute. You can interact with this point as if it was a tiny ball',\r\n    5,\r\n    '1 meter, visual contact',\r\n    ['base mana: 1',\r\n        'increase gravity: +1 mana per 1/m/s/s',\r\n        'increase distance: +1 mana per 5 meters']\r\n);\r\n\r\nconst LuminiferousTransubstantiation = new SpellTemplate(\r\n    'Luminiferous Transubstantiation',\r\n    'Spell: Your body converts into pure ultra high energy light that moves at the speed of light through up to 1m of solid or liquid matter or 30m of air, you travel up 30m. Clothes and equipment not included by default. While in light form you are blind, you must roll 10 points higher to accurately rematerialize where you want to, otherwise you will rematerialize within 1d6 meters of the target.',\r\n    6,\r\n    'personal',\r\n    [\r\n        'base mana: 2',\r\n        'increase distance: +1 mana per +300m distance and +1m through solid objects',\r\n        'bring additional stuff: +1 mana per 20kg',\r\n        'if you dont see the target: -10 to your roll',\r\n        'if you materialize inside solid matter you are ejected to the nearest empty space and take 1d6 damage per meter traveled',\r\n        'if you materialize inside liquid matter you take 1d6 damage'\r\n    ]\r\n);\r\n\r\nconst ColorBias = new SpellTemplate(\r\n    'Color Bias',\r\n    'Spell: You touch a small object (1 liter of smaller) and alter the color charge of the atoms, this object becomes intensly radiactive as it slowly converts into energy. Level 8 radiation at 1 meter. 1 microgram of the object is annihilated per hour, stops at 2 hours. Object weight max 1kg',\r\n    4,\r\n    'direct contact',\r\n    [\r\n        'base mana: 3',\r\n        'increase radiation level: +1 mana per level (+0.1 microgram per hour)',\r\n        'increase duration: +1 mana per hour',\r\n        'increase max kg: +1 mana per kg',\r\n        'this radiation has no effect on you (and only you)'\r\n    ]\r\n);\r\n\r\nconst Rift = new SpellTemplate(\r\n    'Rift',\r\n    'Spell: Opens up a tiny rift to another dimension at the palm of your hand, a strange energy leaks out. This rift can be moved around only by you, you move it freely with your mind. It moves at a rate of up to 600meters per round. It must be within 300 meters of you. Anyone that touches it must roll 1d10 for a random effect. It lasts as long as you want but drains you of 1 mana per turn. To hit a person you must make a combat roll. If two consequtive effects are the same, reroll.',\r\n    6,\r\n    'direct contact',\r\n    [\r\n        'base mana: 3',\r\n        'The caster rolls the effect, can reroll for 1 mana',\r\n        '1: a burst of unknown, shimmering energy escapes, roll 1d6, 1: strength, 2: agility, 3: endurance, 4: perception, 5: intelligence, 6: willpower. Roll 1d6 damage',\r\n        '2: a burst of invisible kinetic energy escapes, target is violently pushed away from rift, takes 2d6 damage (10 armor piercing), is moved an equal amount of meters away.',\r\n        '3: a burst of gamma rays escape, target gains 1d8 levels of radiation',\r\n        '4: a burst of heat escapes, target is ignited, takes 1d6 damage (8 armor piercing) per turn for 10 turns',\r\n        '5: a bubbling prismatic tentacle lashes out, target is healed 2d6 life but paralyzed for an equal number of rounds, gaining 1 life each round.',\r\n        '6: a stream of large teeth engulf the target, target takes 1d6 damage (2 armor piercing) and has a -10 penalty to all actions for 1 round',\r\n        '7: a burst of toxic black ash escapes, all people within 6 meters take 1d4 damage (6 armor piercing) and are blinded for 1 round',\r\n        '8: a white bolt of lightning escapes and hits the target, the target can take 1 extra action and takes 1 mental health damage for 1d6 rounds',\r\n        '9: the target gains control of the rift, but mana is drained at a double rate',\r\n        '10: a burst of otherworldy mental projections escape, target gains 1d6 mana, loses 2d6 mental health, the target can gain a spell or mutation immediately.'\r\n    ]\r\n);\r\n\r\nconst Conversation = new SpellTemplate(\r\n    'Conversation',\r\n    'Spell: You mentally communicate with anyone youve previously met, you may do at most 4 back/fourth, maximum 100 words each time. Persons who dont know you can do this will experience it as an inner monologue, asking uncomfortable questions may yield no answer',\r\n    5,\r\n    'unlimited',\r\n    [\r\n        'base mana: 2',\r\n        'person is not on the same planet: +1 mana',\r\n        'person is not in the same system: +2 mana',\r\n        'person is dead: +5 mana',\r\n        'longer converation: +1 mana per back/fourth'\r\n    ]\r\n);\r\n\r\nconst HyperSight = new SpellTemplate(\r\n    'Hyper Sight',\r\n    'Spell: You see things from the vantage point of a higher dimension, allowing you to see through matter as if it were transparent for up to 100 meters. Lasts 10 minutes',\r\n    3,\r\n    'personal',\r\n    [\r\n        'base mana: 2',\r\n        'increase range: +1 mana per 100 meters',\r\n        'increase time: +1 mana per 10 minutes']\r\n);\r\n\r\nconst Tesseraction = new SpellTemplate(\r\n    'Tesseraction',\r\n    'Spell: you designate a 1x1x1 cubic meter volume to become the host of a four dimensional tesseract. You add 7 extra cubic meters of volume which only you can interact with, you may rotate the tesserate so that any of the volumes becomes coterminus with reality. Lasts 5 days',\r\n    3,\r\n    '1 meter visual contact',\r\n    [\r\n        'base mana: 3',\r\n        'increase duration: +1 mana per 2 days',\r\n        'increase size: +1 mana per cubic meter',\r\n        'allow someone else to interact: +1 mana per person'\r\n    ]\r\n);\r\n\r\nconst SensoryMeld = new SpellTemplate(\r\n    'Sensory meld',\r\n    'Spell: You establish an unrelenting empathic link to another person, you perceive everything they do, they perceive everything you do. Lasts 24 hours. Once per hour the target may attempt to suppress this effect with a contested roll (2d10 + willpower + spells). If either die while this is in effect the other takes 2d6 mental health damage from the trauma. You can have multiple links at the same time, sensory perception is shared across the network.',\r\n    1,\r\n    '10 meters, visual contact',\r\n    [\r\n        'base mana: 1',\r\n        'increase duration: +1 mana per 2 days',\r\n        'increase distance: +1 mana per 4 meters',\r\n        'add telepathy: +2 mana',\r\n        're-establish link without visual contact: +5 mana, allows contest to resist'\r\n    ]\r\n);\r\n\r\nconst EmapthicEqualibrium = new SpellTemplate(\r\n    'Empathic Equalibrium',\r\n    'Spell: You establish an immediate empathic link to another person which causes the sum total of your life damage and mental health damage to be redistributed equally. Both know what the other has been thinking since they woke up. There is no contested roll. Can only be used once per round.',\r\n    1,\r\n    '10 meters visual contact',\r\n    [\r\n        'base mana: 2',\r\n        'redistribute unequally: 1 mana per life in your favor',\r\n    ]\r\n);\r\n\r\nconst SpiritualRegeneration = new SpellTemplate(\r\n    'Spiritual Regeneration',\r\n    'Spell: You are able to convert mana into life and reverse on yourself and others.',\r\n    8,\r\n    'personal or direct contact',\r\n    [\r\n        'base mana: 1, heal 1 life per round for 1d6 rounds',\r\n        'increase regen: 1 mana, +1d6 rounds (can be applied multiple times)',\r\n        'apply to other person: +1 mana, other target consumes equal amount of mana',\r\n        'recover mana: lose 1 maximum life, recover 1d6 mana, no roll. recover 1 maximum life per 24 hours with no option to speed up recover under any circumstances',\r\n    ]\r\n);\r\n\r\nconst Quintessence = new SpellTemplate(\r\n    'Quintessence',\r\n    'Spell: You projectile vomit a stream of a silvery bubbling liquid. When it hits a target the liquid engulfs it completely. After 1 minute the liquid disappates and the target is released, for the target no time has passed.',\r\n    5,\r\n    '5 meters',\r\n    [\r\n        'base mana: 1. Make an unarmed attack to see if you hit a person',\r\n        'duration 10 minutes, +1 mana',\r\n        'duration 1 hour, +2 mana',\r\n        'duration 10 hours, +3 mana',\r\n        'duration 1 day, +4 mana',\r\n        'duration 10 days, +5 mana',\r\n        'if the liquid hits a surface or object heavier than 1000kg it will disappate immediately',\r\n        'anything that touches the liquid will feel intense cold and take 1d6 damage per mana spent',\r\n        'if damage equal to mana x 100 is dealt to the liquid it will disappate'\r\n    ]\r\n);\r\n\r\nconst SolarFlare = new SpellTemplate(\r\n    'Solar Flare',\r\n    'Spell: Hot electric plasma engulfs your body, which you can direct at one target, damage counts as heat and electric, as such non-fire resistant armor only applies half damage absorbtion, power armor and electric devices have no effect while in contact with flame. If you are wearing clothes they are immediately incinirated, armor loses 1 condition (1 DA) per turn. Fire resistant materials instead take 4 times longer to damage. Lasts 1 minute',\r\n    1,\r\n    'personal, 10 meter range',\r\n    [\r\n        'While active add spells skill to base defense, add +2 damage absorbtion, increase speed by +3',\r\n        'Anyone who attacks you in melee takes 1d6 damage (this damage applies even if they miss!)',\r\n        'Anyone who starts their turn within 1 meter takes 1d6 damage',\r\n        'Send out jet of hot plasma dealing 2d6, (combat + agility) range 10 meters',\r\n        'damage absorbtion from fire, lightning and plasma sources: 100',\r\n        'base mana: 2',\r\n        'can spend extra mana: +1 damage absorbtion, +1d6 damage per 1 mana',\r\n        'can spend extra mana: +3 speed per 1 mana',\r\n        'can spend extra mana: +1 meter area of effect per 2 mana'\r\n    ]\r\n);\r\n\r\nconst QuantumLeap = new SpellTemplate(\r\n    'Quantum Leap',\r\n    'Spell: You make the electrons in your body perform a quantum leap, removing their friction from the rest of the world for a split second. While frictionless you can move through solid objects freely and become completely invisible. Gravity still applies so if you stand still and make a quantum leap you will fall through the ground potentially dooming yourself. If you end the spell while inside solid or liquid matter it fuses with your body- destroying it utterly. Lasts up to 1 round.',\r\n    1,\r\n    'personal',\r\n    [\r\n        'base mana: 1 entire body or partial, clothes, armor, equipment, inventory is not automatically included',\r\n        'quantum leap other matter: +1 mana per 20 kg',\r\n        'extend duration: +1 mana per round (after 2 rounds you take 1 damage per round, this is damage can not be reduced by any means)',\r\n        'You can use this spell in place of dodge or block, making the attack phase through you. If you are multi-attacking this counts as a melee attack',\r\n        'To jump through a wall you must also succeed a acrobatics 15 or you will fuse with the wall or floor',\r\n        'You can make part of your body frictionless',\r\n        'While frictionless you are immune all photon and material effects.'\r\n    ]\r\n);\r\n\r\nconst Assimilation = new SpellTemplate(\r\n    'Assimilation',\r\n    'Spell: You touch a living being directly and begin assimilating their body into yours, they roll 2d10 + willpower + spells to contest your roll, the winner steals 1d4 life and 1d2 mana from the loser. Additionally you gain some features from the creature if they are a different species from yours (determined by the GM), if the loser dies then compare the winner and loser attribute, pick the one with the biggest difference and move one step closer. All these effects last 2d10 days.',\r\n    4,\r\n    'touch',\r\n    [\r\n        'base mana: 2',\r\n        'increase damage +1d4 life, +1d2 mana, increase cost mana: +1',\r\n        'increase duration +1d10 days: increase cost mana: +1',\r\n        'negate ability loss: +4 mana (no effect if positive ability)',\r\n        'negate effect if lose: +4 mana (no effect on either if caster loses)',\r\n        'You can exceed your maximum life and mana using this. You lose 1 of each every 24 hours until they are normal again.'\r\n    ]\r\n);\r\n\r\nconst ManipulateSpacetime = new SpellTemplate(\r\n    'Manipulate Spacetime',\r\n    'Spell: you change the fabric of spacetime to create a unidirectional field of gravity in the shape of a cylinder 1 meter across, directed away from you, the direction of gravity can be in any direction of your choosing. It does not cancel out existing gravity fields but rather adds to them. The field lasts for 6 seconds and propagates at the speed of light. Anything caught in this field is accelerated by 10m/s/s. Each time you use this ability you become 1d10 days younger (over the course of a minute) per mana spent.',\r\n    6,\r\n    '100 meters',\r\n    [\r\n        'base mana: 1',\r\n        'can spend extra mana: double the length per 1 mana (may be applied multiple times, each time doubling length)',\r\n        'can spend extra mana: increase cylinder diameter by 1 meter per 1 mana',\r\n        'can spend extra mana: increase duration by 6 seconds per 1 mana',\r\n        'can spend extra mana: increase field strength of 10/s/s per 1 mana',\r\n    ]\r\n);\r\n\r\nconst MoteOfPureEntropy = new SpellTemplate(\r\n    'Mote of Pure Entropy',\r\n    'Spell: You produce a mote in the palm of your hand which you can then move freely once per round at the rate of 10 meters/round, the mote gives of white light when in contact with air. If it comes into contact with a solid object roll a 1d10, the mote then evaporates. The mote will evaporate at the end of your turn, you can prevent evaporation with a spell + willpower roll vs 5 x number of turns the mote has been active. If you have multiple motes then you must keep track of them seperately, if two motes touch then they annihilate each other.',\r\n    1,\r\n    '40 meters',\r\n    [\r\n        'base mana: 1',\r\n        'add effect: +2 mana (per effect)',\r\n        'to hit an unwilling creature you must defeat their defense with your spell roll',\r\n        '1: The target takes 1d10 falling damage and is flung 1d6 meters in a random direction, 1 meter if the object is 200kg or heavier, 500kg or heavier not flung',\r\n        '2: The target ages 4d12 days, creatures experience this trauma as 2d6 mental health damage, it does not regenerate life from this',\r\n        '3: The surface area where contact is made is disintegrated, creatures and objects take 2d4 damage which cant be reduced, if the creature is wearing armor the armor damage absorbtion is reduced by 2d4 instead',\r\n        '4: The surface area where contact is made heats up and catches fire, 2d6 thermal damage for 4 rounds',\r\n        '5: The target briefly glows brightly and then cools down, 3d6 thermal damage, the creature loses its move action on its next 1d4 rounds',\r\n        '6: The targete speeds up, objects operate at double speed, creatures gain 1 extra action, lasts 1d6 rounds at the end the creature gains one exhaustion level',\r\n        '7: The target swap place with the caster of the mote',\r\n        '8: The target is restored to previous state, restore 1d3 condition (max pristine) or regenerate 1d6 life instantly.',\r\n        '9: The target begins to glow brightly for 1d4 rounds, the target has +10 base defense and -10 to all rolls based on sight',\r\n        '10: The target becomes completely  insvisible (entire spectrum) and blind for 2d12 rounds.',\r\n    ]\r\n);\r\n\r\nconst Precognition = new SpellTemplate(\r\n    'Precognition',\r\n    'Spell: You learn the outcome of your next action. Before you take an action that takes no more than 1 round you may attempt to see the outcome before it happens, this increases that actions action point uses by 1. First you roll for precognition, then you roll for your skill, you find out the outcome of your result and may choose whether to move forward or do something else. If you don\\'t proceed then you end your turn.',\r\n    1,\r\n    undefined,\r\n    [\r\n        'for an action that takes 1 action: 2 mana',\r\n        'for an action that takes 1 minute: 4 mana',\r\n        'for an action that takes 10 minutes: 6 mana',\r\n        'for an action that takes 1 hour: 8 mana',\r\n        'for an action that takes 4 hours: 10 mana',\r\n        'for an action that takes 8 hours: 12 mana',\r\n        'for an action that takes 16 hours: 14 mana',\r\n        'for an action that takes 24 hours: 16 mana'\r\n    ]\r\n);\r\n\r\nconst ThoughtInvasion = new SpellTemplate(\r\n    'Thought Invasion',\r\n    'Spell: you look at someone within range, think of a phrase and cause them to speak it out loud. They believe it is their own thoughts. They make a contested willpower + spell + 2d10 roll to resist. If they resist they instead feel the thought as an intrusive foreign thought. The spell only works if the target is awake, lucid and able to speak.',\r\n    1,\r\n    '60 meters',\r\n    [\r\n        'base mana: 3',\r\n        'you can delay the phrase based on time, up to 24 hours per 1 mana extra',\r\n        'you can delay the phrase until a simple unambigious trigger for 2 mana, if the trigger does not occur within 24 hours nothing happens',\r\n        'you can make the target believe the phrase is true for 6 seconds for 4 extra mana',\r\n        'the target is under no obligation to believe the phrase is true otherwise, merely that it had this thought and said it. It is up to the GM\\'s discretion to decide how the target reacts'\r\n    ]\r\n);\r\n\r\nconst Electrostatic = new SpellTemplate(\r\n    'Electrostatic',\r\n    'Spell: You have the ability to build electromagnetic potential in your body, as an action you can build an energy potential and then freely at any point you convert the energy into a electric potential, generating an electric current. The energy dissipates at the rate of 1 mana per 24hours. Energy potential can not be accumulated.',\r\n    1,\r\n    'touch',\r\n    [\r\n        'Base mana: 1 for 1d8 electric damage',\r\n        'For each 1 mana extra spent increase electric damage by 1d8',\r\n        'Current is delivered by touch, starting at 4 mana the current has a reach of 1 meter, increases by 1 for every 4 extra mana spent. Ranged touch uses the same combat roll to hit as melee but the discharge is lost if you miss',\r\n        'When you generate a current and deliver it, you deliver it to everything you are touching, all electronics you are touching is suseptible, and if you are grounded the damage is divided between the ground and the target you are touching',\r\n        'As a reaction when you are receiving electrical damage you may attempt to counter, build energy potential and release it instantly, reduce incoming damage equal to the electric damage from your own potential',\r\n        'To touch someone unwilling you must make a combat roll 2d10 + agility + combat vs their defense'\r\n    ]\r\n);\r\n\r\nconst FalseDeath = new SpellTemplate(\r\n    'False Death',\r\n    'Spell: As an action you cause a creature to completely stop and fall dead, this death is only temporary and after an hour they come back to life. Injuries sustained during this time are retained but timed damage like bleeding and poison is paused. Every test will reveal that they are dead and died recently. When the effect is over the creature regains the body heat it had before this spell with no memories of what happened when they were under this effect, as if they were really dead or in a co.',\r\n    4,\r\n    '10 meters, visual contact',\r\n    [\r\n        'Base mana: 3',\r\n        'You can increase the number of hours by 1 for 1 mana',\r\n        'You can increase the range by 10 for 1 mana',\r\n        'If the target is unwilling it can try to resist, roll 2d10 + willpower + spells, if it rolls higher than your roll it is unaffected, otherwise it succums'\r\n    ]\r\n);\r\n\r\n//mutations\r\nconst MortisAlbum = new SpellTemplate(\r\n    'Mortis Album',\r\n    'Mutation: body emits no heat (invisible to infrared), nails and hair become white and matte, your skin loses its color and becomes gray. If injured white powder escapes instead of blood, you are no longer suseptible to the bleed condition.',\r\n    undefined,\r\n    undefined,\r\n    [\r\n        'you gain 1 radiation resistance at all times',\r\n        'you no longer eat food, drink water or breathe air',\r\n        'you no longer need to sleep to rest, instead sitting still for 4 hours is enough to gain a full nights rest',\r\n        'you permanently increase your perception by 1',\r\n        'you can see shapes and contours in darkness'\r\n    ]\r\n);\r\n\r\nconst Ocultos = new SpellTemplate(\r\n    'Ocultos',\r\n    'Mutation: Eyes grow all over your body, at the rate of 1 per 1d12 days a new eye opens up somewhere randomly on your skin up to a maximum 33 additional eyes. The eyes are fully functional and grant the ability to gain a glipse of something of your choice, glipse closes an eye of your choice which then disappears. The GM rolls the correctness secretly.',\r\n    8,\r\n    undefined,\r\n    [\r\n        'any yes or no question: 2 mana. Answer correctness 99%',\r\n        'any single word answer question: 3 mana. Answer correctness 95%',\r\n        'any single sentence answer question: 4 mana. Answer correctness 90%',\r\n        'any advanced question: 6 mana. Answer correctness 80%',\r\n        'you add +5 to your sequence'\r\n    ]\r\n);\r\n\r\nconst Biopod = new SpellTemplate(\r\n    'Biopod',\r\n    'Mutation: Nails and hair fall out and stop growing, a thin film of slick transparent mucus covers your skin, your pores turn into suckers which allow you to grab ahold of things and stick to hard surfaces, you gain the ability to turn your body extremely soft and elastic which allows you to squeeze through any slit at least 1 cm narrow',\r\n    undefined,\r\n    undefined,\r\n    [\r\n        'you automatically defeat attempts to grapple you, nothing can restrain you',\r\n        'slashing damage (for example blades) deal only half damage'\r\n    ]\r\n);\r\n\r\nconst Xenobite = new SpellTemplate(\r\n    'Xenobite',\r\n    'Mutation: Your tongue permanently transforms into a viper that delivers powerful neurotoxin when it bites its victim. The snake phases through armor and clothes as if it was air, damage absorbtion from any source has no effect. Additionally the first time you strike someone you gain 1d6 mana, they lose the same amount, after resting this can be done again.',\r\n    4,\r\n    undefined,\r\n    [\r\n        'use spell to hit their defense (standard rules). If you miss then no effect. No effects on robots',\r\n        'base mana: 1',\r\n        '1st round: 1d6 intelligence damage, drain 1d6 mana',\r\n        '2nd round: 1d6 perception damage',\r\n        '3rd round: 1d6 willpower damage',\r\n        'you may opt to deal no damage for no mana cost, but you still drain'\r\n    ]\r\n);\r\n\r\nconst TwinSoul = new SpellTemplate(\r\n    'Twin Soul',\r\n    'Mutation: You have a guest inside your mind, another entity. This entity has their own mental abilities and skill set. If it is in their interest they can help you, you may use their skills or mental abilities for any check.',\r\n    undefined,\r\n    'touch',\r\n    [\r\n        'Interference: This entity can always communicate with you, if it wishes to distract you you have -3 to all rolls',\r\n        'Eject entity: If (and only if) the entity is willing you may eject it, if it has nowhere to go it simply seizes to exist',\r\n        'Absorb entity: You may absorb the mind of a dying (below -100% life, but not dead) person, the person must be willing',\r\n        'Slumber: You can enter a passive state where the other mind takes over, if you stay passive for more than 24h then you must succeed battle of wills or permanently become the passive',\r\n        'Battle of wills: if you absorb a mind while already having one then the guest has a chance to force out the host, each roll 2d10+willpower, highest wins, loser is forcefully ejected.'\r\n    ]\r\n);\r\n\r\nconst Ferral = new SpellTemplate(\r\n    'Ferral',\r\n    'Mutation: Your skin turns into a dark shade of grey like iron then grow into small scales that rust and also slowly fall out. Your nails and teeth turn into black hard steel, your hair turn into thin steel wires. You are not affected by magnetism. Your insides and blood are also black and metallic.',\r\n    8,\r\n    undefined,\r\n    [\r\n        'You gain permanenty: 2 damage absorbtion',\r\n        'You gain permanently: 1 armor piercing and +1 damage on all unarmed attacks',\r\n        'you gain permanently: 1 strength, 1 endurance, -1 agility, -1 perception',\r\n        'you gain permanently: +25% weight',\r\n        'you gain permanently: -1 speed',\r\n        'You add a -5 penalty to all social rolls, -10 if your skin is visible (except intimidation)',\r\n        'You gain a bite attack that deals 1d6 + strength/3',\r\n        'all medicine rolls on you take a -10 to their roll',\r\n        'As an action you can increase damage strength by 2 and absorbtion by 1 and damage by 1 by eating 500 grams of pure iron, doing so costs 3 mana and every drops speed by 0.5 (round down), speed cant go below 4, lasts one 24 hours'\r\n    ]\r\n);\r\n\r\nconst CursedBlood = new SpellTemplate(\r\n    'Cursed Blood',\r\n    'Mutation: Your blood gains the ability to absorb and emit gamma rays, each dose of radiation you gain heals 1 life and 1 level of exhaustion and 1 dose of radiation when you rest. Additionally you can emit gamma radiation, when you do you lose the ability to heal from radiation for 24 hours. Be warned that you still suffer all negative effects of radiation poisoning, including risk of death.',\r\n    4,\r\n    undefined,\r\n    [\r\n        'Per 1 dose: 1 life, 1 exhaustion',\r\n        'If you absorb 7 or more doses of radiation you also regenerate 1 mana when you rest',\r\n        'Emit radiation: As an action spend 2 mana, emit 4 level for 24 hours (you gain 1 dose per 12 hours), at 1 meter others feel level 3 radiation',\r\n        'If you bleed, your blood will emit level 5 radiation at 1 meter distance',\r\n    ]\r\n);\r\n\r\nconst XRayVision = new SpellTemplate(\r\n    'X-Ray Vision',\r\n    'Mutation: your visual band changes from normal visible light (400nm - 700nm wavelength) to x rays (0.01nm - 10nm), as such low density materials become nearly invisible to you, high density remain visible. Additionally whenever your eyes are open you emmit x rays in all directions, this counts as illumination for you up to 100 meters, and as a level 1 radiation source to everyone within 2 meters. You also gain +2 radiation resistance.',\r\n    1,\r\n    undefined,\r\n    [\r\n        'You can stop the radiation by closing your eyes, however it does not matter if you are conscious as long as you are alive',\r\n        'You can temporarily extend your x-ray vision length by two for 1 hour, costs 1 mana, increases radiation level by 1 (this can be stacked), when doing so radiation source counts as 1 level lower per 2 meters',\r\n        'You can temporarily increase your radiation resistance by 1 for 1 hour, cost 1 mana'\r\n    ]\r\n);\r\n\r\nconst ThornSkin = new SpellTemplate(\r\n    'Thorn Skin',\r\n    'Mutation: Sharp needlelike thorns extrude from your skin over your entire body, no place is without, the thorns color match your hair color or skin color. These thorns have a variety of effects and can be shot out from anywhere on your body.',\r\n    2,\r\n    undefined,\r\n    [\r\n        'The thorns offer small protection, increase damage absorbtion by 1 and base defense by 2 permanently',\r\n        'The torns can help you climb, you add +5 on any climbing check',\r\n        'Anyone who grapples you takes 1d6 damage',\r\n        'As an action you can shoot out thorns at one target, roll 2d10 + spell + agility vs their defense, if you hit they take 1d6 damage, costs 1 mana. Thorns immediately grown back',\r\n        'You may enlognate the thorns at will, it takes 10 minutes (100 consecutive full round actions), costs 1 mana, lasts 24 hours. Each time add +1d6 to any damage, +5 to climb, +1 damage absorbtion, +2 base defense'\r\n    ]\r\n);\r\n\r\nconst AmoebicHive = new SpellTemplate(\r\n    'Amoebic Hive',\r\n    'Mutation: Tiny black drops of amoeba slowly crawl over your skin, they enter and exist through the pores and permeate your body. These amoebic organisms are made of you.',\r\n    2,\r\n    undefined,\r\n    [\r\n        'As an action you can leave some behind on a surface for an hour, you feel temperature and pressure through them. Costs 1 mana',\r\n        'As an action you can touch someone and try to infect another person with the drops, roll spell + agility + 2d10 to hit vs their defense, every minute they must make a contested roll of spell + endurance + 2d10 or take 1d6 damage which can not be reduced, if they succeed the infection ends. Only a hermetically sealed armor gives protection. Costs 1 mana',\r\n        'As a 10 round action you can utilize them to drastically increase your metabolism, you regenerate 1d6 life and gain 1 level of exhaustion. Costs 2 mana'\r\n    ]\r\n);\r\n\r\nconst SpontaneousRegeneration = new SpellTemplate(\r\n    'Spontaneous Regeneration',\r\n    'Mutation: Every day, at a random point during the day (GM rolls 1d12 hours after you wake up) you instantly heal 1d6 life. Any amount healed beyond full bounces back and instead causes damage. This healing and damage is unavoidable. If you are above 100% life then you only take damage, if you are below 0 then the dice instead causes damage, if the damage is more than needed to kill you it bounces back to heal you. If you are damaged by this you also lose 1 mental health.',\r\n    1,\r\n    'self',\r\n    [\r\n        'As an action you can trigger this effect. When you do so you can increase the strength by using more mana.',\r\n        '3 mana: 1d12',\r\n        '4 mana: 2d12',\r\n        '5 mana: 3d12',\r\n    ]\r\n);\r\n\r\nconst Lithovorism = new SpellTemplate(\r\n    'Lithovorism',\r\n    'Mutation: You start craving mineral rich rocks like feldspar and granite (in addition to your normal food requirement), your teeth and jaw become strong enough to crush pebbles the size of 4cm or less, your body weight doubles at a rate of 1kg per day up to double its original and you must eat an amount of these rocks equal 1% of your body\\'s mass every day. Every day that you do not eat enough minerals you do not regenerate mana and instead lose 1.',\r\n    undefined,\r\n    undefined,\r\n    [\r\n        'Your natural damage absorbtion increase by 2',\r\n        'Your endurance and strength increase by 1',\r\n        'You add a -1 penalty to all agility and perception rolls',\r\n        'Your speed decreases by 2',\r\n        'You add a -5 penalty to all social rolls, -10 if your skin is visible (except intimidation)',\r\n        'You gain a bite attack that deals 1d6 + strength/3',\r\n        'all medicine rolls on you take a -10 to their roll',\r\n        'when eating minerals equal to 1% of your body weight you regenerate 1 life every 10 minute for 1d6 minutes, doing this multiple times accumulates the regeneration period',\r\n        'Your body mass doubles',\r\n    ]\r\n);\r\n\r\nconst EyeStalksExtensions = new SpellTemplate(\r\n    'Eye Stalk Extensions',\r\n    'Mutation: Your eyes become eye stalks that can extend out of your head or retract into your eye sockets.',\r\n    undefined,\r\n    undefined,\r\n    [\r\n        'Smaller than tiny: 5cm',\r\n        'Tiny: maximum extension 10cm',\r\n        'Small: maximum extension 15cm',\r\n        'Medium: maximum extension 20cm',\r\n        'Large: maximum extension 25cm',\r\n        'Huge: maximum extension 35cm',\r\n        'Bigger than huge: 50cm'\r\n    ]\r\n);\r\n\r\nconst AuraOfInsanity = new SpellTemplate(\r\n    'Aura of Insanity',\r\n    'Mutation: your mere presence causes insanity to everyone near you, creatures that enter your presence or stay in it for an extended period will have their sanity drained',\r\n    1,\r\n    '4 meters',\r\n    [\r\n        'your aura power is 10 + willpower + spell rank',\r\n        'as an action you can reduce the range by 1 meter (minimum 1), costs 1 mana, while it is reduced you lose 1 mana per day per meter reduced below 3 meters',\r\n        'as an action you can increase the range by 1 meter, costs 1 mana, while it is increased you lose 1 mana per day per meter increased beyond 5',\r\n        'when creatures enter your aura must roll 2d10 + willpower vs your aura power, if they fail they lose 1 mental health and become hostile to everyone, if they succeed they are immune to this effect for 72 hours',\r\n        'when creatures stay in your aura must roll 2d10 + willpower vs your aura ever hour, if they fail they lose 1 mana and gain one minor quirk for 2d12 hours, this effect is cumulative, creatures that fail to adhere to their quirks become enraged and attack everyone around them, or themselves if nobody is available'\r\n    ]\r\n)\r\n\r\nexport const SpellsPerks = [MortisAlbum, Ocultos, Biopod, Xenobite, TwinSoul, Ferral, CursedBlood, XRayVision, ThornSkin, AmoebicHive, SpontaneousRegeneration,\r\n    Lithovorism, EyeStalksExtensions, AuraOfInsanity, //14\r\n\r\n    DimensionalSwap, Splinter, Unmask, UmbraConstant, MirrorTrap, DarkVortex, LuminiferousTransubstantiation, ColorBias, Rift, Conversation, HyperSight, Tesseraction,\r\n    SensoryMeld, EmapthicEqualibrium, SpiritualRegeneration, Quintessence, SolarFlare, QuantumLeap, Assimilation, ManipulateSpacetime, MoteOfPureEntropy, Precognition,\r\n    ThoughtInvasion, Electrostatic, FalseDeath //26\r\n];","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hacking',\r\n        attribute: 'intelligence',\r\n        description: 'hack into computers, takes 1 hour',\r\n        results: [\r\n            'Improve chances with larceny (electronic lockpick): 25, add roll - 25 to larceny',\r\n            'hack password: 24 or higher to succeed',\r\n            'hack very secure password: 34 or higher to succeed',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'craft software',\r\n        attribute: 'intelligence',\r\n        description: 'make computer programs, apps, drivers, services, etc. Takes 8 hours',\r\n        results: [\r\n            'craft single feature driver or application: 2 points',\r\n            'craft complex software: 6 points',\r\n            'architech software system: 12 points',\r\n            'craft computer OS core or AI core: 40 points',\r\n            'roll 21-30: add 1 software point',\r\n            'roll 31-40: add 1d2 software point',\r\n            'roll 41-50: add 1d3 software point',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'use computer',\r\n        attribute: 'intelligence',\r\n        description: 'You can use a computer to do research on the use of another skill, takes 10 minutes and gain a one time use +2',\r\n        results: [\r\n            'search internet: 10 or less -> wrong information',\r\n            'search internet: 11-15 -> incomplete information',\r\n            'search internet: 16-20 -> success',\r\n            'search internet: 21-30 -> success and gain added insight',\r\n            'if information sought is esoteric add -5 to roll',\r\n            'if information sought is criminal or classified add -10 to roll'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Computer = new SkillTemplate('computer', 'googling stuff', useCases);\r\nexport default Computer;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'detect motive',\r\n        attribute: 'intelligence',\r\n        description: 'find out what people want, if this is higher than \"hide emotion\" (subterfuge) then you gain information, if it is significantly below you gain false information. May take 4 at a glance, take 10 from 1 minute interaction or observation. May take 15 if youve spent multiple days with them at GM discretion.',\r\n        type: 'active',\r\n        results: [\r\n            'Cant see their face: -5',\r\n            'Cross culture same species: -2',\r\n            'Cross species: -5',\r\n            'Cross species (Shambra vs any but Merlion): -6 (the shambra mindset is slightly more alien to other species)',\r\n            'Cross species (Merlion vs any): -8 (the merlion mindset is especially alien to other species)'\r\n        ]\r\n    },\r\n    {\r\n        name: 'detect lies',\r\n        attribute: 'intelligence',\r\n        description: 'see through lies, always take 10 vs \"deception\" (subterfuge). When detecting lies at a penalty you should be automatically distrustful due to inability to tell truth from fiction.',\r\n        type: 'passive',\r\n        results: [\r\n            'Cant see their face: -5',\r\n            'Cross culture same species: -2',\r\n            'Cross species: -5',\r\n            'Cross species (Shambra): -6 (the shambra mindset is slightly more alien to other species)',\r\n            'Cross species (Merlion): -8 (the merlion mindset is especially alien to other species)'\r\n        ]\r\n    },\r\n];\r\nconst Empathy = new SkillTemplate('empathy', 'understanding people', useCases);\r\nexport default Empathy;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'interrogation',\r\n        attribute: 'willpower',\r\n        description: 'Force someone to give you answers to questions, they may contest with 2d10 + willpower + intimidation. Takes 10 minutes',\r\n        results: [\r\n            'Should they succeed they choose to automatically resist any further attempt every hour, doing so inflicts 1 mental health damage.',\r\n            'Should they fail by less than 10, they must answer the question. They add 1d6 to their subterfuge roll if they attempt to lie, doing so inflicts 1 mental health damage',\r\n            'Should they fail by less than 20, they must answer the question. They add 1d6 to their subterfuge roll if they attempt to lie and don\\'t know the anwser, doing so inflicts 1 mental health damage',\r\n            'Should they fail by less than 30, they must answer the question. They may only lie if they don\\'t know the true answer. They take 1 mental health damage'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'frighten',\r\n        attribute: 'willpower',\r\n        description: 'As an action emit a terrifying display of power and ill intent to cause viewers/listeners within 10 meters to fear you and view you as more threatening. Roll 2d10 + willpower or strength + intimidation, contested by a (passive) 10 + willpower + intimidation. Those who fail will take mental health damage and enter into a state of fight or flight.',\r\n        results: [\r\n            'Targets that succeed can not be frightened again for 24 hours',\r\n            'Targets that fail their contest will choose between fight or flight. They roll a dice, take mental health damage. The frighten lasts for a number of turns equal to total mental health damage',\r\n            'Fail by less than 10, roll 1d4',\r\n            'Fail by less than 20, roll 1d6',\r\n            'Fail by less than 30, roll 1d8',\r\n            'Fail by more than 30 or 30, roll 1d10',\r\n            'Targets that choose fight may only take actions to attack the target of their fear and are not allowed to perform perception or intelligence based skills',\r\n            'Targets that choose flight may only use their actions to move away from- or hide from the target of their fear, if neither are possible they may only perform dodge action',\r\n            'Targets that are panicked may not take any actions, have only their base defense, at the beginning of every turn they may roll 2d10 + willpower + intimidation, if they succeed they instead enter flight mode.',\r\n            'Any target that fails by more than 10 points must roll a 1d6, on a 1 they become paniced, on 2,3 they must flee, 4,5 they must fight, 6 they may choose',\r\n            'Any target that fails by 20 or more must roll a 1d6, on a 1,2 they become paniced, otherwise they must flee',\r\n            'Targets get a group bonus if they outnumber your team, +1 per target',\r\n            'If the target believes you have no means of hurting them then they receive a +10 bonus'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'coerce',\r\n        attribute: 'willpower',\r\n        description: 'You threaten someone with violence and force them to perform an action, contested by 10 + willpower + intimidation. Whether you succeed or not they perceive it as a hostile action.',\r\n        type: 'active',\r\n        results: [\r\n            'The action should be stated before the roll, if the action is not within scope then the target doesn\\'t have to do it',\r\n            'Should the target succeed they are immune to future coercion for 24 hours',\r\n            'Should they fail by less than 10 they will perform a simple action that merely inconveniences them',\r\n            'Should they fail by less than 20 they will perform an action that doesn\\'t risk their health or station',\r\n            'Should they fail by less than 30 they will perform an action that doesn\\'t kill them',\r\n            'A target that fails may choose to resist but only if they\\'re willing to fight to the death rather than do the asked action, they take 1 mental health damage.',\r\n        ]\r\n    },\r\n    {\r\n        name: 'spook',\r\n        attribute: 'intelligence',\r\n        description: 'while talking to someone for a while you instill in them a sense of dread, every 10 minutes they must roll willpower vs your roll or take 1d4 fear damage (plus 1 per 5 you exceed their roll)',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Intimidation = new SkillTemplate('intimidation', 'the act of casting a shadow over the soul of another being', useCases);\r\nexport default Intimidation;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'search',\r\n        attribute: 'perception',\r\n        description: 'you look for hidden objects, items are hidden with the larceny skill, roll vs hiders roll, takes 1 hour',\r\n        results: [\r\n            'larceny minus 6 or more: You find nothing and you are confident there is nothing to find, may not try again',\r\n            'larceny minus 1-5: You suspect theres something to find, takes 3 days to find object',\r\n            'larceny plus 0-5: You find hidden object within 2 hours',\r\n            'larceny plus 6-10: you find hidden object within 1 hour',\r\n            'larceny plus 11-15: you find hidden object within 30 minutes',\r\n            'larceny plus 16-20: you find hidden object within 15 minutes',\r\n            'larceny plus 21+: you find hidden object at a glance immediately'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'crime scene investigation',\r\n        attribute: 'perception',\r\n        description: 'you examine a crime scene, takes 1 hour to find clues, number of maximum clues depend on criminal larceny skill to hide evidence. Takes 1 hour',\r\n        results: [\r\n            'find clues 0-15: find 1 wrong or missleading clue',\r\n            'find clues 16-20: no clues',\r\n            'find clues 21-25: find 1 clue',\r\n            'find clues 26-30: find 1d6 clue',\r\n            'find clues 31-35: find 2d6 clues',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'solve enigma',\r\n        attribute: 'intelligence',\r\n        description: 'solving puzzles, enigmas, mysteries. You roll to put it together, see connections and understand the mystery',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Investigation = new SkillTemplate('investigation', 'finding out the butler did it after all', useCases);\r\nexport default Investigation;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide object',\r\n        attribute: 'perception',\r\n        description: 'hide an item somewhere, big items take a penalty, open places with few hiding spots take a penalty',\r\n        results: [\r\n            'Gain +5 if object is small',\r\n            'Gain +5 if location has many hiding spots',\r\n            'Lose -5 if object is large',\r\n            'Lose -5 if location has few hiding spots'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'lockpick',\r\n        attribute: 'agility',\r\n        description: 'pick a conventional lock takes 3 minutes or less',\r\n        results: [\r\n            '15: simple lever tumbler',\r\n            '20: complex lever tumbler and disk tumbler',\r\n            '25: simple pin tumbler',\r\n            '30: complex pin tumbler',\r\n            'Succeed by 10, do it in 1d6 rounds',\r\n            'Fail by 10, causes damage to lock, raises difficulty by 5 and if damaged twice it will be broken',\r\n            'Some locks are designed to break immediately on any failed lock pick attempt'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'electronic lockpick',\r\n        attribute: 'intelligence',\r\n        description: 'pick an electronic lock, needs a highly specialized electronic lockpicking tool, might involve a hacking roll (computer). Takes 10 minutes',\r\n        results: [\r\n            'Infra-red key lock: 25',\r\n            'Numb-pad key lock: 15',\r\n            'password key lock: 20',\r\n            'magnetic key lock: 30',\r\n            'Fingerprint scan: 30',\r\n            'Retina scan: 35',\r\n            'DNA scan: 45'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pick pocket',\r\n        attribute: 'agility',\r\n        description: 'remove or add an item to someones inventory without them realizing, they make a perception roll. Big and heavy items are harder to transfer. Takes 1-2 rounds',\r\n        results: [\r\n            '20+perception: tiny light item (single key, card)',\r\n            '25+perception: small light item (keychain, wallet, pocket computer)',\r\n            '30+perception: medium light item (hand gun, knife)',\r\n            '-5 to your roll if they see you comming',\r\n            '-10 to your roll if they expect pickpockets and keep their hands in their pockets',\r\n            '+5 your roll if you have accomplice to distract them',\r\n            '+5 to your roll if they are distracted'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hide evidence of crime',\r\n        attribute: 'perception',\r\n        description: 'Hide evidence of crime, takes 2 hours',\r\n        results: [\r\n            '1-9: leave behind 20 clues or more',\r\n            '10-15: leave behind 3d6 clues',\r\n            '16-20: leave behind 2d6 clues',\r\n            '21-25: leave behind 1d6 clues',\r\n            '26-30: leave behind 1d4 clues',\r\n            '31-35: leave behind 1d3 clues',\r\n            '36-40: leave behind 1d2 clues',\r\n            '41+: leave behind 1 clue',\r\n            \r\n        ],\r\n        type: 'active'\r\n    }\r\n\r\n];\r\nconst Larceny = new SkillTemplate('larceny', 'crimes and stuff', useCases);\r\nexport default Larceny;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'first aid',\r\n        attribute: 'agility',\r\n        description: 'if someone has zero or negative hitpoints then you can prevent bleedout by rolling first aid vs their total damage taken. Plausing bleeding means that taking injury restarts bleeding and total expected life loss is culumative. Stopped means bleeding starts over',\r\n        results: [\r\n            'perform CPR: 15 or higher: keep alive for as long as you keep performign CPR (only needed if heart stopped or breathing stopped)',\r\n            'stop bleeding: 10-14, bleeding is slowed to half (requires ongoing care)',\r\n            'stop bleeding: 15-19, bleeding is paused (requires ongoing care)',\r\n            'stop bleeding: 20-24, bleeding is paused',\r\n            'stop bleeding: 25-29, bleeding is stopped and target regains consciousness if unconscious',\r\n            'stop bleeding: 30+, as 29 and additionally target regains 1 life ',\r\n            'target is critical: -3',\r\n            'target is different species: -3',\r\n            'target is self: -5'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'surgery',\r\n        attribute: 'agility',\r\n        description: 'perform an operation on a patient with injuries or disease. If the patient takes enough damage (-200%) they die.',\r\n        results: [\r\n            'remove bullets or shrapnel, stitch up wounds: equal to total damage, if success by 5 or more heal 1 hp, if success by 10 heal 1d6. Takes 10 minutes per point of damage plus 10 minutes pre-work',\r\n            'fix fractured bone: DC 25',\r\n            'fix shattered bone: DC 30',\r\n            'biopsy: DC 25 (remove small piece of tissue for experimentation)',\r\n            'remove organ or cancer: DC 25-40 (depends on organ)',\r\n            'if you fail by less than 5 the surgery is a success but the patient takes 1d6 damage',\r\n            'if you fail by 6 or more the surgery is a partial failure, the patient takes 1d8 damage, add half your result on the next surgery',\r\n            'patient is different species: -8'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'administer medicine',\r\n        attribute: 'intelligence',\r\n        description: 'picking out the right medicine and knowing how to administer it correctly, this involves a 15 minute checkup to diagnose the patient and 45 minutes of research and preparation',\r\n        results: [\r\n            'administer light painkillers: 10 (1/2 damage penalty to skills)',\r\n            'administer medium painkillers: 20 (1/4 damage penalty to skills)',\r\n            'administer heavy painkillers: 30 (1/8 damage penalty to skills)',\r\n            'patient is different species: -8'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'diagnosis',\r\n        attribute: 'perception',\r\n        description: 'You perform a rutine health checkup on someone and measure their health and wellbeing.',\r\n        results: [\r\n            'wrong diagnosis: 9 or less (you miss something obvious or mistakenly find something that isnt there)',\r\n            'common result: 20, you find most common diseases and injuries',\r\n            'uncommon 25: you find uncommon diseases and hard to find internal injuries',\r\n            'rare 30: you find rare diseases and hidden injuries',\r\n            'very rare 35: you find very rare diseases, asymptomaic diseases',\r\n            'patient is different species: -5'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'psychotherapy',\r\n        attribute: 'intelligence',\r\n        description: 'reduce someones fear level, treat mental illness. Takes 2 hour, max once per day for the patient.',\r\n        results: [\r\n            'therapy: 5: lose 1 mental health from stress',\r\n            'therapy 20-24: heal 1 mental health',\r\n            'therapy 25-29: heal 1d2 mental health',\r\n            'therapy 30-34: heal 1d4 mental health',\r\n            'therapy 35+: heal 1d6 mental health',\r\n            'patient is different species: -5'\r\n        ],\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Medicine = new SkillTemplate('medicine', 'giving people insulin, knowing insulin is not crack', useCases);\r\nexport default Medicine;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'dealing',\r\n        attribute: 'willpower',\r\n        description: 'striking a deal, haggling, negotiating exchanges, each side rolls and a compromise is made in favor of whoever has the higher roll equal to the difference. Only works on people open to it',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'motivational speech',\r\n        attribute: 'willpower',\r\n        description: 'you make a rousing motivational speech, everyone hearing it (max 8 people, not you) gains a bonus to all rolls for their next skill. Takes 1 minute',\r\n        type: 'active',\r\n        results: [\r\n            '15-24: +1 bonus',\r\n            '25-34: +2 bonus',\r\n            '35-44: +3 bonus',\r\n            '45-54: +4 bonus',\r\n            '55:+ +5 bonus'\r\n        ]\r\n    },\r\n    {\r\n        name: 'inspire courage',\r\n        attribute: 'willpower',\r\n        description: 'you say a few heart warming words that strengthen the resolve of anyone hearing you gain a bonus against fear for the rest of the day. Takes 1 minute',\r\n        results: [\r\n            '15-24: +1 bonus',\r\n            '25-34: +2 bonus',\r\n            '35-44: +3 bonus',\r\n            '45-54: +4 bonus',\r\n            '55:+ +5 bonus'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'quell conflict',\r\n        attribute: 'willpower',\r\n        description: 'you try to talk someone down from fighting you, gain +3 to your roll if you know their motives or if they fear you. Does not work on everyone',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Persuasion = new SkillTemplate('persuasion', 'making people see it your way', useCases);\r\nexport default Persuasion;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'drive car',\r\n        attribute: 'perception',\r\n        description: 'drive a car, quadcar, or motorcycle',\r\n        results: [\r\n            'critical failure: 0',\r\n            'severe crash: 5',\r\n            'crash: 10',\r\n            'mild missadventure: 15',\r\n            'drive normally: 20',\r\n            'driving fast (+120km/h): -5 to roll',\r\n            'driving very fast (+180km/h): -10 to roll',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'autopilot available: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive boat',\r\n        attribute: 'agility',\r\n        description: 'drive a boat, driving normally has a difficulty of 15. Failure means you do not make any progress.',\r\n        results: [\r\n            'move forward or turn: 15',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive ship',\r\n        attribute: 'intelligence',\r\n        description: 'driving a ship typically requires mutliple people. Failure means you make no progress or move slightly in random direction.',\r\n        results: [\r\n            'move forward or turn: 20',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'autocaptain available: +8 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive submarine',\r\n        attribute: 'intelligence',\r\n        description: 'driving a sub is very hard and requires multiple people. Failure means you make no progress or move slightly in random direction.',\r\n        results: [\r\n            'move forward, turn, submerge or surface: 25',\r\n            'harsh weather: -3 to roll',\r\n            'autocaptain available: +6 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot airplane',\r\n        attribute: 'intelligence',\r\n        description: 'the second hardest point is takeof, the hardest part is landing. Failure could potentially mean death. For crashland safely etc see Player Manual -> Air Vehicles -> Landing & Crashlanding.',\r\n        results: [\r\n            'takeoff: 25',\r\n            'keep airborne: 20',\r\n            'land perfectly: 40 (requires no maintenence)',\r\n            'land: 30',\r\n            'crashland safely: 25-29 ',\r\n            'crash violently: 20-24 ',\r\n            'crash catastrophically: 19 or less ',\r\n            'air combat: make opposed roll vs enemy, highest roll gets to fire weapon and hits',\r\n            'sea plane: +3 to roll',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'landing gear broken: -10 to roll (only for landing)',\r\n            'engine broken: -5 to roll (only for landing)',\r\n            'autopilot available: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot spaceship',\r\n        attribute: 'intelligence',\r\n        description: 'navigation requires understanding of orbital mechanics. Landing a spacecraft requires either the use of thrusters or parachutes if atmosphere is sufficiently thicc',\r\n        results: [\r\n            'enter orbit: 30',\r\n            'deorbit and land: 25 (parachute)',\r\n            'deorbit and land within 10km: 30 (parachute)',\r\n            'deorbit and land within 1km: 35 (parachute)',\r\n            'deorbit and land perfectly on landingarea: 40',\r\n            'activate thrusters to land smoothly (+1.2g): 45',\r\n            'activate thrusters to land smoothly (0.5 - 1.2g): 40',\r\n            'activate thrusters to land smoothly (0.1 - .5g): 35',\r\n            'activate thrusters to land smoothly (0.01 - .1g): 30',\r\n            'adjust orbit to intercept other co-satelite: 35',\r\n            'plot and engage transfer trajectory: 35',\r\n            'auto-naut available: +3 to roll',\r\n            'long preparatory time (48h): +2 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot FTL',\r\n        attribute: 'intelligence',\r\n        description: 'knowing how to operate an FTL hyperdrive is hard',\r\n        results: [\r\n            'plot course to other star: 35 + 1 per light year'\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst Pilot = new SkillTemplate('pilot', 'driving car, boat, airplane, spaceship, horse. Damage from crashing a vehicle counts as fall damage (bludgeoning and half damage resistance from armor)', useCases);\r\nexport default Pilot;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'cast spell',\r\n        attribute: 'willpower',\r\n        description: 'cast a spell, unless the spell description says otherwise it uses an action, does not restrict movement and has no visible somatic or verbal requirement, you simply will it into existence. Some mutations have active effects that costs mana, these counts as spells.',\r\n        results: [\r\n            'Spell mana cost depends on how you use them',\r\n            'The difficult is 4 + 4 x mana cost (1 mana = 8, 2 mana = 12, 3 mana = 16, etc)',\r\n            'If you roll 1-5 points below difficulty you may choose to have it succeed at double mana cost',\r\n            'If you roll 10+ points below difficulty the spell fails and you spend 1 additional mana per point of failure below 10 (so if difficulty is 24, you roll 12 you spend 4 + 2 = 6)',\r\n            'If you roll 10+ above difficulty the spell costs 1 less mana (minimum 1)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'regenerate mana',\r\n        attribute: 'willpower',\r\n        description: 'you regenerate 1 mana every 24 hours, if your mana goes into the negatives you can not cast any more spells or actively use mutations that require mana. You also suffer a penalty to all active and passive rolls equal to your negative mana. Mana regeneration does not depend on rest.',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'acquire mutation',\r\n        attribute: 'willpower',\r\n        description: 'When you acquire a mutation roll 1d10 and consult the chart (Spells are always acquired immediately). The first time when you acquire a spell or mutation and spend experience points you are allowed to go into negative. However the next time you must have 10 experience points available. The experience points are spent BEFORE you roll and you MUST always take one. Once you have a mutation or spell they can never be removed.',\r\n        type: 'active',\r\n        results: [\r\n            '1: You acquire the negative effects immediately and after 1d6 days acquire the positive effects',\r\n            '2: The mutation slowly appears over the course of 1d4 days',\r\n            '3: The mutation slowly appears over the course of 24 hours',\r\n            '4: The mutation slowly appears over the course of 2d12 hours',\r\n            '5: The mutation slowly appears over the course of 10d6 minutes',\r\n            '6: The mutation appears over the course of 2d6 minutes',\r\n            '7: The mutation appears over the course of 1d4 rounds',\r\n            '8: The mutation appears at the end of your turn',\r\n            '9: The mutation immediately appears',\r\n            '10: The mutation immediately appears when you choose, you can wait up to 6 days after which it immediately appears at the start of your turn.',\r\n        ]\r\n    }\r\n];\r\nconst Spells = new SkillTemplate('spells', 'You will a phenomenon into existence or use a mutations benefit.', useCases);\r\nexport default Spells;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide emotion',\r\n        attribute: 'intelligence',\r\n        description: 'how hard you are to read, always take 10',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'deception',\r\n        attribute: 'intelligence',\r\n        description: 'telling outright lies or knowingly leading others to a false conclusion through omission of the truth',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'disguise',\r\n        attribute: 'perception',\r\n        description: 'You create a disguise, contested by subterfuge + perception (passive 10)',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Subterfuge = new SkillTemplate('subterfuge', '', useCases);\r\nexport default Subterfuge;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'repair machine',\r\n        attribute: 'intelligence',\r\n        description: 'repair a machine, takes 8 hours',\r\n        results: [\r\n            'maintain vehicle or machine: 25',\r\n            'repair vehicle or machine: 30',\r\n            'repair completely broken vehicle or machine: 35 (use replacement parts)',\r\n            'gain +5 if working in team',\r\n            'Take -10 to roll if no replacement parts available',\r\n            'if success with more than 10: job is done in 4 hours',\r\n            'if fail with more than 10: condition drops by 1 step'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build device',\r\n        attribute: 'intelligence',\r\n        description: 'building a device',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hotwire machine',\r\n        attribute: 'intelligence',\r\n        description: 'altering a machine to suit your needs',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'service robot',\r\n        attribute: 'intelligence',\r\n        description: 'servicing a robot',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Mechanics = new SkillTemplate('mechanics', 'black thumb', useCases);\r\nexport default Mechanics;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'fencing',\r\n        attribute: 'intelligence',\r\n        description: 'Find a fence to buy your stolen goods. Sell stolen goods to the white market. Take 4 hours to achieve.',\r\n        results: [\r\n            'find fence: 20',\r\n            'sell hot stolen goods directly: 25',\r\n            'In a city with more crime: +5 to roll',\r\n            'In a town with less crime: -5 to roll',\r\n            '\"Looks like a cop\": -10 to roll',\r\n            'Is known to work in lawenforcement: -20 to roll',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'black market',\r\n        attribute: 'intelligence',\r\n        description: 'Finding a black market actor takes time and is risky. Takes 4 hours',\r\n        results: [\r\n            'Critical failure: 10 or less: law enforcement finds you',\r\n            'Failure: 11-15: criminals become suspicious of you',\r\n            'Failure: 16-24: no effect',\r\n            'Find market for illegal items: 30',\r\n            'Find black market for legal items: 25',\r\n            'In a city with lots of crime: +5 to roll',\r\n            'In a town with less crime: -5 to roll',\r\n            '\"Looks like a cop\": -10 to roll',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'gangs',\r\n        attribute: 'intelligence',\r\n        description: 'Finding gangs, talking to gangs, etc. A gang is an informal extrajudicial organization with an implicit or explicit hierarchy. They can be both good and bad',\r\n        type: 'active',\r\n        results: [\r\n            '\"Looks like a cop\": -10 to roll',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ]\r\n    },\r\n    {\r\n        name: 'gossip',\r\n        attribute: 'intelligence',\r\n        description: 'Picking up local information, knowing what is important and true, and not becoming suspicious in the process. Takes a 4 hours',\r\n        results: ['5 or below: gain no information and attract attention',\r\n            '6-10: gain one piece of gossip and attract attention',\r\n            '11-15: gain multiple pieces of gossip and attract attention',\r\n            '16-20: gain multiple pieces of gossip, at least one is something you choose and attract attention',\r\n            '21-25: gain multiple pieces of gossip, at least one is something you choose, no attention',\r\n            '26 or above: gain multiple pieces of gossip, most of which is something you choose, no attention',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'local culture',\r\n        attribute: 'intelligence',\r\n        description: 'knowledge of local culture, for historical knowledge you may substitute a general knowledge',\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Streetwise = new SkillTemplate('streetwise', '', useCases);\r\nexport default Streetwise;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'set up experiment',\r\n        attribute: 'intelligence',\r\n        description: 'set up an experiment to test an hypothesis',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'formulize hypothesis',\r\n        attribute: 'intelligence',\r\n        description: 'create a theory to explain phenomena',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'remember science',\r\n        attribute:  'intelligence',\r\n        description: 'you remember a scientific fact pertaining a topic',\r\n        results: [\r\n            '15 or less: you remember wrong pseudoscience',\r\n            '25: you remember the necessary information',\r\n            '30: you remember additional useful information',\r\n            '35: you remember detailed useful information that gives you more or better options',\r\n            '40: you remember obscure detail especially useful information and gain a deep understanding',\r\n            '45: you remember all known scientific information about the topic',\r\n            '50: you make an ephiphany and will be able to further the field of science (gain free correct hypothesis)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'analyse life',\r\n        attribute: 'perception',\r\n        description: 'the scientist determines species, age, sex and abilities of a plant of creature',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'fill spaceship cargobay/passengers',\r\n        attribute: 'intelligence',\r\n        description: 'when you fill a cargobay in a spaceship you have to be careful that the weight distribution is even, that includes the passengers. Takes between 1-8 hours, depending on the size of the ship, ship must be at rest.',\r\n        type: 'active',\r\n        results: [\r\n            '15 or less: you botch the job, the ship is missaligned and cant fly in a straight line',\r\n            '20: you are able to put the cargo in the right places, but its not perfect and the ship loses 10% acceleration',\r\n            '25: no penalties',\r\n            '30: youre able to organize the cargo perfectly, the ship has 10% more cargo space available'\r\n        ]\r\n    }\r\n];\r\nconst Science = new SkillTemplate('science', 'knowing science, conducting experiments', useCases);\r\nexport default Science;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hotwire electronic device',\r\n        attribute: 'agility',\r\n        description: 'rewire an electronic device to turn on or off its function, requires tool',\r\n        results: [\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'repair electronics',\r\n        attribute: 'perception',\r\n        description: 'repair an electronic device, socket, etc, requires tools and replacement parts',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Electronics = new SkillTemplate('electronics', '', useCases);\r\nexport default Electronics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'throw grenade',\r\n        attribute: 'agility',\r\n        description: 'throw a grenade at a target, grenade will explode at the end of your next turn.',\r\n        results: [\r\n            'base difficulty: 10 (to hit hex of target)',\r\n            'range penalty: 1 per meter',\r\n            'When a grenade lands within range of a target that can see the grenade and is able to move they are allowed to roll a contested acrobatics + agility roll. If they succeed they may move out of range before it explodes. If they fail by less than 10 then they fall to a defensive prone position and take only half damage.',\r\n            'rain: -2 to roll',\r\n            'windy: -2 to roll',\r\n            'stormwind: -4 to roll',\r\n            'target on slope: -8 to roll',\r\n            'if you fail then it lands randomly 1 meter away per point of failure. If your total roll is 0 or less the grenade explodes in your hand.'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'set trigger detonated bomb',\r\n        attribute: 'intelligence',\r\n        description: 'you set a bomb to explode after a specific trigger has occured (time elapses, motion sensor, signal from remote etc). You can make it harder to disable by spending more time and using more better parts',\r\n        results: [\r\n            'base difficulty: 15',\r\n            'good parts: +2 (to roll)',\r\n            'spend 10 minutes: +2 (to roll)',\r\n            'spend 1 hour: +4 (to roll)',\r\n            'spend 4 hours: +6 (to roll)',\r\n            'make it explode if tampered with: -4 (to roll)'\r\n        ],\r\n        type :'active'\r\n    },\r\n    {\r\n        name: 'disable timed bomb',\r\n        attribute: 'perception',\r\n        description: 'you disable a timed bomb, the base difficulty is the resulting roll from when it was set. Takes 10 minutes, can be done in 1 minute at -10 penalty, 1 round -20 penalty',\r\n        results: [\r\n            'critical failure: 15 below target, bomb explodes immediately',\r\n            'severe failure: 10 below target, bomb time left is set to half (if timed, otherwise nothing)',\r\n            'failure: below target, no effect, difficulty raised +2',\r\n            'success: bomb disabled',\r\n            'critical success: 10 above target, bomb is disabled and can be manipulated immediately'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'make improvised bomb',\r\n        attribute: 'intelligence',\r\n        description: 'you make an improvised bomb from non-bomb materials.',\r\n        results: [\r\n            'molotov cocktail: base 15, 5 minutes per',\r\n            'nitroglycerin: base 25, 1 hour per litre',\r\n            'dynomite: base 25, 2 hours per kg',\r\n            'battery bomb: 20, 1 hour',\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Explosives = new SkillTemplate('explosives', 'creating and using explosive devices, bombs, grenades', useCases);\r\nexport default Explosives;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'remember common fact',\r\n        attribute: 'intelligence',\r\n        description: 'you remember a commonly known helpful fact or gain insight based on fact. The GM may sometimes ask you to roll general knowledge',\r\n        type: 'active',\r\n        results: [\r\n            'missinformation: 9 or less',\r\n            'very common: 10-14',\r\n            'common: 15-19',\r\n            'uncommon: 20-24',\r\n            'rare: 25-29',\r\n            'very rare: 30-34',\r\n            'extremely rare: 35+',\r\n            'completely outside your sphere: -6 (something you can not have encountered)',\r\n            'outside your sphere: -3 (something you should not have encountered)',\r\n            'well within your sphere: +3 (the information pertains to something youre connected to)'\r\n        ]\r\n    },\r\n];\r\nconst GeneralKnowledge = new SkillTemplate('general knowledge', 'so rare its a superpower', useCases);\r\nexport default GeneralKnowledge;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'high society',\r\n        attribute: 'intelligence',\r\n        description: 'Act as though you belong in high society',\r\n        results: [\r\n            '15 or less: failure, people assume you are poor and treat you like scum or servant',\r\n            '16-20: low success, people assume you are middle class, nobody takes you seriously',\r\n            '21-25: mid success, people assume you belong and will treat you like anyone else, and detect failures',\r\n            '26-30: high success, people assume you are a good example, and detect low success',\r\n            '31+: great success, people look to you for advice, and detect mid success',\r\n            'is not dressed well: -10',\r\n            'is dressed extremely well: +5 (clothes worth 10 000 credits or more)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst SavoirFaire = new SkillTemplate('savoir-faire', 'specialization into sub cultures that relates to legit occupations, high society and academy', useCases);\r\nexport default SavoirFaire;","import { Skill } from './Skills';\r\nimport Acrobatics from '../skills/acrobatics';\r\nimport Athletics from '../skills/athletics';\r\nimport Combat from '../skills/combat';\r\nimport Computer from '../skills/computer';\r\nimport Firearms from '../skills/firearms';\r\nimport Empathy from '../skills/empathy';\r\nimport Intimidation from '../skills/intimidation';\r\nimport Investigation from '../skills/investigation';\r\nimport Larceny from '../skills/larceny';\r\nimport Medicine from '../skills/medicine';\r\nimport Persuasion from '../skills/persuasion';\r\nimport Pilot from '../skills/pilot';\r\nimport Spells from '../skills/spells';\r\nimport Stealth from '../skills/stealth';\r\nimport Subterfuge from '../skills/subterfuge';\r\nimport Survival from '../skills/survival';\r\nimport Mechanics from '../skills/mechanics';\r\nimport Streetwise from '../skills/streetwise';\r\nimport Science from '../skills/Science';\r\nimport Electronics from '../skills/electronics';\r\nimport Explosives from '../skills/explosives';\r\nimport Cooking from '../skills/cooking';\r\nimport GeneralKnowledge from '../skills/generalknowledge';\r\nimport SavoirFaire from '../skills/savoir-faire';\r\n\r\nexport const GetSkillList = (): Skill[] => {\r\n    return [\r\n        Acrobatics,\r\n        Athletics,\r\n        Combat,\r\n        Computer,\r\n        Empathy,\r\n        Firearms,\r\n        Intimidation,\r\n        Investigation,\r\n        Larceny,\r\n        Medicine,\r\n        Persuasion,\r\n        Pilot,\r\n        Spells,\r\n        Stealth,\r\n        Subterfuge,\r\n        Survival,\r\n        Streetwise,\r\n        Mechanics,\r\n        Science,\r\n        Electronics,\r\n        Explosives,\r\n        Cooking,\r\n        GeneralKnowledge,\r\n        SavoirFaire\r\n\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n}","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'active dodge',\r\n        attribute: 'agility',\r\n        description: 'Roll 1d10, add it to your active defense until its your turn again. Can be done as a reaction if you see that someone is attempting to attack you.',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'balance',\r\n        attribute: 'agility',\r\n        description: 'anything balance related such as walking on slippery surfaces, walking tight rope, staying upright on shaky ground, etc. Can be done as a part of a move action',\r\n        results: [\r\n            'Walk on slippery surface: 9 or less: failure',\r\n            'Walk on slippery surface: 10-14: walk slowly',\r\n            'Walk on slippery surface: 15-19: walk normal',\r\n            'Walk on slippery surface: 20-24: jog',\r\n            'Walk on slippery surface: 25-29: run',\r\n            'Walk on slippery surface: 30: unimpeded movement',\r\n            'Walk on tightrope: same as slippery but -5 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'reduce falling damage',\r\n        attribute: 'agility',\r\n        description: 'You can reduce falling damage, either by diving into a liquid or tumbling on the ground.',\r\n        results: [\r\n            '5 or less: increase by 1 meter',\r\n            '15: reduce by 1 meter',\r\n            '20: reduce by 2 meters',\r\n            '25: reduce by 3 meters',\r\n            '30: reduce by 4 meters',\r\n            '35: reduce by 5 meters',\r\n            '40: reduce by 6 meters',\r\n            '45: reduce by 7 meters',\r\n            '50: reduce by 8 meters'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Acrobatics = new SkillTemplate('acrobatics', 'the ability to move around', useCases);\r\nexport default Acrobatics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hold breath',\r\n        attribute: 'endurance',\r\n        description: 'How long you can hold your breath is equals to 10 + athletics + endurance.',\r\n        results: [\r\n            '0 or less: 1 round',\r\n            '1-4: 2 rounds',\r\n            '5-9: 3 rounds',\r\n            '10-14: 5 rounds',\r\n            '15-19: 10 rounds',\r\n            '20-24: 15 rounds',\r\n            '25-29: 20 rounds',\r\n            '30-34: 30 rounds',\r\n            '35+ rounds: 40 rounds',\r\n            'If doing strenious activity: -5',\r\n            'Wounded: half penalty from damage (penalty = 50% of damage taken)',\r\n            'If exhausted or over carry capacity: -5 per step'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'swim',\r\n        attribute: 'strength',\r\n        description: 'How well you swim is equal to 10 + athletics + strength',\r\n        results: [\r\n            '0 or less: sinks below water level immediately, not able to make any progress',\r\n            '1-4: can stay afloat for 2d4 rounds before sinking',\r\n            '5-9: can stay afloat for 2d6 minutes before sinking',\r\n            '10-14: can stay afloat for indefinitely and move 1 meter per turn using both action and move action needing a break ever 2d6 rounds',\r\n            '15-19: move 2 meter per turn using both action and move action',\r\n            '20-24: use action and move action to move at 25% speed',\r\n            '25-29: use action and move action to move at 50% speed',\r\n            '30-34: use action and move action to move at 75% speed',\r\n            '35-39: use action and move action to move at 100% speed',\r\n            '40-44: use move action to move at 100% speed',\r\n            '45-49: use move action to move at 100% speed and may use action to move at 150%',\r\n            '50+: use move action to move at 100% speed and may use action to move at 200%',\r\n            'Wounded: full penalty',\r\n            'If exhausted or over carry capacity: -5 per step',\r\n            'big waves: -5',\r\n            'turbulent water: -5',\r\n            'cold/hot water: -5',\r\n            'icy/scalding water: -10'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'throwing',\r\n        attribute: 'agility',\r\n        description: 'Throwing an item accurately and precisely at a target, for example a ball into a hoop. The distance depends on your strength and the weight of the item.',\r\n        results: [\r\n            \r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name:'ride',\r\n        attribute: 'agility',\r\n        description: 'ride bicycle, ride horse, or spouse',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'run',\r\n        attribute: 'endurance',\r\n        description: 'how fast you run and how long you can run. Once you hit the limit you gain one level of exhaustion. (take 10)',\r\n        results: [\r\n            'take one single step: -25 (unable to stand if you fail)',\r\n            'walk 2 rounds: -20',\r\n            'walk 1 minute: -15',\r\n            'walk 5 minutes: -10',\r\n            'walk 15 minutes: -5',\r\n            'walk 30 minutes: 0',\r\n            'walk 60 minutes: 5',\r\n            'walk 2 hours: 10',\r\n            'walk 4 hours: 15',\r\n            'walk 8 hours: 20',\r\n            'for each +5, double duration',\r\n            'walk at 50% rate: same as walk but +5 on the roll',\r\n            'power walk 2x speed: -5 (one step up)',\r\n            'jog x3 speed: -10  (two steps up)',\r\n            'run x4 speed: -20  (four steps up)',\r\n            'sprint x5 speed: -30  (six steps up)',\r\n            'each level of carrying capacity and exhaustion: -5 per step  (one step up)'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'jump',\r\n        attribute: 'strength',\r\n        description: 'how high and far you can jump, jumping forward requires at least double runway distance for sprinting. Can be done as a part of move action, requires at least 10 meter sprinting or take a -5 to the roll',\r\n        results: [\r\n            '4-10: 50cm up',\r\n            '11-15: 1m up',\r\n            '16-20: 1.5m up',\r\n            '21-25: 2m up',\r\n            '26-30: 2.5m up',\r\n            '31-35: 3m up',\r\n            '36-40: 3.5m up',\r\n            '41-45: 4m up',\r\n            '46-50: 4.5m up',\r\n            '51-55: 5m up',\r\n            '4-10: 1.5m forward',\r\n            '11-15: 3m forward',\r\n            '16-20: 4.5m forward',\r\n            '21-25: 6m forward',\r\n            '26-30: 7.5m forward',\r\n            '31-35: 9m forward',\r\n            '36-40: 10.5m forward',\r\n            '41-45: 12m forward',\r\n            '46-50: 13.5m forward',\r\n            '51-55: 15m forward',\r\n            'each level of carrying capacity and exhaustion: -5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'climb',\r\n        attribute: 'strength',\r\n        description: 'climbing up things, done as a move action, you normally move at 25% of your speed vertically/diagonally or 50% horizontally.',\r\n        results: [\r\n            '1+: climb ladder or stairs',\r\n            '6+: climb very steep slope',\r\n            '25+: climb rough wall',\r\n            '60+: climb sheer wall',\r\n            'each 25 meters up: -5 to roll',\r\n            'if using rope: +5 to roll',\r\n            'if using knotted rope: +10 to rope',\r\n            'if wet conditions: -5 to roll',\r\n            'if wet and windy conditions: -10 to roll',\r\n            'each level of carrying capacity and exhaustion: -5 to roll'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n];\r\nconst Athletics = new SkillTemplate('athletics', 'skillful use of stamina. You increase speed by 1 at rank 6, 12 and 18. You increase life at rank 9 and 18', useCases);\r\nexport default Athletics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'punch',\r\n        attribute: 'agility',\r\n        description: 'unarmed strike, deals 1d2 + strength / 5 (rounded down).',\r\n        type: 'active',\r\n        results: [\r\n            'You gain +1 damage for every 10 points above the target defense',\r\n            'you can do multiple attacks, at 6, 12, 18, 24, 30 you can do one extra at each, each time taking -3 penalty per extra attack',\r\n            'Action points: 3'\r\n        ]\r\n    },\r\n    {\r\n        name: 'kick',\r\n        attribute: 'agility',\r\n        description: 'unarmed strike, deals 1d2 + strength / 4 (rounded down).',\r\n        type: 'active',\r\n        results: [\r\n            'You gain +1 damage for every 10 points above the target defense',\r\n            'you can do multiple attacks, at 6, 12, 18, 24, 30 you can do one extra at each, each time taking -3 penalty per extra attack',\r\n            'Action points: 4'\r\n        ]\r\n    },\r\n    {\r\n        name: 'weapon attack',\r\n        attribute: 'agility',\r\n        description: 'weapons, damage based on weapon type',\r\n        type: 'active',\r\n        results: [\r\n            'You gain +1 damage for every 10 points above the target defense',\r\n            'Action points: depends on weapon'\r\n        ]\r\n    },\r\n    {\r\n        name: 'throw weapon',\r\n        attribute: 'agility',\r\n        description: 'Throwing an weapon accurately and precisely at a target, for example a knife into a person. The distance depends on your strength and the weight of the item.',\r\n        results: [\r\n            \r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'block',\r\n        attribute: 'agility',\r\n        description: 'use unarmed or weapon to block any attack, if successful only take 1/2 damage (round down, applied before damage reduction). Blocking ranged attacks takes -10 on your roll vs their roll. If you block with a weapon, shield or object it takes the damage. Requires that you see the attack.',\r\n        results: [\r\n            'gadget or gun typical breaking damage: 10',\r\n            'wood typical breaking damage: 15',\r\n            'plastic typical breaking damage: 18',\r\n            'soft metal typical breaking damage: 22',\r\n            'steel typical breaking damage: 25',\r\n            'tital alloy typical breaking damage: 28'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Combat = new SkillTemplate('combat', 'the ability to move around', useCases);\r\nexport default Combat;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'aimed shot',\r\n        attribute: 'agility',\r\n        description: 'Fire a single shot at a target, any non fully-automatic weapon.',\r\n        results: [\r\n            'If roll equals defense or greater then you hit',\r\n            'Add +1 armor pierce per each 10 over defense'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'snipe',\r\n        attribute: 'perception',\r\n        description: 'Wait for the perfect hit and then shoot, any non fully-automatic weapon.',\r\n        results: [\r\n            'If roll equals defense then you hit, if roll is less than up to 8, 9, 10, 11 or 12 (declare before rolling) then take no action and simply wait',\r\n            'Range penalty is half',\r\n            'Adds +2 to hit for each additional action point spent',\r\n            'Add +1 armor pierce per each 10 over defense',\r\n            'Action point use: +2'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'semi burst',\r\n        attribute: 'agility',\r\n        description: 'Fire multiple shots with a semi-automatic weapon.',\r\n        results: [\r\n            'Fire 5 bullets',\r\n            'Add +5 to hit',\r\n            'If roll equals defense then you hit with 1d2 bullets',\r\n            'Defense limited to passive',\r\n            'Gain +1 minimum bullets hit per each 10 over defense (max 5)',\r\n            'You can fire on two adjacent squares, doing so removes the bonus to hit and you only hit with one bullet on each target',\r\n            'Action point use: +2'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'burst',\r\n        attribute: 'agility',\r\n        description: 'Hold down the trigger on a fully-automatic weapon for a short burst. Requires full-auto or continuous.',\r\n        results: [\r\n            'Fire 10 bullets',\r\n            'Add +10 to hit',\r\n            'If roll equals defense then you hit with 1d6 bullets',\r\n            'Defense limited to passive',\r\n            'Uses half of your movement speed',\r\n            'Strength requirement increase by 1',\r\n            'Gain +1 minimum bullets hit per each 10 over defense (max 10)',\r\n            'You can fire on multiple adjacent squares, each uses 2 more action point and reduces your hit result by 5 and -1 bullet hit',\r\n            'Action point use: +3'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'oppressive fire',\r\n        attribute: 'strength',\r\n        description: 'Hold down the trigger on a fully automatic firearm for the whole round, can spray across multiple targets. Requires full-auto or continuous.',\r\n        results: [\r\n            'Shoot as many bullets as it uses per round, potentially empying the magazine',\r\n            'Add +15 to hit',\r\n            'If roll equals defense then you hit with 1d8 bullets',\r\n            'Defense limited to base',\r\n            'Prevents reaction until your next turn',\r\n            'Requires that you do not use your movement (before or after)',\r\n            'Strength requirement increase by 2',\r\n            'Gain +1 bullet hit per each 10 over defense',\r\n            'You can fire on multiple adjacent squares, each uses 1 more action point and reduces your hit result by 5 and -1 bullet hit',\r\n            'Action point use: +4'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'maintain weapon',\r\n        attribute: 'intelligence',\r\n        description: 'keep it clean and good. Takes 2 minute, requires ballistic kit.',\r\n        results: [\r\n            'service: 14 or lower: damage weapon, firearm drops condition by 1 step',\r\n            'service: 21-30 or lower: firearm condition countdown is reset',\r\n            'service: 31-40: firearm condition is improved by 1 step',\r\n            'service: 41+: firearm condition is improved by 2 steps'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Firearms = new SkillTemplate('firearms', 'shooting things', useCases);\r\nexport default Firearms;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'shadow',\r\n        attribute: 'agility',\r\n        description: 'follow someone without them knowing youre following them, roll stealth + agility vs their perception + stealth (passive take 10)',\r\n        results: [\r\n            'critical failure: 10 less than their perception roll: they notice you immediately, you dont notice that they notice you',\r\n            'failure: less than their perception roll: they notice you immediately',\r\n            'success: +0-5: you can follow them for 10 minutes undetected',\r\n            'success: +6-5: you can follow them for 20 minutes undetected',\r\n            'success: +11-15: you can follow them for 40 minutes undetected',\r\n            'success: +16-20: you can follow them for 80 minutes undetected',\r\n            'success: +21-25: you can follow them for 160 minutes undetected',\r\n            'success: +26-30: you can follow them for 320 minutes undetected',\r\n            'Target is paranoid: -5 to roll',\r\n            'Target knows your face: -10 to roll',\r\n            'You blend in well: +5 to roll',\r\n            'You stick out: -10 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hide',\r\n        attribute: 'agility',\r\n        description: 'hide somewhere, roll agility + stealth vs target perception + stealth. Requires that you are obscured.',\r\n        results: [\r\n            'critical failure: 10 less than their perception roll: they notice you immediately, you dont notice that they notice you',\r\n            'failure: less than their perception roll: they notice you immediately',\r\n            'success: 0-5: you are hidden for 15 minutes before they find you',\r\n            'success: 6-5: you are hidden them for 30 minutes before they find you',\r\n            'success: 11-15: you are hidden for 1 hour before they find you',\r\n            'success: 16-20: you are hidden for 2 hours before they find you',\r\n            'success: 21-25: you are hidden for 4 hours before they find you',\r\n            'success: 26-30: you are hidden for 8 hours before they find you',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'detection',\r\n        attribute: 'perception',\r\n        description: 'find someone who is hiding or shadowing you, this is a passive roll.',\r\n        results: [\r\n            'Active shadow search: +5 to your roll, shadow knows you are searching for a shadow',\r\n            'Active hidden person search: +5 to your roll, hidden person knows you are searching for a hiding person',\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'conceal weapon',\r\n        attribute: 'agility',\r\n        description: 'You attempt to hide a weapon on your body. This is contested by a passive stealth + perception (10 + stealth + perception). Depending on the weight you will receive a modifier',\r\n        type: 'active',\r\n        results: [\r\n            '99 grams or less: +10',\r\n            '100-250 grams: +8',\r\n            '251-500 grams: +6',\r\n            '501-750 grams: +4',\r\n            '751-1000 grams: +2',\r\n            '1-1.5 kg: +/-0',\r\n            '1.5-2 kg: -2',\r\n            '2-3 kg: -4',\r\n            '3-4 kg: -8',\r\n            '4-6 kg: -16',\r\n            '6-8 kg: -32',\r\n            '8-10 kg: -64',\r\n            '10+ kg: impossible',\r\n        ]\r\n    }\r\n];\r\nconst Stealth = new SkillTemplate('stealth', 'To be in stealth means that you are not seen and not heard.', useCases);\r\nexport default Stealth;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'forage',\r\n        attribute: 'willpower',\r\n        description: 'find drinkable water, hunt fauna or gather edible flora. Takes 8 hours. The type of food you find depends on your biome. Barren worlds can not be foraged. Without tools it is assume that you crafted tools and they were used up in the act of gathering food.',\r\n        results: [\r\n            'Survival 20: ingredients for 1 meal',\r\n            'Survival 25: ingredients for 2 meals',\r\n            'Survival 30: ingredients for 3 meals',\r\n            'Survival 35: ingredients for 4 meals',\r\n            'Rush (4h): take -10 to roll to speed up the process. Still uses the effort of 8h',\r\n            'Exhaustion or over carry capacity: -3 per step',\r\n            'Outside of familiar biome: -5 to roll',\r\n            'Harsh biome: -5 to roll',\r\n            'Almost barren biome: -10 to roll',\r\n            'Find immediately edible food: -5 to roll',\r\n            'Have access to hunters/foraging tools: +10 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'wilderness orientation',\r\n        attribute: 'intelligence',\r\n        description: 'find your way through the wilderness',\r\n        results: [\r\n            'find north: 10, (-3 if its very cloudy)',\r\n            'backtrack: 15 (-3 if bad weather, -8 if stormy)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build shelter',\r\n        attribute: 'intelligence',\r\n        description: 'build a shelter that protects you from exposure, depending on your roll and the environment will give you different levels of exposure. Building a shelter takes 8 hours to construct and 1 hour daily to maintain. Level 1 protection gives horrible quality sleep, level 2 gives bad quality sleep, level 3 gives adequate quality sleep. level 4 gives good quality sleep. level 5 gives fantastic quality sleep',\r\n        results: [\r\n            'Critical failure 5: no protection, materials destroyed',\r\n            'Failure 10: no protection, materials recoverable',\r\n            'Bad 15: 1 levels of protection',\r\n            'Adequate 20: 2 levels of protection',\r\n            'Good 25: 3 levels of protection',\r\n            'Great 30: 4 levels of protection',\r\n            'Fantastic 35: 5 levels of protection',\r\n            'Temperature range outside 5-35: -5 to roll',\r\n            'Temperature range outside -10 - 45: -10 to roll',\r\n            'Temperature range outside -30 - 60: -15 to roll',\r\n            'High winds: -5 to roll',\r\n            'Extreme winds: -10 to roll',\r\n            'Heavy rain: -5 to roll',\r\n            'Monsoon: -10 to roll',\r\n            'Build shelter for multiple people: -2 per person capacity, max 5',\r\n            'Have access to tent and bedroll: +5 to roll',\r\n            'Have access to wilderness tools: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'track animal',\r\n        attribute: 'perception',\r\n        description: 'roll vs the animals stealth roll. It takes 4 if its not trying to hide. Take a penalty equal to the number of days since the animal has passed through the area you search. If it has rained, snowed, flooed or the tracks have been disturbed then double the penalty.',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Survival = new SkillTemplate('survival', '', useCases);\r\nexport default Survival;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'prepare meal',\r\n        attribute: 'perception',\r\n        description: 'you convert ingredients into a homecooked meal, you may cook multiple meals at once if the kitchen has the amenities for it.',\r\n        results: [\r\n            'Cooking 10 or less: you spoiled the food, horrible quality',\r\n            'Cooking 11-15: its edible yet unsatisfying',\r\n            'Cooking 16-20: average food, it does the job',\r\n            'Cooking 21-25: good food, leaves you in good mood',\r\n            'Cooking 26-30: great food, it tastes good and is yet very healthy',\r\n            'Cooking 31+: Outstanding food, this is some gourmet stuff',\r\n            'Cooking multiple meals requires an ever larger kitchen, home kitchen is good enough for 5',\r\n            'For each meal above 1, take -1 to roll (eg. 8 meals = -7 to roll)',\r\n            'Following recipe: +5 to roll (max is great)',\r\n            'Cooking fast: 30m, -5 to roll, max quality is great',\r\n            'Speed cooking: 15m, -10 to roll, max quality is good',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'preserve food',\r\n        attribute: 'intelligence',\r\n        description: 'you convert edible food or raw ingredients into long lasting preserved food allowing it to last longer, you may preserve up to 10 meals as a single action, each meal increases time by 10%. Requires access to kitchen',\r\n        type: 'active',\r\n        results: [\r\n            'cooling: 5, food lasts 1 week',\r\n            'freezing: 5, food lasts 1 month',\r\n            'pickle: 15 average, 20 good. Takes 1 hour. Requires sealable container. lasts 1 year on average',\r\n            'curing: 20 average, 25 good. Takes 1 hour + 16 hours of time. lasts 6 months on average',\r\n            'fermentation: 20 average, 25 good, 30 great, 35+ outstanding.',\r\n            'high density ration: 25, requires raw protein, fats, sugars and synthetic vitamims. Lasts 10 years'\r\n        ]\r\n    }\r\n];\r\nconst Cooking = new SkillTemplate('cooking', 'everything related to cooking food', useCases);\r\nexport default Cooking;","import { IHooker } from '../Character';\r\nimport { race } from '../races/Races';\r\n\r\n\r\nexport interface Trait extends IHooker {\r\n    name: string;\r\n    cost: number;\r\n    description: string;\r\n    race: race | 'any';\r\n}\r\n\r\nconst Coward: Trait = {\r\n    name: 'Coward',\r\n    cost: -10,\r\n    description: 'You are a coward that more easily falls vicim to fear. You may never choose fight when frighetened or coerced and you receive a -3 penalty to resist all sources of fear.',\r\n    applyTo: 'fear',\r\n    amount: -2,\r\n    race: 'any',\r\n}\r\n\r\nconst Brave: Trait = {\r\n    name: 'brave',\r\n    cost: 10,\r\n    description: 'You are brave and are less likely to be phased by fear. You are always allowed to choose fight when frightened, remain silent when interrogated, fight when coerced, you receive +3 to resist all sources of fear, when you take mental health damage from fear related sources you take 1 less (minimum 0).',\r\n    applyTo: 'fear',\r\n    amount: 3,\r\n    race: 'any',\r\n}\r\n\r\nconst FoolHardy: Trait = {\r\n    name: 'foolhardy',\r\n    cost: 10,\r\n    description: 'At first glance you seem brave, but actually you are just ignoring the feeling completely. You gain 1 fear resistence but you are no longer privy to your own fear stat, the DM will roll for your fear without your knowledge',\r\n    applyTo: 'fear',\r\n    amount: 1,\r\n    race: 'any',\r\n}\r\n\r\nconst Frail: Trait = {\r\n    name: 'frail',\r\n    cost: -10,\r\n    description: 'You are frail and easily damaged, -2 maximum hitpoints',\r\n    applyTo: 'life',\r\n    amount: -2,\r\n    race: 'any',\r\n}\r\n\r\nconst Resillient: Trait = {\r\n    name: 'resillient',\r\n    cost: 20,\r\n    description: 'You are able to withstand more punishment, +2 maximum hitpoints',\r\n    applyTo: 'life',\r\n    amount: 2,\r\n    race: 'any',\r\n}\r\n\r\nconst Reckless: Trait = {\r\n    name: 'reckless',\r\n    cost: -10,\r\n    description: 'You are reckless when using tools, items lose condition at double rate',\r\n    applyTo: '',\r\n    amount: 0,\r\n    race: 'any',\r\n}\r\n\r\nconst Gifted: Trait = {\r\n    name: 'gifted',\r\n    cost: 80,\r\n    description: 'you are naturally gifted and everything seems to come easier to you, gain +1 to your 4 lowest base stats, however your experience multiplier is reduced by 1 (min 1)',\r\n    applyTo: 'experienceMultiplier',\r\n    amount: -1,\r\n    race: 'any',\r\n}\r\n\r\nconst FastMetabolism: Trait = {\r\n    name: 'fast metabolism',\r\n    cost: 20,\r\n    description: 'You have a very high metabolism, you heal +1 life per day, eat 50% more, poison and drugs acts twice as fast and last half as long',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst DoubleHanded: Trait = {\r\n    name: 'double handed',\r\n    cost: 10,\r\n    description: 'you are proficient with both hands, can do any task with either hand',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst Phobia: Trait = {\r\n    name: 'phobia',\r\n    cost: -10,\r\n    description: 'pick one thing, your character has a phobia for that and is forced to make a fear roll when they see it',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst WealthyFamily: Trait = {\r\n    name: 'wealthy family',\r\n    cost: 30,\r\n    description: 'you come from a wealthy family, you start with an additional 60k credits and you are known in your home town, you have innate high society minimum mid success on savoir-faire',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst LightningReflexes: Trait = {\r\n    name: 'lightning reflexes',\r\n    cost: 20,\r\n    description: 'You are fast to react to danger, you add +3 to your sequence and +3 to rolls triggered by reaction',\r\n    amount: 3,\r\n    applyTo: 'sequence',\r\n    race: 'any',\r\n}\r\n\r\nconst Frugal: Trait = {\r\n    name: 'frugal',\r\n    cost: 10,\r\n    description: 'you are always vigilant trying to find the best prices, all purchases are 10% off (maxium 10k credits per day)',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst Durable: Trait = {\r\n    name: 'durable',\r\n    cost: 20,\r\n    description: 'you are durable and gain +1 damage absorbtion',\r\n    amount: 1,\r\n    applyTo: 'damageAbsorption',\r\n    race: 'any',\r\n}\r\n\r\nconst MentallyFlexible: Trait = {\r\n    name: 'mentally flexible',\r\n    cost: 30,\r\n    description: 'you are highly mentally flexible, you gain +1 to your experience multiplier',\r\n    amount: 1,\r\n    applyTo: 'experienceMultiplier',\r\n    race: 'any',\r\n}\r\n\r\nconst Stubborn: Trait = {\r\n    name: 'stubborn',\r\n    cost: -10,\r\n    description: 'you are stubborn and unlikely to change your ways, -1 to experience multiplier (min 1) and you are resistent to being convinced (+2 resist persuasion)',\r\n    amount: -1,\r\n    applyTo: 'experienceMultiplier',\r\n    race: 'any',\r\n}\r\n\r\nconst ForgetfulFace: Trait = {\r\n    name: 'forgetful face',\r\n    cost: -10,\r\n    description: 'people are less likely to remember your face or your name, you dont tend to stand out in a crowd. 50% chance that you wont get any reputation for your deeds',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst Blind: Trait = {\r\n    name: 'blind',\r\n    cost: -30,\r\n    description: 'your eyesight is so poor that you are legally blind, your perception counts as -5 for all visual rolls (where you need to see), 0 if you have cybernetic eyes, additionally if you move faster than base speed you risk running into things',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst Deaf: Trait = {\r\n    name: 'deaf',\r\n    cost: -20,\r\n    description: 'your hearing is so poor that you are legally deaf, your perception counts as -5 for all auditory rolls, 0 if you have cybernetic ears. You can speak using sign language',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst Mute: Trait = {\r\n    name: 'mute',\r\n    cost: -20,\r\n    description: 'you cant speak, you can only communicate in writing. All skills that involve speaking are impossible for you',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n}\r\n\r\nconst NaturalTalent: Trait = {\r\n    name: 'natural talent',\r\n    cost: 10,\r\n    description: 'pick one skill, you have +3 to that skill',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n};\r\n\r\nconst Conspiritorial: Trait = {\r\n    name: 'Conspiritorial',\r\n    cost: -10,\r\n    description: 'You tend to believe in conspiricies and often fall prey to magical thinking. Whenever you roll for general knowledge you suffer a -5, additionally evidence contrary to your beliefs do not cause you to change your beliefs.',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'any',\r\n};\r\n\r\nconst PersonOfAction: Trait = {\r\n    name: 'Person of action',\r\n    cost: 20,\r\n    description: 'You are a person of action, you gain +1 action points',\r\n    amount: 1,\r\n    applyTo: 'actionpoints',\r\n    race: 'any'\r\n};\r\n\r\nconst Flight: Trait = {\r\n    name: 'Flight',\r\n    cost: 40,\r\n    description: 'You were born with large arms and hollow bones. You have limited flight, while unencumbered and unexhausted you can maintain level flight for a number of meters equal to strength + athletics before you must touch ground, penalties to physical activities like life damage subtract. Only for nekovians',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'nekovian',\r\n};\r\n\r\nconst Blubber: Trait = {\r\n    name: 'Blubber',\r\n    cost: 10,\r\n    description: 'You were born in a extremely cold environment and have a layer of blubber under your skin that protects you from extreme cold but makes you vulnerable to heat and slows you down by 1 movement. You can withstand temperatures as cold as -60 Celsius without suffering any negative effects.',\r\n    amount: -1,\r\n    applyTo: 'speed',\r\n    race: 'nekovian',\r\n};\r\n\r\nconst Magnetoreception: Trait = {\r\n    name: 'Magnetoreception',\r\n    cost: 40,\r\n    description: 'You were born with latent magnetoreception allowing you to feel magnetic fields. You may use your perception to detect magnetic fields. Only Shambras',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'shambras',\r\n};\r\n\r\nconst HardShell: Trait = {\r\n    name: 'Hard Shell',\r\n    cost: 10,\r\n    description: 'Your shell is much harder than most shambras, damage absorbtion is increased from 1 to 2 while it is thick.',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'shambras'\r\n};\r\n\r\nconst Hyperredolexant: Trait = {\r\n    name: 'Hyperredolexant',\r\n    cost: 20,\r\n    description: 'When you enter redolex you feel a deeper rage than most others of your kin, your bonus to all metal activity is increased to 4. Only Merlions',\r\n    amount: 0,\r\n    applyTo: '',\r\n    race: 'merlion'\r\n};\r\n\r\nexport const GetTraits = (): Trait[] & IHooker[] => {\r\n    return [\r\n        Coward,\r\n        Brave,\r\n        FoolHardy,\r\n        Frail,\r\n        Resillient,\r\n        Reckless,\r\n        Gifted,\r\n        FastMetabolism,\r\n        DoubleHanded,\r\n        Phobia,\r\n        WealthyFamily,\r\n        LightningReflexes,\r\n        Frugal,\r\n        Durable,\r\n        MentallyFlexible,\r\n        Stubborn,\r\n        ForgetfulFace,\r\n        Blind,\r\n        Deaf,\r\n        Mute,\r\n        NaturalTalent,\r\n        Conspiritorial,\r\n        PersonOfAction,\r\n        Flight,\r\n        Magnetoreception,\r\n        HardShell,\r\n        Hyperredolexant,\r\n        Blubber\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n};","import { SkillName } from \"../general/Skills\";\r\nimport Item, { D, IDamageDice } from \"./Item\";\r\n\r\nexport type actionPointsUses = 1|2|3|4|5|6|7|8;\r\n\r\nexport interface IMeleeWeapon extends Item {\r\n    size: 'light' | 'medium' | 'heavy';\r\n    damage: IDamageDice;\r\n    hitbonus?: number;\r\n    armorpiercing?: number;\r\n    strengthRequirement: number;\r\n    actionPoints: actionPointsUses;\r\n}\r\n\r\nexport class MeleeWeapon implements IMeleeWeapon {\r\n    size: \"light\" | \"medium\" | \"heavy\";\r\n    damage: IDamageDice;\r\n    hitbonus?: number;\r\n    armorpiercing?: number;\r\n    weight: number;\r\n    value: number;\r\n    description?: string;\r\n    name: string;\r\n    strengthRequirement: number;\r\n    relatedSkill: SkillName = 'combat';\r\n    actionPoints: actionPointsUses;\r\n\r\n    constructor(name: string, weight: number, value: number, damage: IDamageDice, size: \"light\" | \"medium\" | \"heavy\", strengthRequirement: number, description: string | undefined, hitbonus: number | undefined, armorpiercing: number | undefined, actionPoints: actionPointsUses) {\r\n        this.size = size;\r\n        this.name = name;\r\n        this.weight = weight;\r\n        this.value = value;\r\n        this.damage = damage;\r\n        this.description = description;\r\n        this.hitbonus = hitbonus;\r\n        this.armorpiercing = armorpiercing;\r\n        this.strengthRequirement = strengthRequirement;\r\n        this.actionPoints = actionPoints;\r\n    }\r\n}\r\n\r\nconst MeleeWeapons: MeleeWeapon[] = [\r\n    { size: 'light', name: 'Batons/hammers/sticks', damage: D(1,4), weight: 500, value: 10, strengthRequirement: 2, relatedSkill: 'combat', actionPoints: 3 },\r\n    { size: 'light', name: 'Knife', damage: D(1,6), weight: 100, value: 15, description: 'always causes bleeding on damage', strengthRequirement: 1, relatedSkill: 'combat', actionPoints: 2 },\r\n    { size: 'medium', name: 'Machete', damage: D(1,8), hitbonus: 1, weight: 300, value: 100, description: 'always causes bleeding on damage. Requires humanoid arms', relatedSkill: 'combat', strengthRequirement: 3,  actionPoints: 3 },\r\n    { size: 'medium', name: 'Club', damage: D(1,6), weight: 1000, value: 0, strengthRequirement: 3, description: 'Big wooden club. Requires humanoid arms', relatedSkill: 'combat', actionPoints: 3 },\r\n    { size: 'medium', name: 'Short spear', damage: D(1,8), hitbonus: 1, armorpiercing: 1, weight: 500, value: 250, description: 'always causes bleeding on damage, +1 meter reach. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 3 },\r\n    { size: 'heavy', name: 'Longsword', damage: D(1,10), hitbonus: 1, armorpiercing: 1, weight: 800, value: 750, description: 'always causes bleeding on damage, +1 meter reach. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 4 },\r\n    { size: 'heavy', name: 'Greatsword', damage: D(2,6), hitbonus: 2, armorpiercing: 1, weight: 800, value: 750, description: 'always causes bleeding on damage, +1 meter reach. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 5 },\r\n    { size: 'heavy', name: 'Long spear', damage: D(1,10), hitbonus: 0, armorpiercing: 1, weight: 900, value: 500, description: 'always causes bleeding on damage, +2 meter reach. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 5 },\r\n    { size: 'heavy', name: 'Battleaxe', damage: D(1,12), hitbonus: 0, armorpiercing: 2, weight: 1500, value: 800, description: 'always causes bleeding on damage, +1 meter reach. Requires humanoid arms', strengthRequirement: 4, relatedSkill: 'combat', actionPoints: 5 },\r\n    { size: 'medium', name: 'Short bow', damage: D(1,6), hitbonus: -1, armorpiercing: 0, weight: 800, value: 900, description: 'Add +1 damage if strength is above 4, double multi-attack penalties. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 5 },\r\n    { size: 'medium', name: 'Long bow', damage: D(1,8), hitbonus: -2, armorpiercing: 1, weight: 900, value: 1200, description: 'Add +1 damage if strength is above 4, +2 if strength is above 8 (non-stacking), double multi-attack penalties. Requires humanoid arms', strengthRequirement: 4, relatedSkill: 'combat', actionPoints: 6 },\r\n    { size: 'medium', name: 'Compund bow', damage: D(1,10), armorpiercing: 1, weight: 700, value: 5000, description: 'Add +1 damage if strength is above 4, +2 if strength is above 8 (non-stacking), double multi-attack penalties. Requires humanoid arms', strengthRequirement: 3, relatedSkill: 'combat', actionPoints: 5 },\r\n    { size: 'medium', name: 'Cross bow', damage: D(1,8), armorpiercing: 2, weight: 1000, value: 1000, description: 'May use firearm skill in place of combat skill (only aimed shot), reloading is a 6 action points, can hold bolt for 4 hours', strengthRequirement: 2, relatedSkill: 'combat', actionPoints: 4 },\r\n    { size: 'medium', name: 'Advanced Cross bow', damage: D(1,12), armorpiercing: 3, weight: 900, value: 15000, description: 'May use firearm skill in place of combat skill (only aimed shot), reloading is a 6 action points, can hold bolt indefinitely', strengthRequirement: 2, relatedSkill: 'combat', actionPoints: 4 },\r\n];\r\n\r\nexport default MeleeWeapons;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { bigNumberSeparator, weightConverter } from \"../../utils/utilFunctions\";\r\nimport Firearms, { Ammo, AmmoInformation, AmmoModifications, AmmoTypesInformation, FireArm, FirearmModifications, IAmmoModification, IFirearmModification } from \"./Firearms\";\r\nimport { Condition, ICondition, IQuality, Quality, writeDamageDice } from \"./Item\";\r\n\r\nconst selectFirearm = (firearmName: string, setter: React.Dispatch<React.SetStateAction<FireArm | null>>) => {\r\n    if (firearmName === 'null') setter(null);\r\n    else {\r\n        let maybeFirearm = Firearms.find(f => f.name === firearmName);\r\n        if (maybeFirearm !== undefined) setter(maybeFirearm);\r\n    }\r\n};\r\n\r\ninterface IDisplayFirearm {\r\n    firearm: FireArm;\r\n    ammo: AmmoInformation;\r\n}\r\n\r\nconst ammoModGetter = (ammoMod: string): IAmmoModification => {\r\n    let maybeMod = AmmoModifications.find(am => am.name.toLocaleLowerCase() === ammoMod.toLocaleLowerCase());\r\n    if (maybeMod === undefined) throw new Error(`${ammoMod} missing!`);\r\n    return maybeMod;\r\n}\r\n\r\nconst addFirearmsModifications = (add: boolean,\r\n    mod: IFirearmModification,\r\n    current: IFirearmModification[],\r\n    setter: React.Dispatch<React.SetStateAction<IFirearmModification[]>>) => {\r\n    if (add) {\r\n        setter([...current, mod]);\r\n    }\r\n    else {\r\n        setter([...current.filter(fm => fm.name !== mod.name)]);\r\n    }\r\n};\r\n\r\n\r\n\r\nconst numberOrZero = (numb: number | undefined) => numb === undefined ? 0 : numb;\r\n\r\nconst DisplayFirearm: React.FC<IDisplayFirearm> = ({ firearm, ammo }) => {\r\n    const [ammoType, setAmmoType] = useState<string>(ammo.types[ammo.types.length - 1]);\r\n    const [selectedFirearmMods, setSelectedFirearmMods] = useState<IFirearmModification[]>([]);\r\n    const [quality, setQuality] = useState<IQuality>(Quality[3]);\r\n    const [condition, setCondition] = useState<ICondition>(Condition[0]);\r\n    \r\n    const ammoMod = ammoModGetter(ammoType);\r\n\r\n    firearm.firearmModification = selectedFirearmMods;\r\n    firearm.ammoModification = ammoMod;\r\n    firearm.quality = quality;\r\n    firearm.condition = condition;\r\n\r\n    const firearmModsCost = selectedFirearmMods.length === 0 ? 0 : selectedFirearmMods.map(sfm => sfm.cost).reduce((a, b) => a + b);\r\n    const firearmModsCostMultiplier = selectedFirearmMods.length === 0 ? 1 : selectedFirearmMods.map(sfm => sfm.costMultiplier).reduce((a, b) => a * b);\r\n\r\n    const firearmModsStrengthMod = selectedFirearmMods.length === 0 ? 0 : selectedFirearmMods.map(sfm => sfm.strengthMod || 0).reduce((a, b) => a + b);\r\n    const firearmModsDamageMod = selectedFirearmMods.length === 0 ? 0 : selectedFirearmMods.map(sfm => sfm.damageMod || 0).reduce((a, b) => a + b);\r\n    const firearmModsRangeMod = selectedFirearmMods.length === 0 ? 1 : selectedFirearmMods.map(sfm => sfm.rangeMod || 1).reduce((a, b) => a * b);\r\n    const firearmModsWeightMod = selectedFirearmMods.length === 0 ? 0 : selectedFirearmMods.map(sfm => sfm.weight || 0).reduce((a, b) => a + b);\r\n    const firearmModsWeightMultMod = selectedFirearmMods.length === 0 ? 1 : selectedFirearmMods.map(sfm => sfm.weightMultiplier || 1).reduce((a, b) => a * b);\r\n    const firearmModsAmmoMultMod = selectedFirearmMods.length === 0 ? 1 : selectedFirearmMods.map(sfm => sfm.ammoCapacityMod || 1).reduce((a, b) => a * b);\r\n\r\n    const ammoCost = (firearm.capacity * firearmModsAmmoMultMod) * ammo.cost * ammoMod.cost;\r\n\r\n    return (<table>\r\n        <thead>\r\n\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td style={{ width: '25%' }}>\r\n                    Name\r\n                </td>\r\n                <td style={{ width: '25%' }}>\r\n                    {firearm.name}\r\n                </td>\r\n                <td style={{ width: '25%' }} rowSpan={11}>\r\n                    {FirearmModifications.map(fm => {\r\n                        const isSelected = selectedFirearmMods.find(sfm => sfm.name === fm.name) !== undefined;\r\n                        return (<label className='shortLabel'>\r\n                            <input type='checkbox' onClick={() => addFirearmsModifications(!isSelected, fm, selectedFirearmMods, setSelectedFirearmMods)}\r\n                                checked={isSelected} /> {fm.name}\r\n                        </label>);\r\n                    })}\r\n                </td>\r\n                <td style={{ width: '25%' }} rowSpan={11}>\r\n\r\n                    <select onChange={(e) => setCondition(Condition[parseInt(e.target.value)])}>\r\n                        {Condition.map((c, i, a) => <option selected={c.effect === condition.effect} value={i} >{c.label}</option>)}\r\n                    </select>\r\n                    <br />\r\n                    <select onChange={(e) => setQuality(Quality[parseInt(e.target.value)])}>\r\n                        {Quality.map((q, i, a) => <option selected={q.effect === quality.effect} value={i} >{q.label}</option>)}\r\n                    </select>\r\n                    <br />\r\n                    <select onChange={(e) => setAmmoType(e.target.value)}>\r\n                        {ammo.types.map(a => <option selected={a === ammoType} value={a}>{a}</option>)}\r\n                    </select>\r\n                    <br />\r\n                    {ammoMod.description}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Hit bonus\r\n                </td>\r\n                <td>\r\n                    {numberOrZero(firearm.getHitBonus())}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Armor piercing\r\n                </td>\r\n                <td>\r\n                    {numberOrZero(firearm.getArmorPercing())}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Damage\r\n                </td>\r\n                <td>\r\n                    {writeDamageDice(firearm.damage, firearmModsDamageMod + numberOrZero(ammoMod.damageAdd) + quality.effect)}\r\n                    {ammoMod.damageMultiplier === undefined ? null : `x ${ammoMod.damageMultiplier}`}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Value\r\n                </td>\r\n                <td>\r\n                    {bigNumberSeparator((firearm.value + firearmModsCost) * firearmModsCostMultiplier * quality.valueModifier * condition.valueModifier)}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Weight\r\n                </td>\r\n                <td>\r\n                    {weightConverter((firearm.weight + firearmModsWeightMod) * firearmModsWeightMultMod)}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Strength requirement\r\n                </td>\r\n                <td>\r\n                    {firearm.strengthRequirement + firearmModsStrengthMod}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Maximum range\r\n                </td>\r\n                <td>\r\n                    {Math.floor(firearm.range * firearmModsRangeMod)}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Splash?\r\n                </td>\r\n                <td>\r\n                    {firearm.splashRange === undefined ? 'no splash' : `${firearm.splashRange} / ${firearm.lowDamageZone}`}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Caliber\r\n                </td>\r\n                <td>\r\n                    {firearm.ammo}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Capacity / Reload\r\n                </td>\r\n                <td>\r\n                    {firearm.capacity * firearmModsAmmoMultMod} / {firearm.reload}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Action points\r\n                </td>\r\n                <td>\r\n                    {firearm.fireCost}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Fire rate\r\n                </td>\r\n                <td>\r\n                    {firearm.rps !== undefined ? firearm.rps * 6 : 1} per round\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Clip cost / weight\r\n                </td>\r\n                <td>\r\n                    {bigNumberSeparator(ammoCost)} / {ammo.weight * firearm.capacity * firearmModsAmmoMultMod}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Classification & Fire action\r\n                </td>\r\n                <td>\r\n                    {firearm.fireArmClass} & {firearm.fireAction.join(', ')}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colSpan={4}>{firearm.description}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>);\r\n}\r\n\r\nconst getAmmoByName = (ammo: Ammo): AmmoInformation => {\r\n    let maybeAmmo = AmmoTypesInformation.find(a => a.ammo === ammo);\r\n    if (maybeAmmo === undefined) throw new Error('Missingammo');\r\n    return maybeAmmo;\r\n}\r\n\r\ninterface IFirearmCrafter {\r\n    onGetFirearm?: (firearm:FireArm) => void;\r\n}\r\n\r\nconst FirearmCrafter: React.FC<IFirearmCrafter> = ({ onGetFirearm }) => {\r\n    const [firearm, setFirearm] = useState<FireArm | null>(null);\r\n\r\n\r\n    return <div>\r\n        <h5>Firearm Crafter</h5>\r\n        <select onChange={(e) => selectFirearm(e.target.value, setFirearm)}>\r\n            <option value='null'>none</option>\r\n            {Firearms.map(f => <option value={f.name}>{f.name}</option>)}\r\n        </select>\r\n        {firearm !== null ? <DisplayFirearm ammo={getAmmoByName(firearm.ammo)} firearm={firearm} /> : null}\r\n        {(firearm !== null && onGetFirearm !== undefined) ? <button onClick={() => onGetFirearm(firearm)}>Done</button> : null}\r\n    </div>;\r\n}\r\n\r\n\r\nexport default FirearmCrafter;","import React, { useState } from \"react\";\r\nimport { bigNumberSeparator, weightConverter } from \"../../utils/utilFunctions\";\r\nimport { CharacterSize } from \"../Character\";\r\nimport { SkillName } from \"../general/Skills\";\r\nimport Section from \"../Section\";\r\nimport { ArmorPlate, armorPlates, BodySuit, bodySuits, IntegratedSystem, integratedSystems, PowerArmor, powerArmors } from \"./Armors\";\r\nimport Item, { ICondition, IQuality } from \"./Item\";\r\n\r\nconst getSizeMod = (size: CharacterSize) => {\r\n    switch (size) {\r\n        case 'minute': return .33;\r\n        case 'tiny': return 0.65;\r\n        case 'small': return 0.8;\r\n        case 'medium': return 1;\r\n        case 'large': return 1.25;\r\n        case 'huge': return 1.5;\r\n        case 'gigantic': return 3;\r\n        case 'colossal': return 5;\r\n        case 'titanic': return 10;\r\n        default: return 1;\r\n    }\r\n}\r\n\r\n\r\ninterface IArmorCrafterProps {\r\n    onClick?: (item: FullArmor) => void;\r\n}\r\n\r\nexport interface IFullArmor {\r\n    bodySuit?: BodySuit | undefined;\r\n    armorPlate?: ArmorPlate | undefined;\r\n    powerArmor?: PowerArmor | undefined;\r\n    integratedSystemsOnArmor: IntegratedSystem[];\r\n    size: CharacterSize;\r\n}\r\n\r\nexport class FullArmor implements IFullArmor, Item {\r\n    bodySuit?: BodySuit | undefined;\r\n    armorPlate?: ArmorPlate | undefined;\r\n    powerArmor?: PowerArmor | undefined;\r\n    integratedSystemsOnArmor: IntegratedSystem[];\r\n    size: CharacterSize;\r\n    weight: number;\r\n    value: number;\r\n    description?: string | undefined;\r\n    longDescription?: string | undefined;\r\n    name: string;\r\n    relatedSkill: SkillName;\r\n    condition?: ICondition | undefined;\r\n    quality?: IQuality | undefined;\r\n    type: string = 'armor';\r\n    constructor(data: IFullArmor) {\r\n        this.bodySuit = data.bodySuit;\r\n        this.armorPlate = data.armorPlate;\r\n        this.powerArmor = data.powerArmor;\r\n        this.integratedSystemsOnArmor = data.integratedSystemsOnArmor;\r\n        this.size = data.size;\r\n        this.weight = this.getWeight();\r\n        this.name = this.getName();\r\n        this.relatedSkill = 'combat';\r\n        this.value = this.getValue();\r\n    }\r\n    public getDamageAbsorbtion(): [number, number] {\r\n        const bodySuitDr = (this.bodySuit && this.bodySuit.damageAbsorbtion.damageReduction) || 0;\r\n        const armorPlateDr = (this.armorPlate && this.armorPlate.damageAbsorbtion.damageReduction) || 0;\r\n        const powerArmorDr = (this.powerArmor && this.powerArmor.damageAbsorbtion.damageReduction) || 0;\r\n\r\n        const bodySuitM = (this.bodySuit && this.bodySuit.damageAbsorbtion.minimumDamage) || 0;\r\n        const armorPlateM = (this.armorPlate && this.armorPlate.damageAbsorbtion.minimumDamage) || 0;\r\n        const powerArmorM = (this.powerArmor && this.powerArmor.damageAbsorbtion.minimumDamage) || 0;\r\n\r\n        const integrationValue = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor.map(i => i.damageAbsorbtion).reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return [bodySuitDr + armorPlateDr + powerArmorDr + integrationValue, Math.max(bodySuitM, armorPlateM, powerArmorM)];\r\n    }\r\n\r\n    public getWeight(): number {\r\n        const bodySuit = (this.bodySuit && this.bodySuit.weight) || 0;\r\n        const armorPlate = (this.armorPlate && this.armorPlate.weight) || 0;\r\n        const powerArmor = (this.powerArmor && this.powerArmor.weight) || 0;\r\n\r\n        const integrationValue = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor.map(i => i.weight).reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return (bodySuit + armorPlate + powerArmor + integrationValue) * getSizeMod(this.size);\r\n    }\r\n\r\n    public getValue(): number {\r\n        const bodySuit = (this.bodySuit && this.bodySuit.cost) || 0;\r\n        const armorPlate = (this.armorPlate && this.armorPlate.cost) || 0;\r\n        const powerArmor = (this.powerArmor && this.powerArmor.cost) || 0;\r\n\r\n        const integrationValue = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor.map(i => i.cost).reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return (bodySuit + armorPlate + powerArmor + integrationValue) * getSizeMod(this.size);\r\n    }\r\n\r\n    public getName(): string {\r\n        const bodySuit = this.bodySuit;\r\n        const armorPlate = this.armorPlate;\r\n        const powerArmor = this.powerArmor;\r\n        return `${bodySuit && bodySuit.name} ${armorPlate && armorPlate.name} ${powerArmor && powerArmor.name}`;\r\n    }\r\n\r\n    public getStrengthMod(): number {\r\n        const powerArmor = (this.powerArmor && this.powerArmor.strengthMod) || 0;\r\n\r\n        const integratedBonus = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor\r\n            .map(m => m.abilityModifiers.filter(am => am.ability === 'strength').map(am => am.modifier).reduce((a, b) => a + b + 0, 0))\r\n            .reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return powerArmor + integratedBonus;\r\n    }\r\n\r\n    public getActionPointMod(): number {\r\n        const bodySuit = (this.bodySuit && this.bodySuit.actionPointMod) || 0;\r\n        const armorPlate = (this.armorPlate && this.armorPlate.actionPointMod) || 0;\r\n        const powerArmor = (this.powerArmor && this.powerArmor.actionPointMod) || 0;\r\n\r\n        const integratedBonus = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor\r\n            .map(m => m.abilityModifiers.filter(am => am.ability === 'agility').map(am => am.modifier).reduce((a, b) => a + b, 0))\r\n            .reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return bodySuit + armorPlate + powerArmor + integratedBonus;\r\n    }\r\n\r\n    public getPerceptionMod(): number {\r\n        const powerArmor = (this.powerArmor && this.powerArmor.perceptionMod) || 0;\r\n\r\n        const integratedBonus = this.integratedSystemsOnArmor.length > 0 ? this.integratedSystemsOnArmor\r\n            .map(m => m.abilityModifiers.filter(am => am.ability === 'perception').map(am => am.modifier).reduce((a, b) => a + b, 0))\r\n            .reduce((a, b) => a + b, 0) : 0;\r\n\r\n        return powerArmor + integratedBonus;\r\n    }\r\n}\r\n\r\nconst ArmorCrafter: React.FC<IArmorCrafterProps> = ({ onClick }) => {\r\n    const [bodySuit, setBodySuit] = useState<BodySuit | undefined>(undefined);\r\n    const [armorPlate, setArmorPlate] = useState<ArmorPlate | undefined>(undefined);\r\n    const [powerArmor, setPowerArmor] = useState<PowerArmor | undefined>(undefined);\r\n    const [integratedSystemsOnArmor, setIntegratedSystemsOnArmor] = useState<IntegratedSystem[]>([]);\r\n    const [qualityMod, setQualityMod] = useState(0);\r\n    const [size, setSize] = useState<CharacterSize>('medium');\r\n    const [protectionAmount, setProtectionAmount] = useState(6);\r\n\r\n    const addOrRemoveIntegratedSystem = (add: boolean, item: IntegratedSystem) => {\r\n        if (add)\r\n            setIntegratedSystemsOnArmor([...integratedSystemsOnArmor, item]);\r\n        else\r\n            setIntegratedSystemsOnArmor(integratedSystemsOnArmor.filter(i => i.name !== item.name));\r\n    }\r\n\r\n    const theArmor = new FullArmor({\r\n        bodySuit: bodySuit,\r\n        armorPlate: armorPlate,\r\n        powerArmor: powerArmor,\r\n        integratedSystemsOnArmor: integratedSystemsOnArmor,\r\n        size: size,\r\n    });\r\n\r\n    const [damageReduction, damageMinimum] = theArmor.getDamageAbsorbtion();\r\n\r\n    return (<div>\r\n        <p>Customize an armor</p>\r\n        <select onChange={(e) => setBodySuit(bodySuits.find(f => f.name === e.target.value))}>\r\n            <option selected={null === bodySuit}>Bodysuit armor/none</option>\r\n            {bodySuits.map(bs => <option value={bs.name} selected={bodySuit !== undefined && bs.name === bodySuit.name}>\r\n                {bs.name}\r\n            </option>)}\r\n        </select>\r\n        <select onChange={(e) => setArmorPlate(armorPlates.find(f => f.name === e.target.value))}>\r\n            <option selected={null === armorPlate}>Armor plate/none</option>\r\n            {armorPlates.map(ap => <option value={ap.name} selected={armorPlate !== undefined && ap.name === armorPlate.name}>\r\n                {ap.name}\r\n            </option>)}\r\n        </select>\r\n        <select onChange={(e) => setPowerArmor(powerArmors.find(f => f.name === e.target.value))}>\r\n            <option selected={null === powerArmor}>Power armor/none</option>\r\n            {powerArmors.map(pa => <option value={pa.name} selected={powerArmor !== undefined && pa.name === powerArmor.name}>\r\n                {pa.name}\r\n            </option>)}\r\n        </select>\r\n        <Section title='Integrated Systems'>\r\n            {integratedSystems.map(i => <label>\r\n                <input type='checkbox' checked={integratedSystemsOnArmor.find(is => is.name === i.name) !== undefined} onChange={(e) => addOrRemoveIntegratedSystem(e.target.checked, i)} /> {i.name}\r\n            </label>)}\r\n        </Section>\r\n        <br />\r\n        <select onChange={(e) => setQualityMod(parseInt(e.target.value))}>\r\n            <option value='0' selected={qualityMod === 0}>Pristine/intact/Normal</option>\r\n            <option value='-1' selected={qualityMod === -1}>Used</option>\r\n            <option value='-2' selected={qualityMod === -2}>Worn</option>\r\n            <option value='-3' selected={qualityMod === -3}>Damaged</option>\r\n            <option value='-4' selected={qualityMod === -4}>Broken</option>\r\n        </select>\r\n\r\n        <select onChange={(e) => setSize(e.target.value as CharacterSize)}>\r\n            <option selected={size === 'tiny'} value='tiny'>Tiny</option>\r\n            <option selected={size === 'small'} value='small'>Small</option>\r\n            <option selected={size === 'medium'} value='medium'>Medium</option>\r\n            <option selected={size === 'large'} value='large'>Large</option>\r\n            <option selected={size === 'huge'} value='huge'>Huge</option>\r\n        </select>\r\n\r\n        <select onChange={(e) => setProtectionAmount(parseInt(e.target.value))}>\r\n            <option selected={protectionAmount === 6} value='6'>Full</option>\r\n            <option selected={protectionAmount === 5} value='5'>Vast</option>\r\n            <option selected={protectionAmount === 4} value='4'>Major</option>\r\n            <option selected={protectionAmount === 3} value='3'>Half</option>\r\n            <option selected={protectionAmount === 2} value='2'>Small</option>\r\n            <option selected={protectionAmount === 1} value='1'>Minor</option>\r\n        </select>\r\n        <div className='divcol2'>\r\n            <div>\r\n                <b>Damage Absorbtion:</b> {damageReduction}/{damageMinimum}<br />\r\n                <b>Cost:</b> {bigNumberSeparator(theArmor.getValue())} credits <br />\r\n                <b>Weight:</b> {weightConverter(theArmor.getWeight() * 1000)}\r\n            </div>\r\n            <div>\r\n                <b>Action point mod</b>: {theArmor.getActionPointMod()}<br />\r\n                <b>Strength mod</b>: {theArmor.getStrengthMod()}<br />\r\n                <b>Perception mod</b>: {theArmor.getPerceptionMod()}\r\n            </div>\r\n        </div>\r\n        {onClick && <button onClick={() => onClick(theArmor)}>Ok</button>}\r\n    </div>);\r\n}\r\n\r\nexport default ArmorCrafter;","import { IHooker } from '../Character';\r\n\r\nexport interface Perk extends IHooker {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    cost(): number;\r\n    description: string;\r\n    results?: string[]\r\n}\r\n\r\ninterface IPerk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    description: string;\r\n    results?: string[]\r\n}\r\nconst def: IHooker = {\r\n    amount: 0,\r\n    applyTo: ''\r\n};\r\nexport class PerkTemplate implements Perk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    description: string;\r\n    results?: string[]\r\n    \r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n    constructor(data: IPerk, hook: IHooker = def) {\r\n        this.name = data.name;\r\n        this.skill = data.skill;\r\n        this.level = data.level;\r\n        this.description = data.description;\r\n        this.applyTo = hook.applyTo;\r\n        this.amount = hook.amount;\r\n        this.results = data.results;\r\n    }\r\n}","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Deflection = new PerkTemplate({\r\n    name: 'deflection',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 to all blocking rolls and damage reduced to 1/3rd (from 1/2nd) on successful blocks'\r\n}, {\r\n    applyTo: 'block',\r\n    amount: 1\r\n});\r\n\r\nconst LightWeaponSpecialization = new PerkTemplate({\r\n    name: 'light weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You have specialized training in light melee weapons',\r\n    results: [\r\n        'add +1 damage with light melee weapons',\r\n        'add +2 to hit with light melee weapons',\r\n        'first attack with light melee weapon uses 1 less action point'\r\n    ]\r\n}, {\r\n    applyTo: 'lightmelee',\r\n    amount: 1\r\n});\r\n\r\nconst LightWeaponsMaster = new PerkTemplate({\r\n    name: 'light weapon master',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'You have mastered light melee weapons and gain additional benefits. Requires Light weapon specialization',\r\n    results: [\r\n        'once per turn when you hit a target with a light melee weapon you may add 1d6 damage',\r\n        'attacks beyond the first with a light melee weapon use 1 less action point'\r\n    ]\r\n});\r\n\r\nconst MediumWeaponSpecialization = new PerkTemplate({\r\n    name: 'medium weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You have specialized training in medium melee weapons',\r\n    results: [\r\n        'add +1 to hit with medium melee weapons',\r\n        'add +2 to damage with medium weapons',\r\n        'first attack with medium melee weapon uses 1 less action point'\r\n    ]\r\n}, {\r\n    applyTo: 'mediummelee',\r\n    amount: 1\r\n});\r\n\r\nconst MediumWeaponMaster = new PerkTemplate({\r\n    name: 'medium weapon master',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'You have mastered medium weapons. Requires Light weapon specialization',\r\n    results: [\r\n        'first hit on each turn with a medium weapon adds +1d6 damage',\r\n        'following hits add +1d4 damage'\r\n    ]\r\n});\r\n\r\nconst HeavyWeaponSpecialization = new PerkTemplate({\r\n    name: 'heavy weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'you have specialized large melee weapons.',\r\n    results: [\r\n        'you add +3 damage with large melee weapons'\r\n    ]\r\n}, {\r\n    applyTo: 'largemelee',\r\n    amount: 1\r\n});\r\n\r\nconst HeavyWeaponMaster = new PerkTemplate({\r\n    name: 'heavy weapon master',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'You have mastered heavy weapons, when you make an attack with a large melee weapon you can spend extra action points to gain additional benefit, for each 1. Requires Heavy weapon specialization',\r\n    results: [\r\n        'add +2 to hit',\r\n        'add +1 to damage',\r\n        'if you spend 2 add knockback (1 meter) or knockdown (prone) (target rolls strength + 2d10 vs damage)',\r\n        'if you spend 4, disorient target, target rolls endurance + 2d10 vs damage or lose 1d4 action points on their next turn'\r\n    ]\r\n});\r\n\r\nconst MartialArts = new PerkTemplate({\r\n    name: 'martial arts',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You have trained martial arts in unarmed combat and gain several benefits, not compatible with barbarian or any perk that has barbarian as a prerequisite',\r\n    results: [\r\n        'add +2 to hit with unarmed attacks',\r\n        'punches deal 1d4 + strength / 4 damage',\r\n        'kicks deal 1d6 + strength / 4 damage',\r\n        'the first unarmed or natural attack use one less action point'\r\n    ]\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 1\r\n});\r\n\r\nconst MartialArtsExpert = new PerkTemplate({\r\n    name: 'martial arts expert',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'You have advanced your martial arts, not compatible with barbarian or any perk that has barbarian as a prerequisite. Requires martial arts',\r\n    results: [\r\n        'add an additional +2 to hit with all unarmed attacks',\r\n        'punches deal 1d6 + strength / 3 damage',\r\n        'kicks deal 1d8 + strength / 3 damage',\r\n        'the second unarmed or natural attack use one less action point'\r\n    ]\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 2\r\n});\r\n\r\nconst MartialArtsMaster = new PerkTemplate({\r\n    name: 'martial arts master',\r\n    skill: 'combat',\r\n    level: 3,\r\n    description: 'gain +6 to hit with all unarmed attacks and they now deal 1d8 + strength / 3 damage. (not compatible with natural attacks or barbarian).  Requires martial art expert',\r\n    results: [\r\n        'add an additional +2 to hit with all unarmed attacks',\r\n        'punches deal 1d8 + strength / 3 damage',\r\n        'kicks kicks deal 1d8 + strength / 2 damage',\r\n        'any unarmed or natural attack beyond the second use one less action point'\r\n    ]\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 3\r\n});\r\n\r\nconst Disarm = new PerkTemplate({\r\n    name: 'disarm',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You may as an unarmed attack remove someones weapon from their hand, if you succeed by 10 or more you may keep it in your hand'\r\n});\r\n\r\nconst DualWeaponFighter = new PerkTemplate({\r\n    name: 'dual weapon fighter',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'When you use two weapons strength requirement increases are reduced by half, your off-hand gains full agility and half skill.'\r\n});\r\n\r\nconst DualWeaponMaster = new PerkTemplate({\r\n    name: 'dual weapon master',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'When you use two weapons strength requirement increases are ignored. Both hands gain full skill and agility bonus. Requires dual weapon fighter',\r\n});\r\n\r\nconst Barbarian = new PerkTemplate({\r\n    name: 'barbarian',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You are a brutal warrior, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block. You also gain +3 to your endurance roll to stay awake when critical'\r\n});\r\n\r\nconst Berzerker = new PerkTemplate({\r\n    name: 'berzerker',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'You are a savage warrior, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block. You also gain +3 to your endurance roll to stay awake when critical. Requires barbarian'\r\n});\r\n\r\nconst Beast = new PerkTemplate({\r\n    name: 'beast',\r\n    skill: 'combat',\r\n    level: 3,\r\n    description: 'You cause absolute wreckage, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block. You also gain +3 to your endurance roll to stay awake when critical. Requires berzerker.'\r\n});\r\n\r\nconst PreciseAttacker = new PerkTemplate({\r\n    name: 'precise attacker',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You add +2 to all attacks when you roll combat, instead of adding +1 damage per 10 points above you instead add +1 per 5 points above',\r\n}, {\r\n    amount: 2,\r\n    applyTo: 'combatHitBonus'\r\n});\r\n\r\nconst Wrestler = new PerkTemplate({\r\n    name: 'Wrestler',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You are adept at wrestling and grappling. You add +3 to your combat roll to grapple, wrestle, shove or disarm a target and a +3 to athletics or acrobatics on contested rolls for grab, shove or disarm'\r\n});\r\n\r\n\r\nexport const CombatPerks = [Deflection, LightWeaponSpecialization, LightWeaponsMaster, MediumWeaponSpecialization, MediumWeaponMaster, HeavyWeaponSpecialization, HeavyWeaponMaster,\r\n    MartialArts, MartialArtsExpert, MartialArtsMaster, Disarm, DualWeaponFighter, DualWeaponMaster, PreciseAttacker, Wrestler,\r\n    Barbarian, Berzerker, Beast];","import { PerkTemplate } from \"../general/Perks\";\r\nconst skill = 'firearms';\r\nconst HandGunSpecialization = new PerkTemplate({\r\n    name: 'hand gun specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with hand guns once per turn.'\r\n}, {\r\n    applyTo: 'handgun',\r\n    amount: 3\r\n});\r\n\r\nconst HandGunExpert = new PerkTemplate({\r\n    name: 'hand gun expert',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Requires hand gun specialization. Add +1d6 damage when using a handgun once per turn. Must be declared before rolling damage.',\r\n});\r\n\r\nconst HandGunMaster = new PerkTemplate({\r\n    name: 'hand gun master',\r\n    skill: skill,\r\n    level: 3,\r\n    description: 'Requires hand gun expert. You have +4 to hit with hand guns.'\r\n});\r\n\r\nconst RifleSpecialization = new PerkTemplate({\r\n    name: 'rifle specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with rifles once per turn.'\r\n}, {\r\n    applyTo: 'rifle',\r\n    amount: 3\r\n});\r\n\r\nconst RifleExpert = new PerkTemplate({\r\n    name: 'rifle expert',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Requires rifle specialization. Add +1d6 damage when using a rifle once per turn. Must be declared before rolling damage.',\r\n});\r\n\r\nconst MachineGunSpecialization = new PerkTemplate({\r\n    name: 'machine gun specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with machine guns once per turn'\r\n}, {\r\n    applyTo: 'machinegun',\r\n    amount: 3\r\n});\r\n\r\nconst MachineGunExpert = new PerkTemplate({\r\n    name: 'machien gun expert',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Requires machine gun specialization. Add +1d6 damage when using a machine gun once per turn. Must be declared before rolling damage.',\r\n});\r\n\r\nconst RocketLaunchersSpecialization = new PerkTemplate({\r\n    name: 'rocket launcher specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with rocket launchers, grenade launchers and all guns that fire explosives once per turn'\r\n}, {\r\n    applyTo: 'rocketlauncher',\r\n    amount: 3\r\n});\r\n\r\nconst LaserSpecialization = new PerkTemplate({\r\n    name: 'laser specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with laser weapons once per turn.'\r\n}, {\r\n    applyTo: 'lasers',\r\n    amount: 3\r\n});\r\n\r\nconst LaserExpert = new PerkTemplate({\r\n    name: 'laser expert',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Requires laser specialization. Add +1d6 damage when using a laser once per turn. Must be declared before rolling damage.',\r\n});\r\n\r\nconst PlasmaSpecialization = new PerkTemplate({\r\n    name: 'plasma specialization',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'use 1 less action point with plasma weapons once per turn'\r\n}, {\r\n    applyTo: 'plasma',\r\n    amount: 3\r\n});\r\n\r\nconst PlasmaExpert = new PerkTemplate({\r\n    name: 'plasma expert',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Requires plasma specialization. Add +1d6 damage when using a plasma gun once per turn. Must be declared before rolling damage.',\r\n});\r\n\r\nconst Sniper = new PerkTemplate({\r\n    name: 'sniper',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nconst Marksman = new PerkTemplate({\r\n    name: 'marksman',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nconst DeadEye = new PerkTemplate({\r\n    name: 'deadeye',\r\n    skill: skill,\r\n    level: 3,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nconst DeadlyShot = new PerkTemplate({\r\n    name: 'deadly shot',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'you are particularly deadly, add +1d6 damage when making a snipe shot. Requires Sniper perk'\r\n});\r\n\r\nconst AnnihilatingShot = new PerkTemplate({\r\n    name: 'annihilating shot',\r\n    skill: skill,\r\n    level: 3,\r\n    description: 'you are particularly deadly, add +1d6 damage when making a snipe shot. Requires DeadlyShot perk '\r\n});\r\n\r\n\r\nconst FastShooter = new PerkTemplate({\r\n    name: 'fast shooter',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'you may use burst fire mode on semi-automatic firearms'\r\n});\r\n\r\nconst Suppressor = new PerkTemplate({\r\n    name: 'suppressor',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'when you use oppressive fire on a target you can lock them down. They take -5 to all non-defensive rolls even if they dont get hit.'\r\n});\r\n\r\nconst RapidReload = new PerkTemplate({\r\n    name: 'rapid reload',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Reloading a firearm uses 2 less action points, to a minimum of 1.'\r\n});\r\n\r\nconst HeavyHandle = new PerkTemplate({\r\n    name: 'heavy handle',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'your strength counts as +4 higher for the purposes of meeting strength requirements on firearms'\r\n});\r\n\r\nconst StraferShooter = new PerkTemplate({\r\n    name: 'strafer shooter',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Using firearms no longer interrupts move action.',\r\n});\r\n\r\nconst RapidBoltAction = new PerkTemplate({\r\n    name: 'Rapid Bolt Action',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'If you use a bolt action firearm you use 1 less action point once per turn.',\r\n});\r\n\r\nexport const FirearmsPerks = [HandGunSpecialization, HandGunExpert, HandGunMaster, RifleSpecialization, RifleExpert, MachineGunSpecialization, MachineGunExpert, RocketLaunchersSpecialization,\r\n    LaserSpecialization, LaserExpert, PlasmaSpecialization, PlasmaExpert, Sniper, Marksman, DeadEye, Suppressor, RapidReload, StraferShooter, RapidBoltAction, HeavyHandle, FastShooter, DeadlyShot, AnnihilatingShot];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst QualifiedForCar = new PerkTemplate({\r\n    name: 'car qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all car driving rolls, is qualified to drive car'\r\n}, {\r\n    applyTo: 'drive car',\r\n    amount: 6\r\n});\r\n\r\nconst QualifiedForBoat = new PerkTemplate({\r\n    name: 'boat qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all boat sailing rolls, is qualified to drive boat no larger than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive boat',\r\n    amount: 6\r\n});\r\n\r\nconst QualifiedForShip = new PerkTemplate({\r\n    name: 'ship qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all ship sailing rolls, is qualified to drive ship no smaller than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive ship',\r\n    amount: 9\r\n});\r\n\r\nconst QualifiedForSubmarine = new PerkTemplate({\r\n    name: 'submarine qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +12 to all submarine sailing rolls, is qualified to drive a submarine'\r\n}, {\r\n    applyTo: 'drive submarine',\r\n    amount: 12\r\n});\r\n\r\nconst QualifiedForAirplane = new PerkTemplate({\r\n    name: 'airplane qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all airplane piloting rolls, is qualified to drive an airplane'\r\n}, {\r\n    applyTo: 'pilot airplane',\r\n    amount: 9\r\n});\r\n\r\nconst QualifiedForSpaceship = new PerkTemplate({\r\n    name: 'spaceship qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all spaceship piloting rolls, is qualified to pilot a spaceship'\r\n}, {\r\n    applyTo: 'pilot spaceship',\r\n    amount: 9\r\n});\r\n\r\nconst QualifiedForFTL = new PerkTemplate({\r\n    name: 'FTL qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all FTL spaceship piloting rolls, is qualified to engage hyperdrive'\r\n}, {\r\n    applyTo: 'pilot FTL',\r\n    amount: 9\r\n});\r\n\r\nexport const PilotPerks = [QualifiedForAirplane, QualifiedForBoat, QualifiedForCar, QualifiedForFTL, QualifiedForShip, QualifiedForSpaceship, QualifiedForSubmarine];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Forensics = new PerkTemplate({\r\n    name: 'forensics',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'You know how to better investigate a crime scene, you gain +3 to investigation, additionally you never find bad clues'\r\n}, {\r\n    applyTo: 'crimescene',\r\n    amount: 3\r\n});\r\n\r\nconst Enigmas = new PerkTemplate({\r\n    name: 'enigmas',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'Mysteries, riddles, codes, clues- Your character can analyze them with +3 to investigation'\r\n}, {\r\n    applyTo: 'enigma',\r\n    amount: 3\r\n});\r\n\r\nconst Search = new PerkTemplate({\r\n    name: 'search',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'When you try to find hidden objects you gain +3 to your roll and you may always try again'\r\n}, {\r\n    applyTo: 'search',\r\n    amount: 3\r\n});\r\n\r\nexport const InvestigationPerks = [Forensics, Enigmas, Search];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst skill = 'intimidation';\r\n\r\nconst Interrogator = new PerkTemplate({\r\n    name: 'Interrogator',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'When you interrogate someone you choose whether they take mental health damage. If they do they take double when lying.'\r\n}, {\r\n    applyTo: 'interrogation',\r\n    amount: 3\r\n});\r\n\r\nconst Frighten = new PerkTemplate({\r\n    name: 'Frighten',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'When you frighten someone they take 1 extra mental health damage if they fight you. Additionally the enemies get only half bonus from outnumbering your team. Frighten range increases to 50 meters.'\r\n}, {\r\n    applyTo: 'frighten',\r\n    amount: 0\r\n});\r\n\r\nconst Dominator = new PerkTemplate({\r\n    name: 'Dominator',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Targets that choose to fight must first make an active contest roll (2d10 + will + intimidation) otherwise they must comply.'\r\n});\r\n\r\nconst Spook = new PerkTemplate({\r\n    name: 'Spook',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your story is so scary that it prevents mental health recovery for 1d6 days.'\r\n}, {\r\n    applyTo: 'spook',\r\n    amount: 3\r\n});\r\n\r\nconst IronWill = new PerkTemplate({\r\n    name: 'Iron Will',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Whenever you resist an intimidation you add +3 to your result, additionally whenever you take mental health damage you take 1 less (minimum one)'\r\n});\r\n\r\nexport const IntimidationPerks = [Interrogator, Frighten, Dominator, Spook, IronWill];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst SlightOfHand = new PerkTemplate({\r\n    name: 'slight of hand',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all pickpocket rolls, additionally you can steal any sized item at penalty'\r\n}, {\r\n    applyTo: 'slightofhand',\r\n    amount: 3\r\n});\r\n\r\nconst LockPick = new PerkTemplate({\r\n    name: 'lockpick',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character is well able to pick locks, +3 to all lockpicking rolls, additionally the first failed attempt never breaks a lock'\r\n}, {\r\n    applyTo: 'lockpicking',\r\n    amount: 3\r\n});\r\n\r\nconst HideObject = new PerkTemplate({\r\n    name: 'hide object',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character is good at finding spots to hide objects, +5 to make object hidden'\r\n}, {\r\n    applyTo: 'hide object',\r\n    amount: 5\r\n});\r\n\r\nexport const LarcenyPerks = [SlightOfHand, LockPick, HideObject];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Shadow = new PerkTemplate({\r\n    name: 'shadow',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character gains +3 to stealth rolls when following someone while remaining hidden'\r\n}, {\r\n    applyTo: 'shadow',\r\n    amount: 3\r\n});\r\n\r\nconst Camouflage = new PerkTemplate({\r\n    name: 'camouflage',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is able to use their surroundings to hide in plain sight, +3 to stealth while hiding'\r\n}, {\r\n    applyTo: 'camouflage',\r\n    amount: 3\r\n});\r\n\r\nconst Detection = new PerkTemplate({\r\n    name: 'detection',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is harder to hide from, you gain +3 vs stealth'\r\n}, {\r\n    applyTo: 'detection',\r\n    amount: 3\r\n});\r\n\r\nconst SixthSense = new PerkTemplate({\r\n    name: 'sixth sense',\r\n    skill: 'stealth',\r\n    level: 2,\r\n    description: 'You gain +3 vs stealth and automatically use your second defense value when attacked out of combat while you are awake and nothing prevents your movement.'\r\n}, {\r\n    applyTo: 'detection',\r\n    amount: 3\r\n});\r\n\r\nconst SneakAttack = new PerkTemplate({\r\n    name: 'sneak attack',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'you gain +2 to your sequence and +2 damage on one attack (both combat and firearms) against anyone who is limited to passive defense'\r\n}, {\r\n    applyTo: 'sequence',\r\n    amount: 2\r\n});\r\n\r\nconst Assassination = new PerkTemplate({\r\n    name: 'assassination',\r\n    skill: 'stealth',\r\n    level: 2,\r\n    description: 'you gain +1d6 damage on one attack (both combat and firearms) on anyone who is limited to base defense. Requires Sneak Attack'\r\n}, {\r\n    applyTo: '_',\r\n    amount: 0\r\n});\r\n\r\nconst CriticalHit = new PerkTemplate({\r\n    name: 'critical hit',\r\n    skill: 'stealth',\r\n    level: 3,\r\n    description: 'On the first turn of combat, you add +1d6 damage on one attack (both combat and firearms) on anyone who has not had their turn yet. Requires Assassination'\r\n}, {\r\n    applyTo: '_',\r\n    amount: 0\r\n});\r\n\r\nconst KillingBlow = new PerkTemplate({\r\n    name: 'killing blow',\r\n    skill: 'stealth',\r\n    level: 4,\r\n    description: 'When you deal damage with firearms or combat against someone you are hidden from you can add +1d6 damage. Requires Ciritcal Hit'\r\n}, {\r\n    applyTo: '_',\r\n    amount: 0\r\n});\r\n\r\nexport const StealthPerks = [Shadow, Camouflage, Detection, SixthSense, SneakAttack, Assassination, CriticalHit, KillingBlow];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst HunterGatherer = new PerkTemplate({\r\n    name: 'Hunter gatherer',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'Your character is better at foraging for food, gain +5 to foraging rolls, you only take half penalties to unfamiliar biome and harsh biome'\r\n}, {\r\n    applyTo: 'forage',\r\n    amount: 5\r\n});\r\n\r\nconst ShelterBuilder = new PerkTemplate({\r\n    name: 'shelter builder',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'your character can build shelters that offer protection against exposure, +5 to build shelter roll and only suffer half penalty for building shelter for multiple people. Your shelters require only 10 minutes of maintenance'\r\n}, {\r\n    applyTo: 'shelter',\r\n    amount: 5\r\n});\r\n\r\nconst HardenedSurvivalist = new PerkTemplate({\r\n    name: 'hardened survivalist',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'You are resillient to the environment and ignore two factors that reduce sleep quality, when you sleep in a shelter it counts as 1 higher quality for you. You gain 1 maximum mental health.'\r\n},\r\n{\r\n    applyTo: 'mentalHealth',\r\n    amount: 1\r\n});\r\n\r\nexport const SurvivalPerks = [HunterGatherer, ShelterBuilder, HardenedSurvivalist];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Hacking = new PerkTemplate({\r\n    name: 'hacking',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can hack into computer systems, gain +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 5\r\n});\r\n\r\nconst AdvancedHacking = new PerkTemplate({\r\n    name: 'advanced hacking',\r\n    skill: 'computer',\r\n    level: 2,\r\n    description: 'Your character is an advanced hacker, gain extra +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 5\r\n});\r\n\r\nconst Programmer = new PerkTemplate({\r\n    name: 'programmer',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can write software, gain +3 to craft software rolls, crafting software time is reduced to 50%'\r\n}, {\r\n    applyTo: 'craft software',\r\n    amount: 3\r\n});\r\n\r\nconst SeniorDeveloper = new PerkTemplate({\r\n    name: 'Senior Developer',\r\n    skill: 'computer',\r\n    level: 2,\r\n    description: 'Your character is a senior developer, you gain +3 to craft software and crafting software time is reduced to 33%'\r\n}, {\r\n    applyTo: 'craft software',\r\n    amount: 3\r\n});\r\n\r\n\r\nexport const ComputerPerks = [Hacking, AdvancedHacking, Programmer, SeniorDeveloper];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Healer = new PerkTemplate({\r\n    name: 'healer',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character is an expert at cleaning wounds and applying bandages, gains +3 to first aid rolls and heal +1 life when successfully stopping bleeding, assisted healing or performing surgery.'\r\n}, {\r\n    applyTo: 'healing',\r\n    amount: 3\r\n});\r\n\r\nconst MedicineExpert = new PerkTemplate({\r\n    name: 'medicine expert',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character knows which medicines are best for which situation and how to dose them, +3 to all drug and medicines related rolls, immediately heal +1 life when applying stempack once per day per patient.'\r\n}, {\r\n    applyTo: 'medicines',\r\n    amount: 3\r\n});\r\n\r\nconst Surgeon = new PerkTemplate({\r\n    name: 'surgeon',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your gain +3 when performing surgeries and failed surgeries deal half damage, successful surgeries immediately heal +1 life'\r\n}, {\r\n    applyTo: 'suregon',\r\n    amount: 3\r\n});\r\n\r\nconst Diagnostician = new PerkTemplate({\r\n    name: 'diagnostician',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'You have much experience diagnosing patients, you gain a +3 to your diagnosis rolls, additionally if you succeed the next following surgery or administer medicine rolls gain +2 if you are involved.',\r\n});\r\n\r\nconst Psychiatrist = new PerkTemplate({\r\n    name: 'psychiatrist',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character can perform psychiatric diagnostics and treatment, gain +3 to psychotherapy'\r\n}, {\r\n    applyTo: 'psychiatry',\r\n    amount: 3\r\n});\r\n\r\nconst CrossSpeciesHealer = new PerkTemplate({\r\n    name: 'cross species healer',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'You have familiarized yourself with one species outside your own, pick one species, that species no longer \"different species\" penalty to medicine checks',\r\n});\r\n\r\nconst SurgicalStrike = new PerkTemplate({\r\n    name: 'Surgical Strike',\r\n    skill: 'medicine',\r\n    level: 2,\r\n    description: 'You know how to use your knowledge of anatomy with deadly precision. If you hit someone using a firearm (aim or snipe only) or a combat weapon and exceed their defense by 10 points you can add +1d6 damage',\r\n});\r\n\r\nexport const MedicinePerks = [Healer, MedicineExpert, Surgeon, Psychiatrist, CrossSpeciesHealer, Diagnostician, SurgicalStrike];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Mentalist = new PerkTemplate({\r\n    name: 'mentalist',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'You are highly skilled at reading the facial expressions and body language of a person',\r\n    results: [\r\n        'You can attempt to understand someone just by looking at with a glance',\r\n        'You can disguise your intentions against non-mentalists, giving false readings'\r\n    ]\r\n});\r\n\r\nconst EmpathicListener = new PerkTemplate({\r\n    name: 'empathic listener',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'You are easy to talk to and listen well to others. People are more likely to trust you and when you speak to someone you always gain some true information even if the target is being deliberately secretive.',\r\n});\r\n\r\nconst LieDetector = new PerkTemplate({\r\n    name: 'Lie detector',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'Your character is harder to lie to and can pick up on small signs that someone is not truthful, you gain +5 against subtrefuge'\r\n});\r\n\r\nconst ExpertTeamwork = new PerkTemplate({\r\n    name: 'expert teamwork',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'When you and up to 5 other work together everyone benefits from the highest skill rank from the team. Whether only one or all are actually doing the task, they are all occupied for the duration of the task.'\r\n});\r\n\r\nconst CounterIntimidation = new PerkTemplate({\r\n    name: 'counter intimidation',\r\n    skill: 'empathy',\r\n    level: 2,\r\n    description: 'You may substitute your empathy skill for intimidation to resist intimidation, additionally if you successfully defend against interrogation with 5 points or more you can strike fear into the interrogator, causing them to take 1d6 mental health damage and be frightened for as many minutes as the damage taken.',\r\n});\r\n\r\nexport const EmpathyPerks = [Mentalist, LieDetector, EmpathicListener, ExpertTeamwork, CounterIntimidation];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst HideEmotion = new PerkTemplate({\r\n    name: 'hide emotion',\r\n    skill: 'subterfuge',\r\n    level: 1,\r\n    description: 'Your character is harder to read than most, gain +5 vs having your personality or motives detected'\r\n}, {\r\n    applyTo: 'emotions',\r\n    amount: 5\r\n});\r\n\r\nconst Deception = new PerkTemplate({\r\n    name: 'deception',\r\n    skill: 'subterfuge',\r\n    level: 1,\r\n    description: 'Your character is a skilled liar, gain +4 vs having your lies spotted'\r\n}, {\r\n    applyTo: 'lies',\r\n    amount: 4\r\n});\r\n\r\nexport const SubtreFugePerks = [HideEmotion, Deception];","import { PerkTemplate } from \"../general/Perks\";\r\nconst skill = 'athletics';\r\n\r\nconst Climber = new PerkTemplate({\r\n    name: 'climber',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at climing',\r\n    results: [\r\n        'when you climb you move at half rather than quarter speed',\r\n        'when climbing you may use both hands for your action'\r\n    ]\r\n});\r\n\r\nconst DistanceThrower = new PerkTemplate({\r\n    name: 'Distance Thrower',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is experienced with building momentum. Add +25% maximum distance to all throwing. (using either athletics, combat or explosives)'\r\n});\r\n\r\nconst Runner = new PerkTemplate({\r\n    name: 'runner',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at running',\r\n    results: [\r\n        'You gain +1 speed',\r\n        'You can run twice as far without gaining exhaustion'\r\n    ]\r\n}, {\r\n    amount: 1,\r\n    applyTo: 'speed'\r\n});\r\n\r\nconst Jumper = new PerkTemplate({\r\n    name: 'jumper',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at jumping',\r\n    results: [\r\n        'You can jump 2 meters further and 0.5 meters higher',\r\n        'When you roll for jump and get a dice result of 10 or less it counts as 10',\r\n        'You only need 2 meter of running up to avoid -5 on roll'\r\n    ]\r\n});\r\n\r\nconst Swimmer = new PerkTemplate({\r\n    name: 'swimmer',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at swimming',\r\n    results: [\r\n        'You can hold your breath for 1 minute longer',\r\n        'You suffer only half penalties from difficult waters',\r\n        'You gain 1 base speed in water'\r\n    ]\r\n});\r\n\r\nconst DeepLungs = new PerkTemplate({\r\n    name: 'deep lungs',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You have trained your body to hold your breath for longer, you hold your breath for four as long.'\r\n});\r\n\r\n\r\nconst GoodFortitude = new PerkTemplate({\r\n    name: 'good fortitude',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character has great fortitude, gain +2 life'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 2\r\n});\r\n\r\nconst GreatFortitude = new PerkTemplate({\r\n    name: 'great fortitude',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Your character has great fortitude, gain +4 life. Prerequisite: Good fortitude'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 4\r\n});\r\n\r\nconst SupremeFortitude = new PerkTemplate({\r\n    name: 'supreme fortitude',\r\n    skill: skill,\r\n    level: 3,\r\n    description: 'Your character has supreme fortitude, gain +6 hitpoints. Prerequisite: Great fortitude'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 6\r\n});\r\n\r\nconst Regeneration = new PerkTemplate({\r\n    name: 'regeneration',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Increases healing, regenerate 1 additional life from low quality sleep or better. Prerequisite: Good fortitude'\r\n});\r\n\r\nconst Resillient = new PerkTemplate({\r\n    name: 'resillient',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'While incapacitated you never go unconscious from damage and extraneous physical activity do not cause damage. Bleeding damage is half',\r\n});\r\n\r\nconst StrongBack = new PerkTemplate({\r\n    name: 'strong back',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your strength counts as +3 for the purposes of carrying capacity'\r\n}, {\r\n    applyTo: 'carryingCapacity',\r\n    amount: 3\r\n});\r\n\r\nconst HighMobility = new PerkTemplate({\r\n    name: 'High mobility',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'You are highly mobile, gain +1 base speed and can enter sprint in a single round.'\r\n\r\n}, {\r\n    amount: 1,\r\n    applyTo: 'speed'\r\n});\r\n\r\nconst Marathoner = new PerkTemplate({\r\n    name: 'Marathoner',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Gain +10 on running, ignore one level of carry capacity or exhaustion'\r\n});\r\n\r\nconst ArmorSpecialist = new PerkTemplate({\r\n    name: 'armor specialist',\r\n    skill: skill,\r\n    description: 'You are a specialist at using armor, armor penalty to agility is reduced by 2 and weight from armor counts as half',\r\n    level: 1\r\n});\r\n\r\nconst ArmorMaster = new PerkTemplate({\r\n    name: 'armor master',\r\n    skill: skill,\r\n    description: 'You have mastered armor using, armor penalty to agility is further reduced by 2 and weight is halved again',\r\n    level: 2\r\n});\r\n\r\nconst Hardy = new PerkTemplate({\r\n    name: 'Hardy',\r\n    skill: skill,\r\n    description: 'You gain +1 damage absorbtion while awake.',\r\n    level: 2,\r\n}, {\r\n    amount: 1,\r\n    applyTo: 'damageAbsorption'\r\n});\r\n\r\nconst Robust = new PerkTemplate({\r\n    name: 'Robust',\r\n    skill: skill,\r\n    description: 'You gain +1 damage absorbtion while awake. Prerequisite: Hardy',\r\n    level: 3,\r\n}, {\r\n    amount: 1,\r\n    applyTo: 'damageAbsorption'\r\n});\r\n\r\nexport const AthleticsPerks = [Climber, Runner, Swimmer, Jumper, DistanceThrower, DeepLungs, GoodFortitude, GreatFortitude, SupremeFortitude, Regeneration, Resillient, StrongBack,\r\n    HighMobility, Marathoner, ArmorSpecialist, ArmorMaster, Hardy, Robust];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Balance = new PerkTemplate({\r\n    name: 'balance',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'You gain the following benefits ',\r\n    results: [\r\n        'You can move across difficult terrain without movement penalty',\r\n        'When you stand up from a prone position it costs only 1 meter movement',\r\n        'You take only half damage from hazardous terrain'\r\n    ]\r\n});\r\n\r\nconst AccurateThrower = new PerkTemplate({\r\n    name: 'Accurate Thrower',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has excellent aim while throwing, when throwing (using either athletics, combat or explosives) you suffer only half penalties range to throwing'\r\n});\r\n\r\nconst Dodger = new PerkTemplate({\r\n    name: 'dodger',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is a faster dodger, you gain +2 to your active defense, unspent action points give double active defense'\r\n}, {\r\n    applyTo: 'activedefense',\r\n    amount: 3\r\n});\r\n\r\nconst Evasive = new PerkTemplate({\r\n    name: 'evasive',\r\n    skill: 'acrobatics',\r\n    level: 2,\r\n    description: 'Your character is trained in evasive maneuvers, you gain +3 to your passive defense. Prerequisite: Dodger perk'\r\n}, {\r\n    applyTo: 'passivedefense',\r\n    amount: 3\r\n});\r\n\r\nconst Elusive = new PerkTemplate({\r\n    name: 'elusive',\r\n    skill: 'acrobatics',\r\n    level: 3,\r\n    description: 'Your character is naturally elusive, while awake you have +3 to your base defense. Prerequisite: Evasive perk'\r\n}, {\r\n    applyTo: 'basedefense',\r\n    amount: 3\r\n});\r\n\r\nconst RapidMovement = new PerkTemplate({\r\n    name: 'rapid movement',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has rapid movement in combat, the first time you move you only spend 2 action points instead of 3'\r\n});\r\n\r\nconst Tumbler = new PerkTemplate({\r\n    name: 'tumbler',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character gains the following effects',\r\n    results: [\r\n        'When falling, roll 2d10 acrobatics + agility, subtract half the result from meters fallen',\r\n        'You may substitute acrobatics for athletics when jumping',\r\n        'You may land into standing position',\r\n        'If you use an action that consumes one (and only one) meter of movement, it doesn\\'t count as having used movement'\r\n    ]\r\n});\r\n\r\nexport const AcrobaticsPerks = [Balance, AccurateThrower, Dodger, Evasive, Elusive, Tumbler, RapidMovement];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst skill = 'persuasion';\r\n\r\nconst MotivationalSpeaker = new PerkTemplate({\r\n    name: 'motivational speaker',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is an adept motivational speaker, you gain +3 to persuasion when rolling for motivational speech, maximum number of people is raised to 40, you may include yourself, additionally the bonus lasts for the whole day on every skill check.'\r\n}, {\r\n    applyTo: 'motivationalspeaker',\r\n    amount: 3\r\n});\r\n\r\nconst InspireCourage = new PerkTemplate({\r\n    name: 'inspire courage',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'When you inspire courage people become immune to fear, lasts against one contested roll or until they go to sleep or 24 hours (which ever happens first).'\r\n}, {\r\n    applyTo: 'inspirecourage',\r\n    amount: 0\r\n});\r\n\r\nconst PeaceMaker = new PerkTemplate({\r\n    name: 'peace maker',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is known for talking down hostiles and coming to a non-violent outcome, gain +5 when attempting to talk down a hostile'\r\n}, {\r\n    applyTo: 'peacemaker',\r\n    amount: 5\r\n});\r\n\r\nconst Trader = new PerkTemplate({\r\n    name: 'trader',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You are a thrifty trader who is has deep experience with trading, you receive 10% better prices when selling and bargaining'\r\n});\r\n\r\nexport const PersuasionPerks = [MotivationalSpeaker, InspireCourage, PeaceMaker, Trader];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst CriminalTrader = new PerkTemplate({\r\n    name: 'criminal trader',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all fencing rolls, +3 to all black market rolls involving'\r\n}, {\r\n    applyTo: 'fencing',\r\n    amount: 3\r\n});\r\n\r\nconst Gangster = new PerkTemplate({\r\n    name: 'gangster',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character is well experienced with gangs both from the inside and outside, gain +3 to all gang rolls, local culture and you may start out as a gang member'\r\n});\r\n\r\nconst Gossiper = new PerkTemplate({\r\n    name: 'gossiper',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all gossip roles and using the skill does not block other activities.'\r\n});\r\n\r\nconst LocalSlang = new PerkTemplate({\r\n    name: 'local slang',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Pick one location, you know the slang of that location and gain +5 to all streetwise rolls there'\r\n});\r\n\r\n\r\nexport const StreetwisePerks = [CriminalTrader, Gangster, Gossiper, LocalSlang];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Physicist = new PerkTemplate({\r\n    name: 'phycisist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied physics, gain +3 to all physics science rolls'\r\n});\r\n\r\nconst AdvancedPhysicist = new PerkTemplate({\r\n    name: 'phycisist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied physics a lot, gain +3 to all physics science rolls'\r\n});\r\n\r\nconst Chemist = new PerkTemplate({\r\n    name: 'chemist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied chemistry, gain +3 to all chemistry science rolls'\r\n});\r\n\r\nconst AdvancedChemist = new PerkTemplate({\r\n    name: 'chemist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied chemistry a lot, gain +3 to all chemistry science rolls'\r\n});\r\n\r\nconst Biologist = new PerkTemplate({\r\n    name: 'biologist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied biology, gain +3 to all biology science rolls'\r\n});\r\n\r\nconst AdvancedBiologist = new PerkTemplate({\r\n    name: 'biologist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied biology a lot, gain +3 to all biology science rolls'\r\n});\r\n\r\nexport const SciencePerks = [Physicist, Chemist, Biologist, AdvancedBiologist, AdvancedChemist, AdvancedPhysicist];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Aristocrat = new PerkTemplate({\r\n    name: 'aristocrat',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all high society related savoir-faire rolls, +2 to persuasion'\r\n}, {\r\n    applyTo: 'highsociety',\r\n    amount: 5\r\n});\r\n\r\nconst Enforcer = new PerkTemplate({\r\n    name: 'enforcer',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all law enforcement related savoir-faire rolls, +1 to all other skills when acting as a law enforcer'\r\n}, {\r\n    applyTo: 'enforcer',\r\n    amount: 5\r\n});\r\n\r\nconst Lawyer = new PerkTemplate({\r\n    name: 'lawyer',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all legal attourney related savoir-faire rolls, +1 to all other skills when acting as a lawyer'\r\n}, {\r\n    applyTo: 'lawyer',\r\n    amount: 5\r\n});\r\n\r\nconst Soldier = new PerkTemplate({\r\n    name: 'soldier',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all military related savoir-faire rolls, +2 to sequence'\r\n}, {\r\n    applyTo: 'soldier',\r\n    amount: 5\r\n});\r\n\r\nconst Academic = new PerkTemplate({\r\n    name: 'academic',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all academic related savoir-faire rolls, +2 to general knowledge'\r\n}, {\r\n    applyTo: 'academic',\r\n    amount: 5\r\n});\r\n\r\nexport const SavoirFairePerks = [Aristocrat, Enforcer, Lawyer, Soldier, Academic];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Chef = new PerkTemplate({\r\n    name: 'Chef',\r\n    skill: 'cooking',\r\n    level: 1,\r\n    description: 'You are a professional chef, time taken to cook is reduced to 75% and you gain +3 to cooking rolls'\r\n}, {\r\n    applyTo: '',\r\n    amount: 0\r\n});\r\n\r\nconst GourmetChef = new PerkTemplate({\r\n    name: 'Gourmet Chef',\r\n    skill: 'cooking',\r\n    level: 2,\r\n    description: 'You are a gourmet chef, you gain +3 to all cooking rolls and take no penalty for the first 5 extra meals you prepare'\r\n}, {\r\n    applyTo: 'cooking',\r\n    amount: 3\r\n});\r\n\r\nconst Scrambler = new PerkTemplate({\r\n    name: 'Scrambler',\r\n    skill: 'cooking',\r\n    level: 1,\r\n    description: 'You are used to working with inadequate tools and ingredients, ignore all penalties from tools and half penalties from low quality ingredients. When you speed cook you only take -5 to penalty'\r\n}, {\r\n    applyTo: '',\r\n    amount: 0\r\n});\r\n\r\nexport const CookingPerks = [Chef, GourmetChef, Scrambler];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst skill = 'electronics;'\r\n\r\nconst CyberneticsExpert = new PerkTemplate({\r\n    name: 'cybernetics expert',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'you are familiar with the electronics of cybernetics and bionics',\r\n    results: [\r\n        'you can repair a cybernetic implant for half cost',\r\n        'you can craft custom made cybernetic implants (requires mechanics counter part to complete job)'\r\n    ]\r\n});\r\n\r\nconst RoboticsExpert = new PerkTemplate({\r\n    name: 'robotics expert',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'you are familiar with the electronics of robotics and synths, from the electrician side you gain the following benefits',\r\n    results: [\r\n        'you can repair a robot for half cost',\r\n        'you can craft robots (requires mechanics and computers counter part to complete job)'\r\n    ]\r\n});\r\n\r\nconst VehicularElectronicsExpert = new PerkTemplate({\r\n    name: 'robotics expert',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'you are familiar with the electronics of vehicles',\r\n    results: [\r\n        'you can repair a robot for vehicle',\r\n        'you can craft vehicles (requires mechanics and computers counter part to complete job)'\r\n    ]\r\n});\r\n\r\n\r\nexport const ElectronicsPerks = [CyberneticsExpert, RoboticsExpert, VehicularElectronicsExpert];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst skill = 'explosives';\r\n\r\nconst BombMaker = new PerkTemplate({\r\n    name: 'bombmaker',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You know how to make home made bombs, +3 to making bombs'\r\n});\r\n\r\nconst GrenadeThrower = new PerkTemplate({\r\n    name: 'Grenade thrower',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You have done extensive training in throwing grenades and other bombs, when you throw a grenade you gain +3 to your roll.'\r\n});\r\n\r\nconst DisarmingExpert = new PerkTemplate({\r\n    name: 'Disarming Expert',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You know a thing or two about disarming bombs, when you roll to disarm a bomb add +3 to your roll.',\r\n});\r\n\r\nexport const ExplosivesPerks = [BombMaker, GrenadeThrower, DisarmingExpert];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst Trivia = new PerkTemplate({\r\n    name: 'trivia',\r\n    skill: 'general knowledge',\r\n    level: 1,\r\n    description: 'You can remember useless but interesting trivia, roll a general knowledge + intelligence vs 15 to raise everyones spirits.'\r\n});\r\n\r\nconst CommonSense = new PerkTemplate({\r\n    name: 'common sense',\r\n    skill: 'general knowledge',\r\n    level: 1,\r\n    description: 'Once per session when youre about to do something catastrophically stupid the game master will tell you the likely outcome and give a better alternative.' \r\n})\r\n\r\nexport const GeneralKnowledgePerks = [Trivia, CommonSense];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nconst VehicleMechanic = new PerkTemplate({\r\n    name: 'Vehicle Mechanic',\r\n    skill: 'mechanics',\r\n    level: 1,\r\n    description: 'Pick one vehicle type (bike, car, boat, ship, spaceship, airplane, spaceplane, ftl), you gain +5 to mechanics roll on that. '\r\n});\r\n\r\nexport const MechanicsPerks = [VehicleMechanic];","import { Perk } from './Perks';\r\nimport { CombatPerks } from '../perks/Combat';\r\nimport { FirearmsPerks } from '../perks/Firearms';\r\nimport { PilotPerks } from '../perks/Pilot';\r\nimport { SpellsPerks } from '../perks/Spells';\r\nimport { InvestigationPerks } from '../perks/Investigation';\r\nimport { IntimidationPerks } from '../perks/Intimidation';\r\nimport { LarcenyPerks } from '../perks/Larceny';\r\nimport { StealthPerks } from '../perks/Stealth';\r\nimport { SurvivalPerks } from '../perks/Survival';\r\nimport { ComputerPerks } from '../perks/Computer';\r\nimport { MedicinePerks } from '../perks/Medicine';\r\nimport { EmpathyPerks } from '../perks/Empathy';\r\nimport { SubtreFugePerks } from '../perks/Subterfuge';\r\nimport { AthleticsPerks } from '../perks/Athletics';\r\nimport { AcrobaticsPerks } from '../perks/Acrobatics';\r\nimport { PersuasionPerks } from '../perks/Persuasion';\r\nimport { StreetwisePerks } from '../perks/Streetwise';\r\nimport { SciencePerks } from '../perks/Science';\r\nimport { SavoirFairePerks } from '../perks/SavoirFaire';\r\nimport { CookingPerks } from '../perks/Cooking';\r\nimport { ElectronicsPerks } from '../perks/Electronics';\r\nimport { ExplosivesPerks } from '../perks/Explosives';\r\nimport { GeneralKnowledgePerks } from '../perks/GeneralKnowledge';\r\nimport { MechanicsPerks } from '../perks/Mechanics';\r\nimport { SkillName } from './Skills';\r\n\r\nexport const GetPerkList = (): Perk[] => {\r\n    return [\r\n        ...CombatPerks,\r\n        ...CookingPerks,\r\n        ...ComputerPerks,\r\n        ...FirearmsPerks,\r\n        ...PilotPerks,\r\n        ...SpellsPerks,\r\n        ...InvestigationPerks,\r\n        ...IntimidationPerks,\r\n        ...LarcenyPerks,\r\n        ...StealthPerks,\r\n        ...SurvivalPerks,\r\n        ...MedicinePerks,\r\n        ...EmpathyPerks,\r\n        ...ElectronicsPerks,\r\n        ...ExplosivesPerks,\r\n        ...GeneralKnowledgePerks,\r\n        ...MechanicsPerks,\r\n        ...SubtreFugePerks,\r\n        ...AthleticsPerks,\r\n        ...AcrobaticsPerks,\r\n        ...PersuasionPerks,\r\n        ...StreetwisePerks,\r\n        ...SciencePerks,\r\n        ...SavoirFairePerks,\r\n    ].sort(sortPerk);\r\n}\r\n\r\ninterface IPerkBySkill {\r\n    skill: SkillName;\r\n    perks: Perk[];\r\n}\r\n\r\nexport const GetPerkListBySkills = (): IPerkBySkill[] => {\r\n    return [\r\n        { skill: 'combat', perks: CombatPerks },\r\n        { skill: 'cooking', perks: CookingPerks },\r\n        { skill: 'computer', perks: ComputerPerks },\r\n        { skill: 'firearms', perks: FirearmsPerks },\r\n        { skill: 'pilot', perks: PilotPerks },\r\n        { skill: 'spells', perks: SpellsPerks },\r\n        { skill: 'investigation', perks: InvestigationPerks },\r\n        { skill: 'intimidation', perks: IntimidationPerks },\r\n        { skill: 'larceny', perks: LarcenyPerks },\r\n        { skill: 'stealth', perks: StealthPerks },\r\n        { skill: 'survival', perks: SurvivalPerks },\r\n        { skill: 'medicine', perks: MedicinePerks },\r\n        { skill: 'empathy', perks: EmpathyPerks },\r\n        { skill: 'electronics', perks: ElectronicsPerks },\r\n        { skill: 'explosives', perks: ExplosivesPerks },\r\n        { skill: 'general knowledge', perks: GeneralKnowledgePerks },\r\n        { skill: 'mechanics', perks: MechanicsPerks },\r\n        { skill: 'subterfuge', perks: SubtreFugePerks },\r\n        { skill: 'athletics', perks: AthleticsPerks },\r\n        { skill: 'acrobatics', perks: AcrobaticsPerks },\r\n        { skill: 'persuasion', perks: PersuasionPerks },\r\n        { skill: 'streetwise', perks: StreetwisePerks },\r\n        { skill: 'science', perks: SciencePerks },\r\n        { skill: 'savoir-faire', perks: SavoirFairePerks },\r\n    ];\r\n}\r\n\r\nconst sortPerk = (prevPerk: Perk, nextPerk: Perk) => {\r\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\r\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\r\n};","import { Character, CharacterSize } from \"../Character\";\r\nimport { Perk } from \"./Perks\";\r\nimport { Trait } from \"../traits/Traits\";\r\nimport { race } from \"../races/Races\";\r\n\r\nexport interface dispatcher {\r\n    action: string;\r\n    name?: string;\r\n    value: number;\r\n    perkToAdd?: Perk;\r\n    traitToAdd?: Trait;\r\n}\r\n\r\nconst getSizeFromString = (str:string|undefined):CharacterSize => {\r\n    switch (str) {\r\n        case 'titanic': return 'titanic';\r\n        case 'colossal': return 'colossal';\r\n        case 'gigantic': return 'gigantic';\r\n        case 'huge': return 'huge';\r\n        case 'large': return 'large';\r\n        case 'small': return 'small';\r\n        case 'tiny': return 'tiny';\r\n        case 'minute': return 'minute';\r\n        default: return 'medium';\r\n    }\r\n};\r\n\r\nconst stringToRace = (str:string|undefined):race => {\r\n    switch (str) {\r\n        case 'merlion': return 'merlion';\r\n        case 'synth': return 'synth';\r\n        case 'shambras': return 'shambras';\r\n        case 'nekovian': return 'nekovian';\r\n        default: return 'human';\r\n    }\r\n}\r\n\r\nexport const useCharacter = (state: Character, action: dispatcher): Character => {\r\n    switch (action.action) {\r\n        case 'strength': return new Character({ ...state, strength: action.value });\r\n        case 'agility': return new Character({ ...state, agility: action.value });\r\n        case 'endurance': return new Character({ ...state, endurance: action.value });\r\n        case 'willpower': return new Character({ ...state, willpower: action.value });\r\n        case 'perception': return new Character({ ...state, perception: action.value });\r\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\r\n        case 'age': return new Character({ ...state, age: action.value });\r\n        case 'skill':\r\n            let r = new Character({\r\n                ...state\r\n            });\r\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\r\n            return r;\r\n        case 'name': return new Character({ ...state, name: action.name || '' });\r\n        case 'species': return new Character({ ...state, species: stringToRace(action.name)});\r\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\r\n        case 'background': return new Character({ ...state, background: action.name || '' });\r\n        case 'size':\r\n            return new Character({...state, size: getSizeFromString(action.name)});\r\n    }\r\n    if (action.action === 'addperk') {\r\n        if (action.perkToAdd !== undefined)\r\n            return new Character({ ...state, perks: [...state.perks, action.perkToAdd] });\r\n    }\r\n    else if (action.action === 'removeperk') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.perkToAdd !== undefined) {\r\n            let pta = action.perkToAdd;\r\n            r.perks = r.perks.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    else if (action.action === 'addtrait') {\r\n        if (action.traitToAdd !== undefined)\r\n            return new Character({ ...state, traits: [...state.traits, action.traitToAdd] });\r\n    }\r\n\r\n    else if (action.action === 'removetrait') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.traitToAdd !== undefined) {\r\n            let pta = action.traitToAdd;\r\n            r.traits = r.traits.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    return state;\r\n}","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { ISection } from \"./Section\";\r\n\r\nlet isMoving = false;\r\nlet xDispatcher: React.Dispatch<React.SetStateAction<number>> | undefined = undefined;\r\nlet yDispatcher: React.Dispatch<React.SetStateAction<number>> | undefined = undefined;\r\nlet offsetX = 0;\r\nlet offsetY = 0;\r\n\r\nconst mouseDown = (x: React.Dispatch<React.SetStateAction<number>>, y: React.Dispatch<React.SetStateAction<number>>, event: React.MouseEvent<HTMLDivElement, MouseEvent>, currentX: number, currentY: number) => {\r\n    isMoving = true;\r\n    xDispatcher = x;\r\n    yDispatcher = y;\r\n    offsetX = event.screenX - currentX;\r\n    offsetY = event.screenY - currentY;\r\n};\r\n\r\nconst mouseMove = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (isMoving !== true) return;\r\n    if (yDispatcher === undefined || xDispatcher === undefined) return;\r\n    xDispatcher(event.screenX - offsetX);\r\n    yDispatcher(event.screenY - offsetY);\r\n};\r\n\r\nconst stopMoving = () => {\r\n    isMoving = false;\r\n    xDispatcher = undefined;\r\n    yDispatcher = undefined;\r\n};\r\n\r\n\r\n\r\nconst FloatingSection: React.FC<ISection> = ({ title, tab, children, }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [x, setX] = useState(0);\r\n    const [y, setY] = useState(0);\r\n    let tabSize = '0';\r\n    if (tab !== undefined)\r\n        tabSize = tab + 'px';\r\n    return <div className={`boardersection ${!isOpen ? '' : 'floatsection'}`} style={{ paddingLeft: tabSize, left: `${x}px`, top: `${y}px` }}>\r\n        <div className=\"floaterbox\" style={{ cursor: 'pointer' }}\r\n            onMouseDown={(e) => mouseDown(setX, setY, e, x, y)}\r\n            onMouseUp={() => stopMoving()}\r\n            onMouseOut={() => stopMoving()}\r\n            onMouseLeave={() => stopMoving()}\r\n            onMouseMove={(e) => mouseMove(e)}\r\n            onMouseEnter={() => stopMoving()}\r\n        >...</div>\r\n        <Button onClick={(event) => { setIsOpen(!isOpen); setX(event.screenX-40); setY(event.screenY-160); }}>{title} {isOpen ? '-' : '+'}</Button>\r\n        {isOpen && children}\r\n    </div>;\r\n}\r\n\r\nexport default FloatingSection;","import React, { useReducer, useState } from 'react';\r\nimport { Character, CharacterSizes } from '../components/Character';\r\nimport { GetTraits } from '../components/traits/Traits';\r\nimport { GetPerkListBySkills } from '../components/general/GetPerkList';\r\nimport { useCharacter } from '../components/general/useCharacter';\r\n\r\nimport './charactersheet.css';\r\nimport EditText, { EditNumber, HideNumber, HideText, SelectText } from '../components/general/HideText';\r\nimport { Skill } from '../components/general/Skills';\r\nimport Section from '../components/Section';\r\nimport Item, { IDamageDice } from '../components/equipment/Item';\r\nimport { ConsumableMedicine, ConsumableTools, ConsumableWeapons, IConsumable } from '../components/equipment/Consumables';\r\nimport { weightConverter } from '../utils/utilFunctions';\r\nimport { FireArm } from '../components/equipment/Firearms';\r\nimport MeleeWeapons, { IMeleeWeapon } from '../components/equipment/MeleeWeapons';\r\nimport FloatingSection from '../components/FloatingSection';\r\nimport FirearmCrafter from '../components/equipment/FirearmCrafter';\r\nimport ArmorCrafter, { FullArmor } from '../components/equipment/ArmorCrafter';\r\n\r\ninterface CharacterSheetProps {\r\n    initialCharacter: Character;\r\n    characterCallback: (c: Character) => void;\r\n}\r\nconst padSize = 32;\r\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\r\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\r\n    const [viewState, setViewState] = useState<\"edit\" | \"print\" | \"explain\" | \"hide\">(\"edit\");\r\n    const [viewTraitList, setViewTraitList] = useState(false);\r\n    const [viewPerkList, setViewPerkList] = useState(false);\r\n    const [inventory, setInventory] = useState<Item[]>([]);\r\n    const [isAddingInventory, setIsAddingInventory] = useState(false);\r\n\r\n    const carryWeight = inventory.length > 0 ? inventory.map(i => i.weight).reduce((a, b) => a + b) : 0;\r\n\r\n    const damageAbsFromInventory = (): [number,number] => {\r\n        const armors: FullArmor[] = inventory.filter(item => item.relatedSkill === 'combat' && (item as any).type === 'armor') as FullArmor[];\r\n        if (armors.length > 0) {\r\n            return armors[0].getDamageAbsorbtion();\r\n        }\r\n        return [0,0];\r\n    };\r\n\r\n    //character.getDamageAbsorption() + damageAbsFromInventory()\r\n    const characterDamageReduction = character.getDamageAbsorption();\r\n    const [damageAbsInventory, minDamageFromInventory] = damageAbsFromInventory();\r\n    const damageAbs = characterDamageReduction + damageAbsInventory;\r\n    const minDamage = Math.max(minDamageFromInventory);\r\n\r\n    return (<div className=\"characterSheet\">\r\n        {viewState !== \"edit\" ?\r\n            <button className='no-print' onClick={() => setViewState(\"edit\")}>edit</button>\r\n            :\r\n            <button className='no-print' onClick={() => setViewState(\"explain\")}>explain</button>}\r\n        {/* page 1 */}\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan={6}><h4>Infinite Darkness</h4></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <label>Name</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.name} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'name', value: 0 })} explain={character.explain('name')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Life</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={character.getLife()} isEdit={viewState} explain={character.explain('life')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Strength</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.strength} isEdit={viewState} onChange={(str) => dispatch({ action: 'strength', value: (str) })} explain={character.explain('strength')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Gender</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.gender} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'gender', value: 0 })} explain={character.explain('gender')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Mental Health</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={character.getMentalHealth()} isEdit={viewState} explain={character.explain('mentalHealth')} /> </td>\r\n                    <td>\r\n                        <label>Endurance</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.endurance} isEdit={viewState} onChange={(str) => dispatch({ action: 'endurance', value: (str) })} explain={character.explain('endurance')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Species</label>\r\n                    </td>\r\n                    <td>\r\n                        <SelectText options={['human', 'shambras', 'merlion', 'nekovian', 'synth']} txt={character.species} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'species', value: 0 })} explain={character.explain('species')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Sequence</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={character.getSequence()} isEdit={viewState} explain={character.explain('sequence')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Agility</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.agility} isEdit={viewState} onChange={(str) => dispatch({ action: 'agility', value: (str) })} explain={character.explain('agility')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Age</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.age} isEdit={viewState} onChange={(str) => dispatch({ action: 'age', value: (str) })} explain={character.explain('age')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Damage absorption</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={damageAbs} explain={'damage absorbtion'} isEdit={viewState} />:\r\n                        <HideNumber txt={minDamage} explain={'minimum damage'} isEdit={viewState} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Perception</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.perception} isEdit={viewState} onChange={(str) => dispatch({ action: 'perception', value: (str) })} explain={character.explain('perception')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Experience points</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={character.getCalculatedPointsLeft()} explain={character.explain('pointsLeft')} isEdit={viewState} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Defense</label>\r\n                    </td>\r\n                    <td>\r\n                        <SmallLabel><HideNumber txt={character.getBaseDefense()} explain={character.explain('basedefense')} isEdit={viewState} /></SmallLabel>\r\n                        / <SmallLabel><HideNumber txt={character.getActiveDefense()} explain={character.explain('activedefense')} isEdit={viewState} /></SmallLabel>\r\n                    </td>\r\n                    <td>\r\n                        <label>Intelligence</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.intelligence} isEdit={viewState} onChange={(str) => dispatch({ action: 'intelligence', value: (str) })} explain={character.explain('intelligence')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Experience multiplier</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber txt={character.getExperienceMultiplier()} isEdit={viewState} explain={character.explain('experienceMultiplier')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Carrying capacity (kg)</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText isEdit={viewState} txt={`${weightConverter(carryWeight)} / ${character.getBaseCarryingCapacity(1).toString()} / ${character.getBaseCarryingCapacity(2).toString()} / ${character.getBaseCarryingCapacity(3).toString()}`} explain={character.explain('carryingCapacity')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Willpower</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditNumber txt={character.willpower} isEdit={viewState} onChange={(str) => dispatch({ action: 'willpower', value: (str) })} explain={character.explain('willpower')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label>Player</label></td><td>&nbsp;</td>\r\n                    <td><label>Speed</label></td><td>\r\n                        <HideText isEdit={viewState} txt={character.getBaseSpeed().toString()} explain={character.explain('speed')} />\r\n                    </td>\r\n                    <td><label>Size</label></td><td>\r\n                        <SelectText options={[...CharacterSizes]} txt={character.size} isEdit={viewState} onChange={(size) => dispatch({ action: 'size', value: 0, name: size })} explain={character.explain('size')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}>\r\n                        Background\r\n                    </td>\r\n                    <td>\r\n                        <label>Mana</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideNumber isEdit={viewState} txt={character.getMana()} explain={character.explain('mana')} />\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        Personality traits\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}> &nbsp; </td>\r\n                    <td colSpan={1}>\r\n                        <label>Action points</label>\r\n                    </td>\r\n                    <td colSpan={1}>\r\n                        <HideNumber isEdit={viewState} txt={character.getActionPoints()} explain={character.explain('actionPoints')} />\r\n                    </td>\r\n                    <td colSpan={2}> &nbsp;</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}> &nbsp;</td>\r\n                    <td colSpan={2}>\r\n                        Apperance traits\r\n                    </td>\r\n                    <td colSpan={2}> &nbsp;</td>\r\n                </tr>\r\n                {Pad(4, 0).map(i =>\r\n                    <tr key={`cs_traits_${i}`}>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                    </tr>\r\n                )}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Skills</h5>\r\n                        <table className=\"skillTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Skill</th>\r\n                                    <th>Exp</th>\r\n                                    <th>Rank</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {character.skills.map(skill => {\r\n                                    return <tr key={`cs_skills_${skill.name}`}>\r\n                                        <td>\r\n                                            <label>{skill.name}</label>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <EditNumber txt={skill.level} isEdit={viewState} onChange={(str) => dispatch({ action: 'skill', name: skill.name, value: str })} explain={character.explain('skill:' + skill.name)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(padSize, character.skills.length).map(i => {\r\n                                    return <tr key={`cs_skillsleft_${i}`}>\r\n                                        <td > <label> &nbsp;</label></td>\r\n                                        <td> </td>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Perks {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewPerkList(!viewPerkList)}>Add Perk</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewPerkList ? GetPerkListBySkills().map(perkBySkill => {\r\n                                    const skillRanks: Skill | undefined = character.skills.find(s => s.name === perkBySkill.skill);\r\n                                    if (skillRanks !== undefined && skillRanks.level >= 6) {\r\n\r\n                                        return <tr className='no-print' key={`cs_perksview_${perkBySkill.skill}`}>\r\n                                            <td>\r\n                                                <Section title={perkBySkill.skill}>\r\n                                                    {perkBySkill.perks.map(perk => {\r\n                                                        if (skillRanks.level < perk.level * 3 + 3)\r\n                                                            return null;\r\n                                                        if (character.perks.find(p => p.name === perk.name)) return null;\r\n                                                        return <>\r\n                                                            <br />\r\n                                                            <br />\r\n                                                            <button onClick={() => dispatch({ action: 'addperk', name: perk.name, value: 0, perkToAdd: perk })}>{perk.name}</button>\r\n                                                            ({perk.level * 10}) {perk.description}\r\n                                                            {perk.results && <ul>{perk.results.map(r => <li key={`cs_perkitem${perk.name}_${r}`}>{r}</li>)}</ul>}\r\n\r\n                                                        </>;\r\n                                                    })}\r\n                                                </Section>\r\n                                            </td>\r\n                                        </tr>\r\n                                    }\r\n                                    else return null;\r\n\r\n                                }) : null}\r\n                                {character.perks.map(perk => {\r\n                                    return <tr key={`cs_perks_${perk.name}`}>\r\n                                        <td>\r\n                                            {perk.name}\r\n                                            <button onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewPerkList ? 0 : padSize + 1, character.perks.length).map(i => {\r\n                                    return <tr key={`cs_otherperks_${i}`}>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Traits {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewTraitList(!viewTraitList)}>Add Trait</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewTraitList ? GetTraits().filter(trait => trait.race === 'any' || trait.race === character.species).map(trait => {\r\n                                    return <tr className='no-print' key={`cs_traitsview_${trait.name}`}>\r\n                                        <td>\r\n                                            <button onClick={() => dispatch({ action: 'addtrait', name: trait.name, value: 0, traitToAdd: trait })}>{trait.name}</button> {trait.description}\r\n                                        </td>\r\n                                    </tr>\r\n                                }) : null}\r\n                                {character.traits.map(trait => {\r\n                                    return <tr key={`cs_traitsadd_${trait.name}`}>\r\n                                        <td>\r\n                                            {trait.name}\r\n                                            <button onClick={() => dispatch({ action: 'removetrait', name: trait.name, value: 0, traitToAdd: trait })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewTraitList ? 0 : padSize - 26, character.traits.length).map(i => {\r\n                                    return <tr key={`cs_traitsadd2_${i}`}>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <h5 style={{ marginTop: '20px' }}>Reputation</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {Pad(padSize - 8, 0).map(i => <tr key={`cs_rep_${i}`}>\r\n                                    <td> </td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                {/* page 2 */}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={6}>\r\n                        <table className='lifeboxes'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={60}>Life</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    {Pad(60, 0).map(i => <td key={`cs_life_top_${i}`}> &nbsp;</td>)}\r\n                                </tr>\r\n                                <tr>\r\n                                    {Pad(60, 0).map(i => <td key={`cs_life_bottom_${i}`}> &nbsp;</td>)}\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table className='statboxes'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mental health</th>\r\n                                    <th>Mana</th>\r\n                                    <th><span className='carry'>Carry</span> <span className='middash'>-</span> <span className='exhaustion'>Exhaustion</span></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        {Pad(30, 0).map(i => <span key={`cs_mental_${i}`} className='mentalHealthBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Pad(80, 0).map(i => <span key={`cs_mana_${i}`} className='manaBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Pad(8, 0).map(i => <span  key={`cs_exh_${i}`} className='exhaustionBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={3}>\r\n                        <h4>Equipment</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={6}>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        <span onClick={() => setIsAddingInventory(!isAddingInventory)}>Weapon </span>\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        Action\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        HB\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        AP\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Damage\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Ammo\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={7}>\r\n                                        {isAddingInventory && <>\r\n                                            <FloatingSection title='Firearms'>\r\n                                                <FirearmCrafter onGetFirearm={(f) => setInventory([...inventory, f])} >\r\n\r\n                                                </FirearmCrafter>\r\n                                            </FloatingSection>\r\n\r\n                                            <Section title='Arms'>\r\n                                                <ViewFireArms items={MeleeWeapons} onClick={w => setInventory([...inventory, w])} />\r\n                                            </Section>\r\n                                        </>}\r\n                                    </td>\r\n                                </tr>\r\n                                {inventory.filter(i => i.relatedSkill === 'firearms').map(item => {\r\n                                    const skill = character.getSkillLevel(item.relatedSkill);\r\n\r\n                                    let firearm: FireArm | undefined = item.relatedSkill === 'firearms' ? item as FireArm : undefined;\r\n                                    if (firearm === undefined) return <></>;\r\n\r\n                                    let damageDice: IDamageDice = firearm.getDamageDice();\r\n\r\n                                    return <tr key={`cs_i_f_${item.name}`}>\r\n                                        <td className='bigtd'>\r\n                                            {item.name} <button onClick={() => setInventory(removeItem(inventory, item))}>x</button>\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {firearm.fireCost}\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {skill + character.agility +\r\n                                                ((firearm.getHitBonus()))}\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {firearm && firearm.getArmorPercing()}\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n                                            {`${damageDice.numberOfDice}d${damageDice.sides} + ${damageDice.bonus}`}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {`${firearm.capacity} (${firearm.ammo})`}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {weightConverter(item.weight)}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {item.value}\r\n                                        </td>\r\n                                    </tr>;\r\n                                })}\r\n                                {inventory.filter(i => i.relatedSkill === 'combat').map(item => {\r\n                                    const skill = character.getSkillLevel(item.relatedSkill);\r\n\r\n                                    let arm: IMeleeWeapon | undefined = item.relatedSkill === 'combat' ? item as IMeleeWeapon : undefined;\r\n                                    if (arm === undefined) return <></>;\r\n\r\n                                    let damageDice = arm.damage;\r\n\r\n                                    return <tr key={`cs_i_m_${item.name}`}>\r\n                                        <td className='bigtd'>\r\n                                            {item.name} <button onClick={() => setInventory(removeItem(inventory, item))}>x</button>\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {arm.actionPoints}\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {skill + character.agility +\r\n                                                (arm.hitbonus || 0)}\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n                                            {arm.armorpiercing}\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n                                            {damageDice && `${damageDice.numberOfDice}d${damageDice.sides} + ${damageDice.bonus}`}\r\n                                            {arm.damage}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {weightConverter(item.weight)}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {item.value}\r\n                                        </td>\r\n                                    </tr>;\r\n                                })}\r\n                                {inventory.filter(i => i.relatedSkill !== 'combat' && i.relatedSkill !== 'firearms').map(item => {\r\n                                    \r\n\r\n                                    return <tr key={`cs_i_f_${item.name}`}>\r\n                                        <td className='bigtd'>\r\n                                            {item.name} <button onClick={() => setInventory(removeItem(inventory, item))}>x</button>\r\n                                            {item.relatedSkill}\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {weightConverter(item.weight)}\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n                                            {item.value}\r\n                                        </td>\r\n                                    </tr>;\r\n                                })}\r\n\r\n                                {Pad(7 - inventory.length, 0).map(i =>\r\n                                    <tr key={`cs_i_pad_${i}`}>\r\n                                        <td className='bigtd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        <span onClick={() => setIsAddingInventory(!isAddingInventory)}>Item </span>\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Skill\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Bonus\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {isAddingInventory && <>\r\n                                    <Section title='weapons'>\r\n                                        <ViewConsumables consumables={ConsumableWeapons} onClick={w => setInventory([...inventory, w])} />\r\n                                    </Section>\r\n\r\n                                    <Section title='tools'>\r\n                                        <ViewConsumables consumables={ConsumableTools} onClick={w => setInventory([...inventory, w])} />\r\n                                    </Section>\r\n\r\n                                    <Section title='medicine'>\r\n                                        <ViewConsumables consumables={ConsumableMedicine} onClick={w => setInventory([...inventory, w])} />\r\n                                    </Section>\r\n                                    <FloatingSection title='armor'>\r\n                                        <ArmorCrafter onClick={w => setInventory([...inventory, w])} />\r\n                                    </FloatingSection>\r\n                                </>}\r\n                                {inventory.filter(i => i.relatedSkill !== 'firearms' && i.relatedSkill !== 'combat').map(item => <tr key={`cs_i_f_c_${item.name}`}>\r\n                                    <td className='bigtd'>\r\n                                        {item.name} <button onClick={() => setInventory(removeItem(inventory, item))}>x</button>\r\n                                    </td>\r\n                                    <td className='smalltd3'>\r\n\r\n                                    </td>\r\n                                    <td className='smalltd2'>\r\n                                    </td>\r\n                                    <td className='smalltd2'>\r\n                                        {weightConverter(item.weight)}\r\n                                    </td>\r\n                                    <td className='smalltd2'>\r\n                                        {item.value}\r\n                                    </td>\r\n                                </tr>)}\r\n                                {Pad((!isAddingInventory ? 17 - inventory.length : 0), 0).map(i =>\r\n                                    <tr key={`cs_i_adding_${i}`}>\r\n                                        <td className='bigtd'>\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colSpan={3}>\r\n                        <h4>Stash</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                {Pad(12, 0).map(i =>\r\n                    <tr key={`cs_i_pad_leftover_${i}`}>\r\n                        <td colSpan={6}> </td>\r\n                    </tr>)}\r\n\r\n            </tbody>\r\n        </table></div>);\r\n}\r\n\r\nconst removeItem = (currentList: Item[], remove: Item): Item[] => {\r\n    return currentList.filter(i => i.name !== remove.name);\r\n};\r\n\r\ninterface IViewArms {\r\n    onClick: (item: Item) => void;\r\n    items: Item[];\r\n}\r\n\r\nconst ViewFireArms: React.FC<IViewArms> = ({ onClick, items }) => {\r\n    return <>{items.map(item => <tr key={`cs_vfa_${item.name}`}>\r\n        <td className='bigtd'>\r\n            <button onClick={() => onClick(item)} >{item.name}</button>\r\n        </td>\r\n        <td className='smalltd3'>\r\n\r\n        </td>\r\n        <td className='smalltd2'>\r\n\r\n        </td>\r\n        <td className='smalltd2'>\r\n            {item.weight}\r\n        </td>\r\n        <td className='smalltd2'>\r\n            {item.value}\r\n        </td>\r\n    </tr>)}</>;\r\n};\r\n\r\ninterface IViewConsumables {\r\n    onClick: (item: IConsumable) => void;\r\n    consumables: IConsumable[];\r\n}\r\n\r\nconst ViewConsumables: React.FC<IViewConsumables> = ({ onClick, consumables }) => {\r\n    return <>{consumables.map(item => <tr key={`cs_vc_item_${item.name}`}>\r\n        <td className='bigtd'>\r\n            <button onClick={() => onClick(item)} >{item.name}</button>\r\n        </td>\r\n        <td className='smalltd3'>\r\n\r\n        </td>\r\n        <td className='smalltd2'>\r\n\r\n        </td>\r\n        <td className='smalltd2'>\r\n            {item.weight}\r\n        </td>\r\n        <td className='smalltd2'>\r\n            {item.value}\r\n        </td>\r\n    </tr>)}</>;\r\n}\r\n\r\nconst Pad = (minSize: number, size: number) => {\r\n    const i = Math.max(minSize - size, 0);\r\n    let ar = new Array<number>();\r\n    for (let counter = 0; counter < i; counter++) {\r\n        ar.push(counter);\r\n    }\r\n    return ar;\r\n}\r\n\r\nconst SmallLabel: React.FC = ({ children }) => {\r\n    return <span className='smallLabel'>{children}</span>\r\n}","import React, { useState, lazy } from 'react';\r\nimport './App.css';\r\nimport { Character } from './components/Character';\r\nimport { DialogTitle } from '@material-ui/core';\r\nimport { CharacterSheet } from './views/CharacterSheet';\r\nimport Conditional from './utils/Conditional';\r\nimport usePersistentState from './utils/usePersistentState';\r\nconst Battleview = lazy(() => import('./views/Battleview'));\r\nconst SkillPerkManual = lazy(() => import('./views/SkillPerkManual'));\r\nconst GameMaster = lazy(() => import('./views/GameMaster'));\r\nconst WorldAndLore = lazy(() => import('./views/WorldAndLore'));\r\nconst PlayerManual = lazy(() => import('./views/PlayerManual'));\r\nconst thisOrDefault = (text: string | null, def: string) => text !== null ? text : def;\r\nconst getOrNull = (test: string[], index: number) => test[index];\r\nconst App: React.FC = () => {\r\n  const params = new URLSearchParams(window.location.search);\r\n  const route = thisOrDefault(params.get('v'), 'main').split(';');\r\n  return <RoutableApp initialView={getOrNull(route, 0)} levelTwo={getOrNull(route, 1)} />;\r\n}\r\n\r\ninterface IRoutableAppProps {\r\n  initialView: string;\r\n  levelTwo: string | undefined;\r\n}\r\nconst main = 'main';\r\nconst characterSheet = 'Character Sheet';\r\nconst playerManual = 'Player Manual';\r\nconst gameMaster = 'Game Master';\r\nconst worldAndLore = 'World & Lore';\r\nconst skillsAndPerks = 'Skills & Perks';\r\nconst battleView = 'Battleview';\r\nlet options = [main,\r\n  characterSheet,\r\n  playerManual,\r\n  gameMaster,\r\n  worldAndLore,\r\n  skillsAndPerks,\r\n  battleView\r\n];\r\nconst RoutableApp: React.FC<IRoutableAppProps> = ({ initialView, levelTwo }) => {\r\n  const [viewMode, setViewMode] = usePersistentState(initialView, initialView);\r\n  const [character, setCharacter] = useState(new Character());\r\n\r\n  const parseMenu = (choice: string) => setViewMode(choice);\r\n  return (\r\n    <>\r\n      <Menu callback={(option) => parseMenu(option)} options={options} current={viewMode} />\r\n      <div className=\"page\">\r\n\r\n        <Conditional shouldView={viewMode === main}>\r\n          <DialogTitle>Infinite Darkness</DialogTitle>\r\n          <p>This webpage is a resource for both players and game masters to run a tabletop game of Infinite Darkness.</p>\r\n          <p>Infinite Darkness is a sci-fi roleplaying game set in a future where humanity has begun to take to the stars, aliens and humans co exist.</p>\r\n          <p>With the discovery of faster than light travel- the ability to visit distant stars became a possibility. But space is still vast beyond imagining, the time it takes to travel is still long.\r\n          Due to the limitations of telescopes most stars in the local neighborhood are still mostly uncharted, very little is known of each system beyond the classification of the star and occationally limited information of a planet.\r\n          </p>\r\n          <p>No body knows what lurks out there and if you can't take a little bloody nose then perhaps you ought to go home and crawl under you bed. It's not safe out there, it's wonderous with treasures to satiete desires both subtle and gross. But it's not for the timid</p>\r\n          <hr />\r\n          <p>This page uses session storage (similar to cookies) click <span style={{ textDecoration: 'underline', color: 'red', cursor: 'pointer' }} onClick={() => sessionStorage.clear()}>here</span> to purge session manually.</p>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === characterSheet}>\r\n          <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === playerManual}>\r\n          <PlayerManual route={levelTwo} />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === gameMaster}>\r\n          <GameMaster></GameMaster>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === worldAndLore}>\r\n          <WorldAndLore></WorldAndLore>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === skillsAndPerks}>\r\n          <SkillPerkManual />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === battleView}>\r\n          <Battleview />\r\n        </Conditional>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\ninterface MenuProps {\r\n  callback: (option: string) => void;\r\n  options: string[];\r\n  current: string;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = (props) => {\r\n  return <div className=\"pageTop\">\r\n    <div className=\"pageTopInner\">\r\n      {props.options.map(option =>\r\n        <Tab active={option === props.current} key={option} onClick={() => props.callback(option)}>{option}</Tab>\r\n      )}\r\n    </div>\r\n  </div>;\r\n}\r\n\r\ninterface ITabPRops {\r\n  onClick: Function;\r\n  active: boolean;\r\n}\r\n\r\nconst Tab: React.FC<ITabPRops> = (props) => {\r\n  return <button className={props.active ? 'tab tabActive no-print' : 'tab no-print'} onClick={() => props.onClick()}>{props.children}</button>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}