{"version":3,"sources":["components/traits/Traits.ts","components/Skills.tsx","components/skills/acrobatics.ts","components/skills/athletics.ts","components/skills/combat.ts","components/skills/computer.ts","components/skills/firearms.ts","components/skills/empathy.ts","components/skills/intimidation.ts","components/skills/investigation.ts","components/skills/larceny.ts","components/skills/medicine.ts","components/skills/persuation.ts","components/skills/pilot.ts","components/skills/spells.ts","components/skills/stealth.ts","components/skills/subtrefuge.ts","components/skills/survival.ts","components/skills/mechanics.tsx","components/skills/streetwise.ts","components/GetSkillList.tsx","views/CharacterSheet.tsx","components/useCharacter.ts","components/Perks.tsx","components/perks/Combat.ts","components/perks/Firearms.ts","components/perks/Pilot.ts","components/perks/Spells.tsx","components/perks/Investigation.ts","components/perks/Intimidation.ts","components/perks/Larceny.ts","components/perks/Stealth.ts","components/perks/Survival.ts","components/perks/Computer.ts","components/perks/Medicine.ts","components/perks/Empathy.ts","components/perks/Subtrefuge.ts","components/perks/Athletics.ts","components/perks/Acrobatics.ts","components/perks/Persuation.ts","components/perks/Streetwise.ts","components/GetPerkList.ts","components/Character.tsx","App.tsx","serviceWorker.ts","index.tsx","components/HideText.tsx"],"names":["Coward","name","cost","description","applyTo","amount","Brave","FoolHardy","Frail","Resillient","Reckless","Gifted","FastMetabolism","DoubleHanded","Phobia","WealthyFamily","Aggressive","GetTraits","sort","a","b","toLowerCase","SkillTemplate","useCases","level","this","Acrobatics","attribute","type","results","Athletics","Combat","Computer","Firearms","Empathy","Intimidation","Investigation","Larceny","Medicine","Persuation","Pilot","Spells","Stealth","Subtrefuge","Survival","Mechanics","Streetwise","GetSkillList","CharacterSheet","props","useReducer","useCharacter","initialCharacter","character","dispatch","useState","viewState","setViewState","viewTraitList","setViewTraitList","viewPerkList","setViewPerkList","className","onClick","colSpan","txt","isEdit","onChange","str","action","value","explain","getLife","strength","parseInt","gender","getMana","endurance","species","getMentalHealth","agility","age","perception","getCalculatedPointsLeft","getPassiveDefense","intelligence","getExperienceMultiplier","willpower","Pad","map","i","style","border","skills","skill","length","GetPerkList","perk","skillRanks","find","s","undefined","perks","p","perkToAdd","padSize","trait","traitToAdd","traits","marginTop","verticalAlign","minSize","size","Math","max","ar","Array","counter","push","state","Character","r","findIndex","background","pta","filter","def","PerkTemplate","data","hook","_description","CombatPerks","FirearmsPerks","QualifiedForCar","QualifiedForBoat","QualifiedForShip","QualifiedForSubmarine","QualifiedForAirplane","QualifiedForSpaceship","PilotPerks","spellhook","SpellTemplate","DimensionalSwap","SpellsPerks","InvestigationPerks","IntimidationPerks","LarcenyPerks","StealthPerks","SurvivalPerks","ComputerPerks","MedicinePerks","EmpathyPerks","SubtreFugePerks","Climber","Runner","Jumper","AthleticsPerks","AcrobaticsPerks","PersuationPerks","StreetwisePerks","sortPerk","prevPerk","nextPerk","fSum","n","x","copy","reduce","t","intMultipler","getCharacterPointsCostPerks","getCharacterPointsCostSkills","getCharacterPointsCostTraits","getCalculatedPointsUsed","getCharacterPointsCostAttribute","getStartingPointsAvailable","skillName","combat","getSkillLevel","acrobatics","CharacterPointsHuman","CharacterPointsMerlion","CharacterPointsShambra","CharacterPointsNekovian","characterPointsHuman","characterPointsMerlion","characterPointsShambra","characterPointsNekovian","getHook","floor","sumOr","what","sum","or","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","min","CharacterPoints","SkillPerkManual","lazy","GameMaster","WorldAndLore","Wizard","PlayerManual","Conditional","shouldView","children","fallback","Menu","options","option","active","current","key","callback","Tab","App","viewMode","setViewMode","setCharacter","DialogTitle","characterCallback","c","float","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","HideText","EditText","e","target"],"mappings":"qHASA,sCAAMA,EAAgB,CAClBC,KAAM,gBACNC,MAAO,GACPC,YAAa,8FACbC,QAAS,OACTC,QAAS,GAGPC,EAAe,CACjBL,KAAM,QACNC,KAAM,GACNC,YAAa,gGACbC,QAAS,OACTC,OAAQ,GAGNE,EAAmB,CACrBN,KAAM,YACNC,KAAM,GACNC,YAAa,iOACbC,QAAS,OACTC,OAAQ,GAGNG,EAAe,CACjBP,KAAM,QACNC,MAAO,GACPC,YAAa,yDACbC,QAAS,YACTC,QAAS,GAGPI,EAAoB,CACtBR,KAAM,aACNC,KAAM,GACNC,YAAa,kEACbC,QAAS,YACTC,OAAQ,GAGNK,EAAkB,CACpBT,KAAM,WACNC,MAAO,GACPC,YAAa,yEACbC,QAAS,GACTC,OAAQ,GAGNM,EAAgB,CAClBV,KAAM,SACNC,KAAM,GACNC,YAAa,gEACbC,QAAS,GACTC,OAAQ,GAGNO,EAAwB,CAC1BX,KAAM,kBACNC,KAAM,GACNC,YAAa,qIACbE,OAAQ,EACRD,QAAS,IAGPS,EAAsB,CACxBZ,KAAM,gBACNC,KAAM,GACNC,YAAa,uEACbE,OAAQ,EACRD,QAAS,IAGPU,EAAgB,CAClBb,KAAM,SACNC,MAAO,GACPC,YAAa,0GACbE,OAAQ,EACRD,QAAS,IAGPW,EAAuB,CACzBd,KAAM,iBACNC,KAAM,GACNC,YAAa,+GACbE,OAAQ,EACRD,QAAS,IAGPY,EAAoB,CACtBf,KAAM,aACNC,KAAM,GACNC,YAAa,0FACbE,OAAQ,EACRD,QAAS,IAGAa,EAAY,WACrB,MAAO,CACHjB,EACAM,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACFE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElB,KAAKoB,cAAgBD,EAAEnB,KAAKoB,eAAiB,EAAI,O,2CCtG3DC,EAKT,WAAYrB,EAAcE,EAAqBoB,GAAiC,IAAZC,EAAW,uDAAH,EAAG,yBAJ/EvB,UAI+E,OAH/EuB,WAG+E,OAF/ErB,iBAE+E,OAD/EoB,cAC+E,EAC3EE,KAAKxB,KAAOA,EACZwB,KAAKD,MAAQA,EACbC,KAAKtB,YAAcA,EACnBsB,KAAKF,SAAWA,GC0BTG,EADI,IAAIJ,EAAc,aAAc,6BAlDvB,CACxB,CACIrB,KAAM,gBACN0B,UAAW,UACXxB,YAAa,8EACbyB,KAAM,WAEV,CACI3B,KAAM,eACN0B,UAAW,UACXxB,YAAa,kFACbyB,KAAM,UAEV,CACI3B,KAAM,UACN0B,UAAW,UACXxB,YAAa,2HACb0B,QAAS,CACL,+CACA,+CACA,+CACA,uCACA,uCACA,mDACA,2DAEJD,KAAM,UAEV,CACI3B,KAAM,WACN0B,UAAW,UACXxB,YAAa,qMACbyB,KAAM,UAEV,CACI3B,KAAM,WACN0B,UAAW,UACXxB,YAAa,wKACb0B,QAAS,CACL,4BACA,6BACA,6BACA,kDACA,sDACA,mDACA,2DAEJD,KAAM,YCpBCE,EADG,IAAIR,EAAc,YAAa,0BA1BrB,CACxB,CACIrB,KAAM,OACN0B,UAAW,YACXxB,YAAa,uDACbyB,KAAM,WAEV,CACI3B,KAAM,MACN0B,UAAW,YACXxB,YAAa,4CACbyB,KAAM,WAEV,CACI3B,KAAM,OACN0B,UAAW,YACXxB,YAAa,gCACbyB,KAAM,WAEV,CACI3B,KAAM,QACN0B,UAAW,YACXxB,YAAa,WACbyB,KAAM,aCFCG,EADA,IAAIT,EAAc,SAAU,6BApBf,CACxB,CACIrB,KAAM,iBACN0B,UAAW,UACXxB,YAAa,4DACbyB,KAAM,UAEV,CACI3B,KAAM,gBACN0B,UAAW,UACXxB,YAAa,uCACbyB,KAAM,UAEV,CACI3B,KAAM,QACN0B,UAAW,UACXxB,YAAa,sLACbyB,KAAM,YCOCI,EADE,IAAIV,EAAc,WAAY,iBAvBnB,CACxB,CACIrB,KAAM,UACN0B,UAAW,eACXxB,YAAa,sBACb0B,QAAS,CACL,0CAEJD,KAAM,UAEV,CACI3B,KAAM,iBACN0B,UAAW,eACXxB,YAAa,uDACbyB,KAAM,UAEV,CACI3B,KAAM,eACN0B,UAAW,eACXxB,YAAa,iHACbyB,KAAM,YCyBCK,EADE,IAAIX,EAAc,WAAY,kBA5CnB,CACxB,CACIrB,KAAM,aACN0B,UAAW,UACXxB,YAAa,6CACbyB,KAAM,UAEV,CACI3B,KAAM,aACN0B,UAAW,UACXxB,YAAa,iBACbyB,KAAM,UAEV,CACI3B,KAAM,QACN0B,UAAW,UACXxB,YAAa,kBACbyB,KAAM,UAEV,CACI3B,KAAM,QACN0B,UAAW,aACXxB,YAAa,0GACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,WACXxB,YAAa,4BACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,eACXxB,YAAa,yBACb0B,QAAS,CACL,wEACA,6DACA,0DACA,0DAEJD,KAAM,YC1BCM,EADC,IAAIZ,EAAc,UAAW,uBAdjB,CACxB,CACIrB,KAAM,gBACN0B,UAAW,eACXxB,YAAa,mKACbyB,KAAM,WAEV,CACI3B,KAAM,cACN0B,UAAW,eACXxB,YAAa,iHACbyB,KAAM,aCUCO,EADM,IAAIb,EAAc,eAAgB,uCApB3B,CACxB,CACIrB,KAAM,gBACN0B,UAAW,YACXxB,YAAa,maACbyB,KAAM,UAEV,CACI3B,KAAM,WACN0B,UAAW,YACXxB,YAAa,gQACbyB,KAAM,UAEV,CACI3B,KAAM,QACN0B,UAAW,YACXxB,YAAa,iMACbyB,KAAM,YCWCQ,EADO,IAAId,EAAc,gBAAiB,0CA3B7B,CACxB,CACIrB,KAAM,SACN0B,UAAW,aACXxB,YAAa,4FACbyB,KAAM,UAEV,CACI3B,KAAM,4BACN0B,UAAW,eACXxB,YAAa,yOACb0B,QAAS,CACL,2CACA,oCACA,gDAEJD,KAAM,UAGV,CACI3B,KAAM,eACN0B,UAAW,eACXxB,YAAa,+GACbyB,KAAM,YCKCS,EADC,IAAIf,EAAc,UAAW,GA3BjB,CACxB,CACIrB,KAAM,cACN0B,UAAW,aACXxB,YAAa,qGACbyB,KAAM,UAEV,CACI3B,KAAM,WACN0B,UAAW,UACXxB,YAAa,6GACbyB,KAAM,UAEV,CACI3B,KAAM,sBACN0B,UAAW,eACXxB,YAAa,yJACbyB,KAAM,UAEV,CACI3B,KAAM,cACN0B,UAAW,UACXxB,YAAa,4NACbyB,KAAM,YCgBCU,EADE,IAAIhB,EAAc,WAAY,sDAtCnB,CACxB,CACIrB,KAAM,YACN0B,UAAW,eACXxB,YAAa,mNACb0B,QAAS,CACL,+EACA,oEACA,2CACA,0DACA,4EACA,mDACA,iEACA,sEACA,2CAEJD,KAAM,UAEV,CACI3B,KAAM,UACN0B,UAAW,UACXxB,YAAa,kOACbyB,KAAM,UAEV,CACI3B,KAAM,sBACN0B,UAAW,eACXxB,YAAa,6QACbyB,KAAM,UAEV,CACI3B,KAAM,aACN0B,UAAW,eACXxB,YAAa,oDACbyB,KAAM,YCFCW,EADI,IAAIjB,EAAc,aAAc,gCA/BvB,CACxB,CACIrB,KAAM,UACN0B,UAAW,YACXxB,YAAa,8LACbyB,KAAM,UAEV,CACI3B,KAAM,sBACN0B,UAAW,YACXxB,YAAa,sKACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,YACXxB,YAAa,iIACb0B,QAAS,CACL,+BACA,uGAEJD,KAAM,UAEV,CACI3B,KAAM,iBACN0B,UAAW,YACXxB,YAAa,gJACbyB,KAAM,YCkBCY,EADD,IAAIlB,EAAc,QAAS,gDA5Cb,CACxB,CACIrB,KAAM,YACN0B,UAAW,aACXxB,YAAa,uDACbyB,KAAM,UAEV,CACI3B,KAAM,aACN0B,UAAW,aACXxB,YAAa,wDACbyB,KAAM,UAEV,CACI3B,KAAM,aACN0B,UAAW,eACXxB,YAAa,mFACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,eACXxB,YAAa,sEACbyB,KAAM,UAEV,CACI3B,KAAM,iBACN0B,UAAW,eACXxB,YAAa,uIACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,eACXxB,YAAa,sGACbyB,KAAM,UAEV,CACI3B,KAAM,YACN0B,UAAW,eACXxB,YAAa,wFACbyB,KAAM,YChCCa,EADA,IAAInB,EAAc,SAAU,SARf,CACxB,CACIrB,KAAM,aACN0B,UAAW,YACXxB,YAAa,eACbyB,KAAM,YCgBCc,EADC,IAAIpB,EAAc,UAAW,GApBjB,CACxB,CACIrB,KAAM,SACN0B,UAAW,UACXxB,YAAa,2DACbyB,KAAM,UAEV,CACI3B,KAAM,OACN0B,UAAW,UACXxB,YAAa,8DACbyB,KAAM,UAEV,CACI3B,KAAM,YACN0B,UAAW,aACXxB,YAAa,8CACbyB,KAAM,aCDCe,EADI,IAAIrB,EAAc,aAAc,GAfvB,CACxB,CACIrB,KAAM,eACN0B,UAAW,eACXxB,YAAa,2BACbyB,KAAM,WAEV,CACI3B,KAAM,YACN0B,UAAW,eACXxB,YAAa,wGACbyB,KAAM,YCWCgB,EADE,IAAItB,EAAc,WAAY,GArBnB,CACxB,CACIrB,KAAM,SACN0B,UAAW,eACXxB,YAAa,sDACbyB,KAAM,UAEV,CACI3B,KAAM,yBACN0B,UAAW,eACXxB,YAAa,yBACbyB,KAAM,UAEV,CACI3B,KAAM,gBACN0B,UAAW,eACXxB,YAAa,kDACbyB,KAAM,YCUCiB,EADG,IAAIvB,EAAc,YAAa,cA1BrB,CACxB,CACIrB,KAAM,iBACN0B,UAAW,eACXxB,YAAa,mBACbyB,KAAM,UAEV,CACI3B,KAAM,eACN0B,UAAW,eACXxB,YAAa,oBACbyB,KAAM,UAEV,CACI3B,KAAM,kBACN0B,UAAW,eACXxB,YAAa,wCACbyB,KAAM,UAEV,CACI3B,KAAM,gBACN0B,UAAW,eACXxB,YAAa,oBACbyB,KAAM,YCiBCkB,EADI,IAAIxB,EAAc,aAAc,GAvCvB,CACxB,CACIrB,KAAM,UACN0B,UAAW,eACXxB,YAAa,gFACbyB,KAAM,UAEV,CACI3B,KAAM,eACN0B,UAAW,eACXxB,YAAa,wDACbyB,KAAM,UAEV,CACI3B,KAAM,QACN0B,UAAW,eACXxB,YAAa,uCACbyB,KAAM,UAEV,CACI3B,KAAM,SACN0B,UAAW,eACXxB,YAAa,iIACb0B,QAAS,CAAC,wDACN,uDACA,8DACA,oGACA,4FACA,oGAEJD,KAAM,UAEV,CACI3B,KAAM,gBACN0B,UAAW,eACXxB,YAAa,6BACbyB,KAAM,aCpCd,kCAmBO,IAAMmB,EAAe,WACxB,MAAO,CACHrB,EACAI,EACAC,EACAC,EACAE,EACAD,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAD,GAEF3B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElB,KAAKoB,cAAgBD,EAAEnB,KAAKoB,eAAiB,EAAI,O,oIC1B3D2B,EAAgD,SAACC,GAAW,IAAD,EACtCC,qBAAWC,IAAcF,EAAMG,kBADO,mBAC7DC,EAD6D,KAClDC,EADkD,OAElCC,mBAAgD,QAFd,mBAE7DC,EAF6D,KAElDC,EAFkD,OAG1BF,oBAAS,GAHiB,mBAG7DG,EAH6D,KAG9CC,EAH8C,OAI5BJ,oBAAS,GAJmB,mBAI7DK,EAJ6D,KAI/CC,EAJ+C,KAMpE,OAAQ,yBAAKC,UAAU,kBACJ,SAAdN,EACG,4BAAQM,UAAU,WAAWC,QAAS,kBAAMN,EAAa,UAAzD,QAEA,4BAAQK,UAAU,WAAWC,QAAS,kBAAMN,EAAa,aAAzD,WAEJ,+BACI,+BACI,4BACI,wBAAIO,QAAS,GAAG,oDAGxB,+BACI,4BACI,4BACI,wCAEJ,4BACI,kBAAC,IAAD,CAAUC,IAAKZ,EAAUpD,KAAMiE,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAErD,KAAMmE,EAAKC,OAAQ,OAAQC,MAAO,KAAMC,QAASlB,EAAUkB,QAAQ,WAEvJ,4BACI,wCAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUmB,UAAWN,OAAQV,EAAWe,QAASlB,EAAUkB,QAAQ,WAEtF,4BACI,4CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUoB,SAAUP,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,WAAYC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,gBAGpK,4BACI,4BACI,0CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUsB,OAAQT,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAErD,KAAMmE,EAAKC,OAAQ,SAAUC,MAAO,KAAMC,QAASlB,EAAUkB,QAAQ,aAE3J,4BACI,wCAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUuB,UAAWV,OAAQV,EAAWe,QAASlB,EAAUkB,QAAQ,UADtF,KAEA,4BACI,6CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUwB,UAAWX,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,YAAaC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,iBAGtK,4BACI,4BACI,2CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUyB,QAASZ,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAErD,KAAMmE,EAAKC,OAAQ,UAAWC,MAAO,KAAMC,QAASlB,EAAUkB,QAAQ,cAE7J,4BACI,iDAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAU0B,kBAAmBb,OAAQV,EAAWe,QAASlB,EAAUkB,QAAQ,mBAE9F,4BACI,2CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAU2B,QAASd,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,UAAWC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,eAGlK,4BACI,4BACI,uCAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAU4B,IAAKf,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,MAAOC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,UAEtJ,4BACI,qDAEJ,6BAGA,4BACI,8CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAU6B,WAAYhB,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,aAAcC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,kBAGxK,4BACI,4BACI,oDAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAU8B,0BAA2BZ,QAASlB,EAAUkB,QAAQ,cAAeL,OAAQV,KAE1G,4BACI,2CAEJ,4BACI,kBAAC,IAAD,CAAUS,IAAKZ,EAAU+B,oBAAqBb,QAASlB,EAAUkB,QAAQ,kBAAmBL,OAAQV,KAExG,4BACI,gDAEJ,4BACI,kBAAC,IAAD,CAAUS,IAAKZ,EAAUgC,aAAcnB,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,eAAgBC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,oBAG5K,4BACI,4BACI,yDAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUiC,0BAA2BpB,OAAQV,EAAWe,QAASlB,EAAUkB,QAAQ,2BAEtG,4BACI,0CAEJ,oCAGA,4BACI,6CAEJ,4BACI,kBAAC,IAAD,CAAUN,IAAKZ,EAAUkC,UAAWrB,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,YAAaC,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,iBAGtK,4BACI,wBAAIP,QAAS,GAAb,cAGA,wBAAIA,QAAS,GAAb,oBAGA,wBAAIA,QAAS,GAAb,uBAIHwB,EAAI,EAAG,GAAGC,KAAI,SAAAC,GAAC,OACZ,4BACI,wBAAI1B,QAAS,GAAb,SACA,wBAAIA,QAAS,GAAb,SACA,wBAAIA,QAAS,GAAb,aAGR,4BACI,wBAAI2B,MAAO,CAAEC,OAAQ,QAAU5B,QAAS,GACpC,sCACA,2BAAOF,UAAU,cACb,+BACI,4BACI,qCACA,mCACA,sCAGR,+BACKT,EAAUwC,OAAOJ,KAAI,SAAAK,GAClB,OAAO,4BACH,4BACI,+BAAQA,EAAM7F,OAElB,6BACA,4BACI,kBAAC,IAAD,CAAUgE,IAAK6B,EAAMtE,MAAO0C,OAAQV,EAAWW,SAAU,SAACC,GAAD,OAASd,EAAS,CAAEe,OAAQ,QAASpE,KAAM6F,EAAM7F,KAAMqE,MAAOI,SAASN,MAASG,QAASlB,EAAUkB,QAAQ,SAAWuB,EAAM7F,aAIhMuF,EApLjB,GAoL8BnC,EAAUwC,OAAOE,QAAQN,KAAI,SAAAC,GACvC,OAAO,4BACH,gCAAM,yCACN,iCACA,wCAMpB,wBAAIC,MAAO,CAAEC,OAAQ,QAAU5B,QAAS,GACpC,qCAA0B,SAAdR,EAAwB,4BAAQM,UAAU,WAAWC,QAAS,kBAAMF,GAAiBD,KAA7D,YAAgG,MACpI,+BACI,+BACKA,EAAeoC,cAAcP,KAAI,SAAAQ,GAC9B,IAAMC,EAAgC7C,EAAUwC,OAAOM,MAAK,SAAAC,GAAC,OAAIA,EAAEnG,OAASgG,EAAKH,SACjF,YAAmBO,IAAfH,GAA4BA,EAAW1E,MAAqB,EAAbyE,EAAKzE,MAC7C,KACP6B,EAAUiD,MAAMH,MAAK,SAAAI,GAAC,OAAIA,EAAEtG,OAASgG,EAAKhG,QAAc,KAErD,wBAAI6D,UAAU,YACjB,4BACI,4BAAQC,QAAS,kBAAMT,EAAS,CAAEe,OAAQ,UAAWpE,KAAMgG,EAAKhG,KAAMqE,MAAO,EAAGkC,UAAWP,MAAUA,EAAKhG,MAD9G,KAC+HgG,EAAKzE,MADpI,KAC6IyE,EAAK9F,mBAGrJ,KACJkD,EAAUiD,MAAMb,KAAI,SAAAQ,GACjB,OAAO,4BACH,4BACKA,EAAKhG,KACN,4BAAQ8D,QAAS,kBAAMT,EAAS,CAAEe,OAAQ,aAAcpE,KAAMgG,EAAKhG,KAAMqE,MAAO,EAAGkC,UAAWP,MAA9F,UAIXT,EAAI5B,EAAe,EAAI6C,GAAapD,EAAUiD,MAAMP,QAAQN,KAAI,SAAAC,GAC7D,OAAO,4BACH,wCAMpB,wBAAIC,MAAO,CAAEC,OAAQ,QAAU5B,QAAS,GACpC,sCAA2B,SAAdR,EAAwB,4BAAQM,UAAU,WAAWC,QAAS,kBAAMJ,GAAkBD,KAA9D,aAAmG,MACxI,+BACI,+BACKA,EAAgBzC,cAAYwE,KAAI,SAAAiB,GAC7B,OAAO,wBAAI5C,UAAU,YACjB,4BACI,4BAAQC,QAAS,kBAAMT,EAAS,CAAEe,OAAQ,WAAYpE,KAAMyG,EAAMzG,KAAMqE,MAAO,EAAGqC,WAAYD,MAAWA,EAAMzG,MADnH,IACmIyG,EAAMvG,iBAG5I,KACJkD,EAAUuD,OAAOnB,KAAI,SAAAiB,GAClB,OAAO,4BACH,4BACKA,EAAMzG,KACP,4BAAQ8D,QAAS,kBAAMT,EAAS,CAAEe,OAAQ,cAAepE,KAAMyG,EAAMzG,KAAMqE,MAAO,EAAGqC,WAAYD,MAAjG,UAIXlB,EAAI9B,EAAgB,EAAI+C,EAAcpD,EAAUuD,OAAOb,QAAQN,KAAI,SAAAC,GAChE,OAAO,4BACH,uCAKhB,wBAAIC,MAAO,CAAEkB,UAAW,SAAxB,cACA,+BACI,+BACKrB,EAAIiB,GAAa,GAAGhB,KAAI,SAAAC,GAAC,OAAI,4BAC1B,yCAOpB,4BACI,wBAAIC,MAAO,CAAEC,OAAQ,QAAU5B,QAAS,GACpC,0CAEJ,wBAAIA,QAAS,EAAG2B,MAAO,CAAEmB,cAAe,WACpC,yCAIR,4BACI,wBAAInB,MAAO,CAAEC,OAAQ,QAAU5B,QAAS,GAEpC,+BACI,+BACI,4BACI,wBAAIF,UAAU,SAAd,UAGA,wBAAIA,UAAU,WAAd,MAGA,wBAAIA,UAAU,WAAd,MAGA,wBAAIA,UAAU,YAAd,UAGA,wBAAIA,UAAU,YAAd,QAGA,wBAAIA,UAAU,YAAd,UAGA,wBAAIA,UAAU,YAAd,WAKR,+BACK0B,EAAI,EAAG,GAAGC,KAAI,SAAAC,GAAC,OACZ,4BACI,wBAAI5B,UAAU,UAGd,wBAAIA,UAAU,YAGd,wBAAIA,UAAU,YAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,mBAQ9B,+BACI,+BACI,4BACI,wBAAIA,UAAU,SAAd,QAGA,wBAAIA,UAAU,YAAd,SAGA,wBAAIA,UAAU,YAAd,SAGA,wBAAIA,UAAU,YAAd,UAGA,wBAAIA,UAAU,YAAd,WAKR,+BACK0B,EAAI,GAAI,GAAGC,KAAI,SAAAC,GAAC,OACb,4BACI,wBAAI5B,UAAU,UAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,aAGd,wBAAIA,UAAU,qBAWtC,4BACI,wBAAIE,QAAS,GACT,sCAEJ,wBAAIA,QAAS,EAAG2B,MAAO,CAAEmB,cAAe,WACpC,yCAIPtB,EAAI,GAAI,GAAGC,KAAI,SAAAC,GAAC,OACb,4BACI,wBAAI1B,QAAS,GAAb,aAQlBwB,EAAM,SAACuB,EAAiBC,GAG1B,IAFA,IAAMtB,EAAIuB,KAAKC,IAAIH,EAAUC,EAAM,GAC/BG,EAAK,IAAIC,MACJC,EAAU,EAAGA,EAAU3B,EAAG2B,IAC/BF,EAAGG,KAAKD,GAEZ,OAAOF,I,opBC/YJ,IAAMhE,EAAe,SAACoE,EAAkBlD,GAC3C,OAAQA,EAAOA,QACX,IAAK,WAAY,OAAO,IAAImD,IAAJ,KAAmBD,EAAnB,CAA0B9C,SAAUJ,EAAOC,SACnE,IAAK,UAAW,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0BvC,QAASX,EAAOC,SACjE,IAAK,YAAa,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0B1C,UAAWR,EAAOC,SACrE,IAAK,YAAa,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0BhC,UAAWlB,EAAOC,SACrE,IAAK,aAAc,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0BrC,WAAYb,EAAOC,SACvE,IAAK,eAAgB,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0BlC,aAAchB,EAAOC,SAC3E,IAAK,MAAO,OAAO,IAAIkD,IAAJ,KAAmBD,EAAnB,CAA0BtC,IAAKZ,EAAOC,SACzD,IAAK,QACD,IAAImD,EAAI,IAAID,IAAJ,KACDD,IAGP,OADAE,EAAE5B,OAAO0B,EAAM1B,OAAO6B,WAAU,SAAAtB,GAAC,OAAIA,EAAEnG,OAASoE,EAAOpE,SAAOuB,MAAQ6C,EAAOC,MACtEmD,EACX,IAAK,OAAQ,OAAO,IAAID,IAAJ,KAAmBD,EAAnB,CAA0BtH,KAAMoE,EAAOpE,MAAQ,MACnE,IAAK,UAAW,OAAO,IAAIuH,IAAJ,KAAmBD,EAAnB,CAA0BzC,QAAST,EAAOpE,MAAQ,MACzE,IAAK,SAAU,OAAO,IAAIuH,IAAJ,KAAmBD,EAAnB,CAA0B5C,OAAQN,EAAOpE,MAAQ,MACvE,IAAK,aAAc,OAAO,IAAIuH,IAAJ,KAAmBD,EAAnB,CAA0BI,WAAYtD,EAAOpE,MAAQ,MAEnF,GAAsB,YAAlBoE,EAAOA,QACP,QAAyBgC,IAArBhC,EAAOmC,UACP,OAAO,IAAIgB,IAAJ,KAAmBD,EAAnB,CAA0BjB,MAAM,GAAD,mBAAMiB,EAAMjB,OAAZ,CAAmBjC,EAAOmC,mBAEnE,IAAsB,eAAlBnC,EAAOA,OAAyB,CACrC,IAAIoD,EAAI,IAAID,IAAJ,KACDD,IAEP,QAAyBlB,IAArBhC,EAAOmC,UAAyB,CAChC,IAAIoB,EAAMvD,EAAOmC,UACjBiB,EAAEnB,MAAQmB,EAAEnB,MAAMuB,QAAO,SAAAtB,GAAC,OAAIA,EAAEtG,OAAS2H,EAAI3H,QAEjD,OAAOwH,EAEN,GAAsB,aAAlBpD,EAAOA,QACZ,QAA0BgC,IAAtBhC,EAAOsC,WACP,OAAO,IAAIa,IAAJ,KAAmBD,EAAnB,CAA0BX,OAAO,GAAD,mBAAMW,EAAMX,QAAZ,CAAoBvC,EAAOsC,qBAGrE,GAAsB,gBAAlBtC,EAAOA,OAA0B,CACtC,IAAIoD,EAAI,IAAID,IAAJ,KACDD,IAEP,QAA0BlB,IAAtBhC,EAAOsC,WAA0B,CACjC,IAAIiB,EAAMvD,EAAOsC,WACjBc,EAAEb,OAASa,EAAEb,OAAOiB,QAAO,SAAAtB,GAAC,OAAIA,EAAEtG,OAAS2H,EAAI3H,QAEnD,OAAOwH,GAEX,OAAOF,I,yEC5CLO,EAAe,CACjBzH,OAAQ,EACRD,QAAS,IAEA2H,EAAb,WAaI,WAAYC,GAAmC,IAAtBC,EAAqB,uDAALH,EAAK,yBAZ9C7H,UAY8C,OAX9C6F,WAW8C,OAV9CtE,WAU8C,OAT9CpB,aAS8C,OAR9CC,YAQ8C,OAP9C6H,kBAO8C,EAC1CzG,KAAKxB,KAAO+H,EAAK/H,KACjBwB,KAAKqE,MAAQkC,EAAKlC,MAClBrE,KAAKD,MAAQwG,EAAKxG,MAClBC,KAAKyG,aAAeF,EAAK7H,YACzBsB,KAAKrB,QAAU6H,EAAK7H,QACpBqB,KAAKpB,OAAS4H,EAAK5H,OAnB3B,0DAQQ,OAAO,oCAAGoB,KAAKyG,gBARvB,6BAWQ,OAAoB,GAAbzG,KAAKD,UAXpB,KCiFa2G,EAAc,CApGD,IAAIJ,EAAa,CACvC9H,KAAM,aACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,+FACd,CACCC,QAAS,QACTC,OAAQ,IAG6B,IAAI0H,EAAa,CACtD9H,KAAM,8BACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,uDACd,CACCC,QAAS,aACTC,OAAQ,IAG8B,IAAI0H,EAAa,CACvD9H,KAAM,+BACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,wDACd,CACCC,QAAS,cACTC,OAAQ,IAG6B,IAAI0H,EAAa,CACtD9H,KAAM,8BACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,uDACd,CACCC,QAAS,aACTC,OAAQ,IAGe,IAAI0H,EAAa,CACxC9H,KAAM,eACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,uFACd,CACCC,QAAS,UACTC,OAAQ,IAGqB,IAAI0H,EAAa,CAC9C9H,KAAM,sBACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,wFACd,CACCC,QAAS,UACTC,OAAQ,IAGqB,IAAI0H,EAAa,CAC9C9H,KAAM,sBACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,uFACd,CACCC,QAAS,UACTC,OAAQ,IAGqB,IAAI0H,EAAa,CAC9C9H,KAAM,qBACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,gHACd,CACCC,QAAS,WACTC,OAAQ,IAGe,IAAI0H,EAAa,CACxC9H,KAAM,eACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,yLACd,CACCC,QAAS,WACTC,OAAQ,IAGiB,IAAI0H,EAAa,CAC1C9H,KAAM,gBACN6F,MAAO,SACPtE,MAAO,EACPrB,YAAa,wHACd,CACCC,QAAS,IACTC,OAAQ,KCrCC+H,EAAgB,CA5DQ,IAAIL,EAAa,CAClD9H,KAAM,0BACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,4CACd,CACCC,QAAS,UACTC,OAAQ,IAGuB,IAAI0H,EAAa,CAChD9H,KAAM,uBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,8BACd,CACCC,QAAS,QACTC,OAAQ,IAG4B,IAAI0H,EAAa,CACrD9H,KAAM,6BACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,4DACd,CACCC,QAAS,aACTC,OAAQ,IAGiC,IAAI0H,EAAa,CAC1D9H,KAAM,iCACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,6FACd,CACCC,QAAS,iBACTC,OAAQ,IAGuB,IAAI0H,EAAa,CAChD9H,KAAM,uBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,+CACd,CACCC,QAAS,SACTC,OAAQ,IAGwB,IAAI0H,EAAa,CACjD9H,KAAM,wBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,gDACd,CACCC,QAAS,SACTC,OAAQ,KCzDCgI,EAAkB,IAAIN,EAAa,CAC5C9H,KAAM,gBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,+DACd,CACCC,QAAS,YACTC,OAAQ,IAGCiI,EAAmB,IAAIP,EAAa,CAC7C9H,KAAM,iBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,+FACd,CACCC,QAAS,aACTC,OAAQ,IAGCkI,EAAmB,IAAIR,EAAa,CAC7C9H,KAAM,iBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,gGACd,CACCC,QAAS,aACTC,OAAQ,IAGCmI,EAAwB,IAAIT,EAAa,CAClD9H,KAAM,sBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,8EACd,CACCC,QAAS,kBACTC,OAAQ,KAGCoI,EAAuB,IAAIV,EAAa,CACjD9H,KAAM,qBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,6EACd,CACCC,QAAS,iBACTC,OAAQ,KAGCqI,EAAwB,IAAIX,EAAa,CAClD9H,KAAM,sBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,+EACd,CACCC,QAAS,kBACTC,OAAQ,KAaCsI,EAAa,CAACF,EAAsBH,EAAkBD,EAVpC,IAAIN,EAAa,CAC5C9H,KAAM,gBACN6F,MAAO,QACPtE,MAAO,EACPrB,YAAa,mFACd,CACCC,QAAS,YACTC,OAAQ,KAGyFkI,EAAkBG,EAAuBF,GCpExII,EAAqB,CACvBxI,QAAS,SACTC,OAAQ,GAGNwI,E,WAOF,WAAY5I,EAAcE,GAAsB,yBANhDF,UAM+C,OAL/C6F,WAK+C,OAJ/CtE,WAI+C,OAH/CpB,aAG+C,OAF/CC,YAE+C,OAD/C6H,kBAC+C,EAC3CzG,KAAKxB,KAAOA,EACZwB,KAAKqE,MAAQ,SACbrE,KAAKD,MAAQ,EACbC,KAAKyG,aAAe/H,EACpBsB,KAAKrB,QAAUwI,EAAUxI,QACzBqB,KAAKpB,OAASuI,EAAUvI,O,0DAGxB,OAAO,oCAAGoB,KAAKyG,gB,6BAGf,OAAoB,GAAbzG,KAAKD,U,KAIPsH,EAAkB,IAAID,EAC/B,mBACA,iVAcSE,EAAc,CAVA,IAAIF,EAC3B,eACA,sKAEmB,IAAIA,EAAc,UACrC,6RAEkB,IAAIA,EAAc,SACpC,8SAEsDC,GChB7CE,EAAqB,CA9BT,IAAIjB,EAAa,CACtC9H,KAAM,YACN6F,MAAO,gBACPtE,MAAO,EACPrB,YAAa,kFACd,CACCC,QAAS,aACTC,OAAQ,IAGW,IAAI0H,EAAa,CACpC9H,KAAM,UACN6F,MAAO,gBACPtE,MAAO,EACPrB,YAAa,8FACd,CACCC,QAAS,SACTC,OAAQ,IAGU,IAAI0H,EAAa,CACnC9H,KAAM,SACN6F,MAAO,gBACPtE,MAAO,EACPrB,YAAa,0BACd,CACCC,QAAS,SACTC,OAAQ,KCGC4I,EAAoB,CA9BL,IAAIlB,EAAa,CACzC9H,KAAM,eACN6F,MAAO,eACPtE,MAAO,EACPrB,YAAa,iJACd,CACCC,QAAS,gBACTC,OAAQ,IAGY,IAAI0H,EAAa,CACrC9H,KAAM,WACN6F,MAAO,eACPtE,MAAO,EACPrB,YAAa,+FACd,CACCC,QAAS,WACTC,OAAQ,IAGS,IAAI0H,EAAa,CAClC9H,KAAM,QACN6F,MAAO,eACPtE,MAAO,EACPrB,YAAa,qDACd,CACCC,QAAS,QACTC,OAAQ,KCGC6I,EAAe,CA9BA,IAAInB,EAAa,CACzC9H,KAAM,iBACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,sDACd,CACCC,QAAS,eACTC,OAAQ,IAGY,IAAI0H,EAAa,CACrC9H,KAAM,WACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,yEACd,CACCC,QAAS,eACTC,OAAQ,IAGc,IAAI0H,EAAa,CACvC9H,KAAM,cACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,qFACd,CACCC,QAAS,eACTC,OAAQ,KCGC8I,EAAe,CA9BN,IAAIpB,EAAa,CACnC9H,KAAM,SACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,0FACd,CACCC,QAAS,SACTC,OAAQ,IAGc,IAAI0H,EAAa,CACvC9H,KAAM,aACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,uGACd,CACCC,QAAS,aACTC,OAAQ,IAGa,IAAI0H,EAAa,CACtC9H,KAAM,YACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,wFACd,CACCC,QAAS,YACTC,OAAQ,KCGC+I,EAAgB,CA9BG,IAAIrB,EAAa,CAC7C9H,KAAM,oBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,4EACd,CACCC,QAAS,SACTC,OAAQ,IAGoB,IAAI0H,EAAa,CAC7C9H,KAAM,oBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,qFACd,CACCC,QAAS,WACTC,OAAQ,IAGkB,IAAI0H,EAAa,CAC3C9H,KAAM,kBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,4EACd,CACCC,QAAS,UACTC,OAAQ,KCGCgJ,EAAgB,CA9BN,IAAItB,EAAa,CACpC9H,KAAM,UACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,iFACd,CACCC,QAAS,UACTC,OAAQ,IAGmB,IAAI0H,EAAa,CAC5C9H,KAAM,mBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,8EACd,CACCC,QAAS,UACTC,OAAQ,IAGc,IAAI0H,EAAa,CACvC9H,KAAM,aACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,qCACd,CACCC,QAAS,iBACTC,OAAQ,KCaCiJ,EAAgB,CAxCP,IAAIvB,EAAa,CACnC9H,KAAM,SACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,gHACd,CACCC,QAAS,UACTC,OAAQ,IAGkB,IAAI0H,EAAa,CAC3C9H,KAAM,kBACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,iHACd,CACCC,QAAS,YACTC,OAAQ,IAGW,IAAI0H,EAAa,CACpC9H,KAAM,UACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,wCACd,CACCC,QAAS,UACTC,OAAQ,IAGgB,IAAI0H,EAAa,CACzC9H,KAAM,eACN6F,MAAO,WACPtE,MAAO,EACPrB,YAAa,oEACd,CACCC,QAAS,aACTC,OAAQ,KCPCkJ,EAAe,CA9BC,IAAIxB,EAAa,CAC1C9H,KAAM,iBACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,wHACd,CACCC,QAAS,gBACTC,OAAQ,IAGc,IAAI0H,EAAa,CACvC9H,KAAM,cACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,uHACd,CACCC,QAAS,aACTC,OAAQ,IAGqB,IAAI0H,EAAa,CAC9C9H,KAAM,qBACN6F,MAAO,UACPtE,MAAO,EACPrB,YAAa,kIACd,CACCC,QAAS,oBACTC,OAAQ,KCPCmJ,EAAkB,CApBJ,IAAIzB,EAAa,CACxC9H,KAAM,eACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,sGACd,CACCC,QAAS,WACTC,OAAQ,IAGa,IAAI0H,EAAa,CACtC9H,KAAM,YACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,yEACd,CACCC,QAAS,OACTC,OAAQ,KCjBCoJ,EAAU,IAAI1B,EAAa,CACpC9H,KAAM,UACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,kEACd,CACCC,QAAS,QACTC,OAAQ,IAGCqJ,EAAS,IAAI3B,EAAa,CACnC9H,KAAM,SACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,2DACd,CACCC,QAAS,MACTC,OAAQ,IAGCsJ,EAAS,IAAI5B,EAAa,CACnC9H,KAAM,SACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,iEACd,CACCC,QAAS,OACTC,OAAQ,IA2CCuJ,EAAiB,CAACH,EAASC,EAxCjB,IAAI3B,EAAa,CACpC9H,KAAM,UACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,mEACd,CACCC,QAAS,OACTC,OAAQ,IAiC6CsJ,EA9BhC,IAAI5B,EAAa,CACtC9H,KAAM,aACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,iEACd,CACCC,QAAS,SACTC,OAAQ,IAGiB,IAAI0H,EAAa,CAC1C9H,KAAM,iBACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,yDACd,CACCC,QAAS,OACTC,OAAQ,IAGkB,IAAI0H,EAAa,CAC3C9H,KAAM,kBACN6F,MAAO,YACPtE,MAAO,EACPrB,YAAa,yDACd,CACCC,QAAS,OACTC,OAAQ,KC3BCwJ,EAAkB,CAxCR,IAAI9B,EAAa,CACpC9H,KAAM,UACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,oEACd,CACCC,QAAS,UACTC,OAAQ,IAGY,IAAI0H,EAAa,CACrC9H,KAAM,WACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,+EACd,CACCC,QAAS,QACTC,OAAQ,IAGU,IAAI0H,EAAa,CACnC9H,KAAM,SACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,qFACd,CACCC,QAAS,QACTC,OAAQ,IAGW,IAAI0H,EAAa,CACpC9H,KAAM,UACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,oEACd,CACCC,QAAS,SACTC,OAAQ,KCGCyJ,EAAkB,CAxCN,IAAI/B,EAAa,CACtC9H,KAAM,sBACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,iHACd,CACCC,QAAS,OACTC,OAAQ,IAGuB,IAAI0H,EAAa,CAChD9H,KAAM,uBACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,mHACd,CACCC,QAAS,sBACTC,OAAQ,IAGkB,IAAI0H,EAAa,CAC3C9H,KAAM,kBACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,mKACd,CACCC,QAAS,iBACTC,OAAQ,IAGc,IAAI0H,EAAa,CACvC9H,KAAM,cACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,yIACd,CACCC,QAAS,aACTC,OAAQ,KCLC0J,EAAkB,CAhCD,IAAIhC,EAAa,CAC3C9H,KAAM,kBACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,sGACd,CACCC,QAAS,UACTC,OAAQ,IAGY,IAAI0H,EAAa,CACrC9H,KAAM,WACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,qJAGO,IAAI4H,EAAa,CACrC9H,KAAM,WACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,qGAGS,IAAI4H,EAAa,CACvC9H,KAAM,cACN6F,MAAO,aACPtE,MAAO,EACPrB,YAAa,sG,kCCXV,IAAM6F,EAAc,WACvB,MAAO,sBACAmC,GADA,YAEAC,GAFA,YAGAO,GAHA,YAIAI,GAJA,YAKAC,GALA,YAMAC,GANA,YAOAC,GAPA,YAQAC,GARA,YASAC,GATA,YAUAC,GAVA,YAWAC,GAXA,YAYAC,GAZA,YAaAC,GAbA,YAcAI,GAdA,YAeAC,GAfA,YAgBAC,GAhBA,YAiBAC,IAEL7I,KAAK8I,IAGLA,EAAW,SAACC,EAAgBC,GAC9B,OAAID,EAASnE,QAAUoE,EAASpE,MAAcmE,EAASnE,MAAQoE,EAASpE,MAAQ,GAAK,EACzEmE,EAAS/J,KAAOgK,EAAShK,KAAO,GAAK,I,oJCvCxCiK,EAAO,SAACC,GAEjB,IADA,IAAIC,EAAI,EACC3E,EAAI,EAAGA,GAAK0E,EAAG1E,IACpB2E,GAAK3E,EAET,OAAO2E,GAyBE7C,EAAb,WAeI,WAAY8C,GAAoB,yBAdhCrK,UAc+B,OAb/B6E,aAa+B,OAZ/BH,YAY+B,OAX/BM,SAW+B,OAV/B0C,gBAU+B,OAT/BlD,cAS+B,OAR/BO,aAQ+B,OAP/BH,eAO+B,OAN/BK,gBAM+B,OAL/BK,eAK+B,OAJ/BF,kBAI+B,OAH/BQ,YAG+B,OAF/BS,WAE+B,OAD/BM,YAC+B,EAC3BnF,KAAKxB,KAAQqK,GAAQA,EAAKrK,MAAS,GACnCwB,KAAKqD,QAAWwF,GAAQA,EAAKxF,SAAY,GACzCrD,KAAKkD,OAAU2F,GAAQA,EAAK3F,QAAW,GACvClD,KAAKkG,WAAc2C,GAAQA,EAAK3C,YAAe,GAC/ClG,KAAKgD,SAAY6F,GAAQA,EAAK7F,UAAa,EAC3ChD,KAAKuD,QAAWsF,GAAQA,EAAKtF,SAAY,EACzCvD,KAAKoD,UAAayF,GAAQA,EAAKzF,WAAc,EAC7CpD,KAAKyD,WAAcoF,GAAQA,EAAKpF,YAAe,EAC/CzD,KAAK8D,UAAa+E,GAAQA,EAAK/E,WAAc,EAC7C9D,KAAK4D,aAAgBiF,GAAQA,EAAKjF,cAAiB,EACnD5D,KAAKoE,OAAUyE,GAAQA,EAAKzE,QAAW9C,cACvCtB,KAAKmF,OAAU0D,GAAQA,EAAK1D,QAAW,QAC1BP,IAATiE,QAAqCjE,IAAfiE,EAAKhE,MAAqB7E,KAAK6E,MAAQgE,EAAKhE,MACjE7E,KAAK6E,MAAQ,GAClB7E,KAAKwD,IAAOqF,GAAQA,EAAKrF,KAAQ,GA9BzC,0EAkCQ,OAAOxD,KAAK6E,MAAMP,OAAS,EAAItE,KAAK6E,MAAMb,KAAI,SAAAc,GAAC,OAAIA,EAAErG,UAAQqK,QAAO,SAACpJ,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,IAlC/F,qDAsCQ,OAAOK,KAAKmF,OAAOb,OAAS,EAAItE,KAAKmF,OAAOnB,KAAI,SAAA+E,GAAC,OAAIA,EAAEtK,QAAMqK,QAAO,SAACpJ,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,IAtC/F,qDA0CQ,OAAOK,KAAKoE,OAAOJ,KAAI,SAAAW,GAAC,OAAI+D,EAAK/D,EAAE5E,UAAQ+I,QAAO,SAACpJ,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,KA1C3E,wDA8CQ,IAAMqJ,EAAgC,YAAjBhJ,KAAKqD,QAAwB,EAAI,EACtD,OAA6B,EAAtBqF,EAAK1I,KAAKgD,UACU,EAArB0F,EAAK1I,KAAKuD,SACa,EAAvBmF,EAAK1I,KAAKoD,WACc,EAAxBsF,EAAK1I,KAAKyD,YACa,EAAvBiF,EAAK1I,KAAK8D,WACV4E,EAAK1I,KAAK4D,cAAgBoF,IApDxC,gDAwDQ,OAAOhJ,KAAKiJ,8BAAgCjJ,KAAKkJ,+BAAiClJ,KAAKmJ,iCAxD/F,wDA4DQ,OAAOnJ,KAAKoJ,0BAA4BpJ,KAAKqJ,oCA5DrD,gDAgEQ,OAAOrJ,KAAKsJ,6BAA+BtJ,KAAKoJ,4BAhExD,oCAmE0BG,GAClB,IAAIlF,EAAQrE,KAAKoE,OAAOM,MAAK,SAAAC,GAAC,OAAIA,EAAEnG,OAAS+K,KAC7C,YAAc3E,IAAVP,EAA4BA,EAAMtE,MAC/B,IAtEf,0CA0EQ,IAAMyJ,EAASxJ,KAAKyJ,cAAc,UAC5BC,EAAa1J,KAAKyJ,cAAc,cACtC,OAAO,GAAKzJ,KAAKuD,QAAUiC,KAAKC,IAAI+D,EAAQE,KA5EpD,6CA4JQ,OAAO3D,EAAU4D,qBAAqB3J,KAAKwD,OA5JnD,+CAgKQ,OAAOuC,EAAU6D,uBAAuB5J,KAAKwD,OAhKrD,+CAoKQ,OAAOuC,EAAU8D,uBAAuB7J,KAAKwD,OApKrD,gDAwKQ,OAAOuC,EAAU+D,wBAAwB9J,KAAKwD,OAxKtD,mDA6KQ,OAAQxD,KAAKqD,SACT,IAAK,QAAS,OAAOrD,KAAK+J,uBAC1B,IAAK,UAAW,OAAO/J,KAAKgK,yBAC5B,IAAK,UAAW,OAAOhK,KAAKiK,yBAC5B,IAAK,WAAY,OAAOjK,KAAKkK,0BAC7B,QAAS,OAAOlK,KAAK+J,0BAlLjC,gDAuLQ,OAAI/J,KAAKwD,IAAM,GAAW,IAAOxD,KAAKmK,QAAQ,OAAS,GACnDnK,KAAKwD,IAAM,GAAW,MAASxD,KAAKmK,QAAQ,OAAS,GACrDnK,KAAKwD,IAAM,GAAW,IAAOxD,KAAKmK,QAAQ,OAAS,GACnDnK,KAAKwD,IAAM,GAAW,OAAUxD,KAAKmK,QAAQ,OAAS,GACtDnK,KAAKwD,IAAM,GAAW,MAASxD,KAAKmK,QAAQ,OAAS,GACrDnK,KAAKwD,IAAM,GAAW,OAAUxD,KAAKmK,QAAQ,OAAS,GACnD,IA7Lf,gCAiMQ,OAAOnK,KAAKgD,SAA4B,EAAjBhD,KAAKoD,UAAgBpD,KAAKmK,QAAQ,UAjMjE,gCAqMQ,OAAOnK,KAAKoD,UAA6B,EAAjBpD,KAAK8D,UAAgB9D,KAAKmK,QAAQ,UArMlE,wCAyMQ,OAAwB,EAAjBnK,KAAK8D,UAAgB9D,KAAKmK,QAAQ,kBAzMjD,4CA6MQ,OAAO3E,KAAK4E,MAAMpK,KAAKgD,SAAW,GAAKhD,KAAKmK,QAAQ,gBA7M5D,6CAiNQ,OAAO3E,KAAK4E,MAAMpK,KAAKgD,SAAW,GAAKhD,KAAKmK,QAAQ,iBAjN5D,4CAoNQ,OAAO3E,KAAK4E,MAAMpK,KAAKgD,SAAW,GAAKhD,KAAKmK,QAAQ,gBApN5D,oCAwNQ,OAAOnK,KAAKyD,WAAazD,KAAKuD,QAAUvD,KAAKmK,QAAQ,cAxN7D,8BA2NmBxL,GAEX,OAAOqB,KAAKqK,MAAM1L,EAASqB,KAAK6E,MAAO,GAAK7E,KAAKqK,MAAM1L,EAASqB,KAAKmF,OAAQ,KA7NrF,8BAgOmBmF,GACX,OAAQA,GACJ,IAAK,WAAY,MAAO,eACxB,IAAK,YAAa,MAAO,UACzB,IAAK,UAAW,MAAO,sBACvB,IAAK,aAAc,MAAO,kBAC1B,IAAK,eAAgB,MAAO,cAC5B,IAAK,YAAa,MAAO,gBACzB,IAAK,OAAQ,MAAO,gBACpB,IAAK,OAAQ,MAAO,iBACpB,IAAK,eAAgB,MAAO,WAC5B,IAAK,MAAO,MAAO,UACnB,IAAK,cAAe,MAAO,iBAC3B,IAAK,OACL,IAAK,SACL,IAAK,UAAW,MAAO,GACvB,IAAK,aAAc,MAAO,mBAC1B,IAAK,uBAAwB,MAAO,YACpC,IAAK,iBAAkB,MAAO,mBAC9B,QAAS,MAAO,MAnP5B,4BAuPkB3L,EAAiB4L,EAAgBC,GAC3C,IAAI7F,EAAI4F,EAAInE,QAAO,SAAA5B,GAAI,OAAIA,EAAK7F,UAAYA,KAASqF,KAAI,SAAAc,GAAC,OAAIA,EAAElG,UAChE,OAAI+F,EAAEL,OAAS,EAAUK,EAAEmE,QAAO,SAACpJ,EAAGC,GAAJ,OAAUD,EAAIC,KACpC6K,KA1PpB,uCA+EmCC,EAAeC,EAAqBC,EAAqBnH,GACpF,IAAIsB,EAAI2F,EACJC,EAAUpG,SAAWqG,EAAUrG,QAAQsG,QAAQC,MAAM,qDACzD,IAAIC,EAAY,EAChB,IAAK,IAAIC,KAASL,EAAW,CACzB,IAAIM,EAAkBN,EAAUK,GAC5BE,EAAWN,EAAUI,GAErBG,EAAWF,EAAkBF,EAC7BtH,EAAMsH,IAAWhG,GAAKU,KAAK2F,IAAI3H,EAAMsH,EAAWI,GAAYD,GAChEH,EAAYE,EAGhB,OAAOlG,IA5Ff,2CA+FuCtB,GAC/B,OAAOuC,EAAUqF,gBAAgB,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI5H,KAhG7E,6CAmGyCA,GACjC,OAAOuC,EAAUqF,gBAAgB,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI5H,KApG7E,6CAuGyCA,GACjC,OAAOuC,EAAUqF,gBAAgB,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAK5H,KAxGvG,8CA2G0CA,GAClC,OAAOuC,EAAUqF,gBAAgB,EAAG,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI5H,KA5G7E,+CA+G2CA,GACnC,OAAIA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACd,IAxHf,iDA2H6CA,GACrC,OAAIA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACd,IApIf,iDAuI6CA,GACrC,OAAIA,EAAM,IAAY,EAClBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACd,IA5If,kDA+I8CA,GACtC,OAAIA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACjBA,EAAM,GAAW,EACjBA,EAAM,GAAW,IACd,MAxJf,M,oKC9BM6H,EAAkBC,gBAAK,kBAAM,sDAC7BC,EAAaD,gBAAK,kBAAM,uDACxBE,EAAeF,gBAAK,kBAAM,sDAC1BG,EAASH,gBAAK,kBAAM,6DACpBI,EAAeJ,gBAAK,kBAAM,sDAyE1BK,EAAkC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACrD,OAAID,EAAmB,kBAAC,WAAD,CAAUE,SAAU,4CAAwBD,GACvD,MASRE,EAA4B,SAACvK,GACjC,OAAO,yBAAKa,UAAU,WACpB,yBAAKA,UAAU,gBACZb,EAAMwK,QAAQhI,KAAI,SAAAiI,GAAM,OACvB,kBAAC,EAAD,CAAKC,OAAQD,IAAWzK,EAAM2K,QAASC,IAAKH,EAAQ3J,QAAS,kBAAMd,EAAM6K,SAASJ,KAAUA,SAW9FK,EAA2B,SAAC9K,GAChC,OAAO,4BAAQa,UAAWb,EAAM0K,OAAS,yBAA2B,eAAgB5J,QAAS,kBAAMd,EAAMc,YAAYd,EAAMqK,WAG9GU,EArGO,WACpB,IAD0B,EAEMzK,mBADnB,QADa,mBAEnB0K,EAFmB,KAETC,EAFS,OAGQ3K,mBAAS,IAAIiE,KAHrB,mBAGnBnE,EAHmB,KAGR8K,EAHQ,KAWtBV,EAAU,CAVD,OAGU,kBACF,gBACF,cACE,eACE,iBACR,mBACD,SAYd,OACE,oCACE,kBAAC,EAAD,CAAMK,SAAU,SAACJ,GAAD,OAJkBQ,EAIIR,IAASD,QAASA,EAASG,QAASK,IAC1E,yBAAKnK,UAAU,QAEb,kBAAC,EAAD,CAAauJ,WA1BN,SA0BkBY,GACvB,kBAACG,EAAA,EAAD,0BACA,wIACA,wKACA,8bAGA,oSAEF,kBAAC,EAAD,CAAaf,WAhCI,oBAgCQY,GACvB,kBAACjL,EAAA,EAAD,CAAgBqL,kBAAmB,SAACC,GAAQH,EAAaG,GAAIJ,EAAY,SAAY9K,iBAAkBC,KAEzG,kBAAC,EAAD,CAAagK,WAlCE,kBAkCUY,GACvB,kBAACd,EAAD,OAEF,kBAAC,EAAD,CAAaE,WApCA,gBAoCYY,GACvB,kBAACjB,EAAD,OAEF,kBAAC,EAAD,CAAaK,WAtCE,iBAsCUY,GACvB,kBAAChB,EAAD,OAEF,kBAAC,EAAD,CAAaI,WAxCI,mBAwCQY,GACvB,kBAACnB,EAAD,OAEF,kBAAC,EAAD,CAAaO,WA1CJ,qBA0CgBY,GACvB,kBAACf,EAAD,OAEF,kBAAC,EAAD,CAAaG,WA5CL,UA4CiBY,GACvB,qCACA,0DACA,6DACA,gEACA,oFACA,+GACA,0BAAMtI,MAAO,CAAE4I,MAAO,QAASC,SAAU,SAAzC,wCC5DUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,+BE3InB,sDAOaC,EAAgC,SAAC,GAA8B,IAA5BtL,EAA2B,EAA3BA,OAAQD,EAAmB,EAAnBA,IAAKM,EAAc,EAAdA,QACzD,MAAe,SAAXL,EACO,0BAAMJ,UAAU,YAAYG,GACnB,YAAXC,EACE,0BAAMJ,UAAU,YAAYS,GAC3B,MAeDkL,IARuB,SAAC,GAAwC,IAAtCvL,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,SAAUF,EAAmB,EAAnBA,IAAKM,EAAc,EAAdA,QAC5D,MAAe,SAAXL,EACO,2BAAOJ,UAAU,WAAWlC,KAAK,OAAOuC,SAAU,SAACuL,GAAD,OAAOvL,EAASuL,EAAEC,OAAOrL,QAAQA,MAAOL,IACzF,kBAACuL,EAAD,CAAUvL,IAAKA,EAAKC,OAAQA,EAAQK,QAASA,O","file":"static/js/main.9427e70f.chunk.js","sourcesContent":["import { IHooker } from '../Character';\r\n\r\n\r\nexport interface Trait extends IHooker {\r\n    name: string;\r\n    cost: number;\r\n    description: string;\r\n}\r\n\r\nconst Coward: Trait = {\r\n    name: 'cowardwardice',\r\n    cost: -10,\r\n    description: 'You are a coward that more easily falls vicim to fear. willpower counts as 2 lower for fear',\r\n    applyTo: 'fear',\r\n    amount: -2,\r\n}\r\n\r\nconst Brave: Trait = {\r\n    name: 'brave',\r\n    cost: 10,\r\n    description: 'You are brave and are less likely to be phased by fear. willpower counts as 2 higher for fear',\r\n    applyTo: 'fear',\r\n    amount: 2,\r\n}\r\n\r\nconst FoolHardy: Trait = {\r\n    name: 'foolhardy',\r\n    cost: 10,\r\n    description: 'At first glance you seem brave, but actually you are just ignoring the feeling completely. You gain 1 fear resistence but you are no longer privy to your own fear stat, the DM will roll for your fear without your knowledge',\r\n    applyTo: 'fear',\r\n    amount: 1,\r\n}\r\n\r\nconst Frail: Trait = {\r\n    name: 'frail',\r\n    cost: -10,\r\n    description: 'You are frail and easily damaged, -2 maximum hitpoints',\r\n    applyTo: 'hitpoints',\r\n    amount: -2,\r\n}\r\n\r\nconst Resillient: Trait = {\r\n    name: 'resillient',\r\n    cost: 20,\r\n    description: 'You are able to withstand more punishment, +2 maximum hitpoints',\r\n    applyTo: 'hitpoints',\r\n    amount: 2,\r\n}\r\n\r\nconst Reckless: Trait = {\r\n    name: 'reckless',\r\n    cost: -10,\r\n    description: 'You are reckless when using tools, items lose condition at double rate',\r\n    applyTo: '',\r\n    amount: 0,\r\n}\r\n\r\nconst Gifted: Trait = {\r\n    name: 'gifted',\r\n    cost: 80,\r\n    description: 'you are naturally gifted, gain +1 to your 4 lowest base stats',\r\n    applyTo: '',\r\n    amount: 0,\r\n}\r\n\r\nconst FastMetabolism: Trait = {\r\n    name: 'fast metabolism',\r\n    cost: 20,\r\n    description: 'You have a very high metabolism, you heal +1 life per day, eat 50% more, poison and drugs acts twice as fast and last half as long',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst DoubleHanded: Trait = {\r\n    name: 'double handed',\r\n    cost: 10,\r\n    description: 'you are proficient with both hands, can do any task with either hand',\r\n    amount: 0,\r\n    applyTo: '',\r\n}\r\n\r\nconst Phobia: Trait = {\r\n    name: 'phobia',\r\n    cost: -10,\r\n    description: 'pick one thing, your character has a phobia for that and is forced to make a fear roll when they see it',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst WealthyFamily: Trait = {\r\n    name: 'wealthy family',\r\n    cost: 30,\r\n    description: 'you come from a wealthy family, you start with an additional 40k credits and you are known in your home town',\r\n    amount: 0,\r\n    applyTo: '',\r\n}\r\n\r\nconst Aggressive: Trait = {\r\n    name: 'aggressive',\r\n    cost: 10,\r\n    description: 'you are particularly aggressive and fast to fight, +2 to sequence and -2 to all defense',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nexport const GetTraits = (): Trait[] & IHooker[] => {\r\n    return [\r\n        Coward,\r\n        Brave,\r\n        FoolHardy,\r\n        Frail,\r\n        Resillient,\r\n        Reckless,\r\n        Gifted,\r\n        FastMetabolism,\r\n        DoubleHanded,\r\n        Phobia,\r\n        WealthyFamily,\r\n        Aggressive\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n};","\r\nexport interface UseCase {\r\n    attribute: 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\r\n    name: string;\r\n    description: string;\r\n    results?: string[];\r\n    type: 'active' | 'passive';\r\n}\r\n\r\nexport interface Skill {\r\n    name: string;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n}\r\n\r\n\r\nexport class SkillTemplate implements Skill {\r\n    name: string;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n    constructor(name: string, description: string, useCases: UseCase[], level = 0) {\r\n        this.name = name;\r\n        this.level = level;\r\n        this.description = description;\r\n        this.useCases = useCases;\r\n    }\r\n}\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'passive dodge',\r\n        attribute: 'agility',\r\n        description: 'when someone attacks you they must beat this number to land the hit or shot',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'active dodge',\r\n        attribute: 'agility',\r\n        description: 'Roll 2d10 + this to dodge an attack, must be aware of attack. Single use action',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'balance',\r\n        attribute: 'agility',\r\n        description: 'anything balance related such as walking on slippery surfaces, walking tight rope, staying upright on shaky ground, etc.',\r\n        results: [\r\n            'Walk on slippery surface: 9 or less: failure',\r\n            'Walk on slippery surface: 10-14: walk slowly',\r\n            'Walk on slippery surface: 15-19: walk normal',\r\n            'Walk on slippery surface: 20-24: job',\r\n            'Walk on slippery surface: 25-29: run',\r\n            'Walk on slippery surface: 30: unimpeded movement',\r\n            'Walk on tightrope: same as slippery but 5 points harder',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'throwing',\r\n        attribute: 'agility',\r\n        description: 'throwing an item accurately and precisely at a target. The distance depends on your strength and the weight of the item. This is also used in combat when for example throwing weapons, bombs, etc',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'tumbling',\r\n        attribute: 'agility',\r\n        description: 'tumbling is a form of gymnastics, this can be used to reduce to reduce fall damage, jump quickly through hoops or any general fast movement through difficult terrain',\r\n        results: [\r\n            '4 or lower: worse outcome',\r\n            'Reduce fall damage 1d6: 15',\r\n            'Reduce fall damage 2d6: 25',\r\n            'Move through difficult terrain: 9 or less: slow',\r\n            'Move through difficult terrain: 10-14: normal speed',\r\n            'Move through difficult terrain: 15-20: jog speed',\r\n            'Move through difficult terrain: 21+: can move any speed'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Acrobatics = new SkillTemplate('acrobatics', 'the ability to move around', useCases);\r\nexport default Acrobatics;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'swim',\r\n        attribute: 'endurance',\r\n        description: 'how fast you swim, how long you can keep your breath',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'run',\r\n        attribute: 'endurance',\r\n        description: 'how fast you run and how long you can run',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'jump',\r\n        attribute: 'endurance',\r\n        description: 'how high and far you can jump',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'climb',\r\n        attribute: 'endurance',\r\n        description: 'climbing',\r\n        type: 'passive'\r\n    },\r\n];\r\nconst Athletics = new SkillTemplate('athletics', 'skillful use of stamina', useCases);\r\nexport default Athletics;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'unarmed attack',\r\n        attribute: 'agility',\r\n        description: 'punching kicking, deals 1d2 + strength / 4 (rounded down)',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'weapon attack',\r\n        attribute: 'agility',\r\n        description: 'weapons, damage based on weapon type',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'block',\r\n        attribute: 'agility',\r\n        description: 'use unarmed or weapon to block any attack, if successful only take 1/2 damage (round down, applied before damage reduction). Blocking firearms takes -10 on your roll vs their roll',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Combat = new SkillTemplate('combat', 'the ability to move around', useCases);\r\nexport default Combat;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hacking',\r\n        attribute: 'intelligence',\r\n        description: 'hack into computers',\r\n        results: [\r\n            'hack password: 24 or higher to succeed',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'craft software',\r\n        attribute: 'intelligence',\r\n        description: 'make computer programs, apps, drivers, services, etc',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'use computer',\r\n        attribute: 'intelligence',\r\n        description: 'You can use a computer to do research on the use of another skill, takes 10 minutes and gain a one time use +2',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Computer = new SkillTemplate('computer', 'googling stuff', useCases);\r\nexport default Computer;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'aimed shot',\r\n        attribute: 'agility',\r\n        description: 'fire a single shot with a handgun or rifle',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'semi burst',\r\n        attribute: 'agility',\r\n        description: 'fire 4 bullets',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'burst',\r\n        attribute: 'agility',\r\n        description: 'fire 10 bullets',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'snipe',\r\n        attribute: 'perception',\r\n        description: 'fire a single shot with a handgun, rifle or rocket launcher, if you roll 10 or below you take no action',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'oppressive fire',\r\n        attribute: 'strength',\r\n        description: 'empty the entire magazine',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'maintain weapon',\r\n        attribute: 'intelligence',\r\n        description: 'keep it clean and good',\r\n        results: [\r\n            'service: 9 or lower: damage weapon, firearm drops condition by 1 step',\r\n            'service: 14 or lower: firearm condition countdown is reset',\r\n            'service: 25-29: firearm condition is improved by 1 step',\r\n            'service: 30+: firearm condition is improved by 2 steps'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Firearms = new SkillTemplate('firearms', 'shooting things', useCases);\r\nexport default Firearms;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'detect motive',\r\n        attribute: 'intelligence',\r\n        description: 'find out what people want, if this is higher than \"hide emotion\" (subtrefuge) then you gain information, if it is significantly below you gain false information',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'detect lies',\r\n        attribute: 'intelligence',\r\n        description: 'see through lies, rolls in the background everytime someone lies to you, role against \"deception\" (subtrefuge)',\r\n        type: 'passive'\r\n    },\r\n];\r\nconst Empathy = new SkillTemplate('empathy', 'understanding people', useCases);\r\nexport default Empathy;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'interrogation',\r\n        attribute: 'willpower',\r\n        description: 'force someone to give you answers, if the target is in a position to exit they gain +20 to their willpower roll against your roll, if they are unable to exit but dont believe you will hurt them they gain +10, torture gives you +5 but comes with the drawback that they might lie to give you an answer you want to hear with +10 to deception. A successful interrogation roll will force the target to answer one question',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'frighten',\r\n        attribute: 'willpower',\r\n        description: 'emit a terrifying display of power and ill intent to cause viewers to fear you, enemies must roll willpower vs your roll or take 1d6 fear damage (plus 1 per 5 you exceed their roll). This only works once, the situation can give you penalites or bonuses.',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'spook',\r\n        attribute: 'willpower',\r\n        description: 'while talking to someone for a while you instill in them a sense of dread, every 10 minutes they must roll willpower vs your roll or take 1d4 fear damage (plus 1 per 5 you exceed their roll)',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Intimidation = new SkillTemplate('intimidation', 'making people feel small and you big', useCases);\r\nexport default Intimidation;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'search',\r\n        attribute: 'perception',\r\n        description: 'you look for hidden objects, items are hidden with the larceny skill, roll vs hiders roll',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'crime scene investigation',\r\n        attribute: 'intelligence',\r\n        description: 'you examine a crime scene, every hour of investigation has a chance to find a clue, roll vs 16 to find the first one, each clue raises difficulty by 5, maximum 10 attempts can be made no matter how few or many clues you have found',\r\n        results: [\r\n            'find clues: 9 or lower: find wrong clues',\r\n            'find clues: 15 or lower: no clues',\r\n            'find clues: 16+ (+4 per clue): find one clue'\r\n        ],\r\n        type: 'active'\r\n    },\r\n\r\n    {\r\n        name: 'solve enigma',\r\n        attribute: 'intelligence',\r\n        description: 'solving puzzles, enigmas, mysteries. You roll to put it together, see connections and understand the mystery',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Investigation = new SkillTemplate('investigation', 'finding out the butler did it after all', useCases);\r\nexport default Investigation;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide object',\r\n        attribute: 'perception',\r\n        description: 'hide an item somewhere, big items take a penalty, open places with few hiding spots take a penalty',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'lockpick',\r\n        attribute: 'agility',\r\n        description: 'pick a conventional lock, lever-tumblers range from 15-25, disk-tumblers and pin-tumblers range from 20-30',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'electronic lockpick',\r\n        attribute: 'intelligence',\r\n        description: 'pick an electronic lock, needs a highly specialized electronic lockpicking tool, might involve a hacking roll (computer). Difficulty ranges from 20-40',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pick pocket',\r\n        attribute: 'agility',\r\n        description: 'remove or add an item to someones inventory without them realizing, they make a perception roll. Big and heavy items are harder to transfer, take -1 to your roll for every 10cl bulk and -1 for every 100grams of weight',\r\n        type: 'active'\r\n    }\r\n\r\n];\r\nconst Larceny = new SkillTemplate('larceny', '', useCases);\r\nexport default Larceny;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'first aid',\r\n        attribute: 'intelligence',\r\n        description: 'if someone has zero or negative hitpoints then you can prevent bleedout by rolling first aid vs their total damage taken, must be applied every turn or until you succeed with a roll of 10 more than the target',\r\n        results: [\r\n            'perform CPR: 15 or higher: keep alive for as long as you keep performign CPR',\r\n            'stop light bleeding: 4 or lower: fail and cause 1 point of damage',\r\n            'stop light bleeding: 9-24: stop bleeding',\r\n            'stop light bleeding: 25+: stop bleeding and heal 1 life',\r\n            'stop intermediate bleeding: 9 or lower+: fail and cause 1 point of damage',\r\n            'stop intermediate bleeding: 15-34: stop bleeding',\r\n            'stop intermediate bleeding: 35+: stop bleeding and heal 1 life',\r\n            'stop heavy bleeding: 14 or lower+: fail and cause 1 point of damage',\r\n            'stop heavy bleeding: 20+: stop bleeding',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'surgery',\r\n        attribute: 'agility',\r\n        description: 'perform an operation. A failed roll causes 1d6 per 5 excess failure (if difficulty is 30 and you roll 20 they take 2d6 damage). Removing something from a body has a difficulty between 25-35, adjusting a broken bone is 15-20',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'administer medicine',\r\n        attribute: 'intelligence',\r\n        description: 'picking out the right medicine and knowing how to administer it correctly, roll against 25 to know which medicine (if you roll 20 or less you get the wrong medicine depending on your options), roll 20 to administer, if you roll 15 or less the target takes 1d6 damage',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'psychology',\r\n        attribute: 'intelligence',\r\n        description: 'reduce someones fear level, treat mental illness.',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Medicine = new SkillTemplate('medicine', 'giving people insulin, knowing insulin is not crack', useCases);\r\nexport default Medicine;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'dealing',\r\n        attribute: 'willpower',\r\n        description: 'striking a deal, haggling, negotiating exchanges, each side rolls and a compromise is made in favor of whoever has the higher roll equal to the difference. Only works on people open to it',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'motivational speech',\r\n        attribute: 'willpower',\r\n        description: 'you make a rousing motivational speech, everyone hearing it gains a +1 to all rolls for the rest of the day to any skill they have lower than your persuation skill',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'inspire courage',\r\n        attribute: 'willpower',\r\n        description: 'you say a few heart warming words that strengthen the resolve of anyone hearing you gain +1 to fear resistance up to your roll',\r\n        results: [\r\n            '15-24: +1 to fear resistence',\r\n            '25+: +1 to fear resistence, restore 1 mental health (can only restore from this benefit once a day)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'quell conflict',\r\n        attribute: 'willpower',\r\n        description: 'you try to talk someone down from fighting you, gain +3 to your roll if you know their motives or if they fear you. Does not work on everyone',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Persuation = new SkillTemplate('persuation', 'making people see it your way', useCases);\r\nexport default Persuation;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'drive car',\r\n        attribute: 'perception',\r\n        description: 'drive a car, driving normally has a difficulty of 16',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive boat',\r\n        attribute: 'perception',\r\n        description: 'drive a boat, driving normally has a difficulty of 16',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive ship',\r\n        attribute: 'intelligence',\r\n        description: 'driving a ship requires mutliple people, driving normally has a difficulty of 24',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive submarine',\r\n        attribute: 'intelligence',\r\n        description: 'driving a sub is very hard, driving normally has a difficulty of 28',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot airplane',\r\n        attribute: 'intelligence',\r\n        description: 'the second hardest point is takeof, the hardest part is landing, piloting an airplane under normal conditions has a difficulty of 28',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot spaceship',\r\n        attribute: 'intelligence',\r\n        description: 'navigation requires understanding of orbital mechanics, piloting a spaceship has a difficulty of 28',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot FTL',\r\n        attribute: 'intelligence',\r\n        description: 'knowing how to operate an FTL hyperdrive is hard, piloting FTL has a difficulty of 32',\r\n        type: 'active'\r\n    },\r\n];\r\nconst Pilot = new SkillTemplate('pilot', 'driving car, boat, airplane, spaceship, horse', useCases);\r\nexport default Pilot;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'cast spell',\r\n        attribute: 'willpower',\r\n        description: 'cast a spell',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Spells = new SkillTemplate('spells', 'spells', useCases);\r\nexport default Spells;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'shadow',\r\n        attribute: 'agility',\r\n        description: 'follow someone without them knowing youre following them',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hide',\r\n        attribute: 'agility',\r\n        description: 'hide somewhere, gain +5 on your roll if you are not visible',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'detection',\r\n        attribute: 'perception',\r\n        description: 'find someone who is hiding or shadowing you',\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Stealth = new SkillTemplate('stealth', '', useCases);\r\nexport default Stealth;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide emotion',\r\n        attribute: 'intelligence',\r\n        description: 'how hard you are to read',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'deception',\r\n        attribute: 'intelligence',\r\n        description: 'telling outright lies or knowingly leading others to a false conclusion through omission of the truth',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Subtrefuge = new SkillTemplate('subtrefuge', '', useCases);\r\nexport default Subtrefuge;","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'forage',\r\n        attribute: 'intelligence',\r\n        description: 'finding drinkable water, items and food in the wild',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'navigation in the wild',\r\n        attribute: 'intelligence',\r\n        description: 'navigating in the wild',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build shelter',\r\n        attribute: 'intelligence',\r\n        description: 'build a shelter that protects you from exposure',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Survival = new SkillTemplate('survival', '', useCases);\r\nexport default Survival;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'repair machine',\r\n        attribute: 'intelligence',\r\n        description: 'repair a machine',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build device',\r\n        attribute: 'intelligence',\r\n        description: 'building a device',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hotwire machine',\r\n        attribute: 'intelligence',\r\n        description: 'altering a machine to suit your needs',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'service robot',\r\n        attribute: 'intelligence',\r\n        description: 'servicing a robot',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Mechanics = new SkillTemplate('mechanics', 'black thumb', useCases);\r\nexport default Mechanics;\r\n","import { SkillTemplate, UseCase } from \"../Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'fencing',\r\n        attribute: 'intelligence',\r\n        description: 'Find a fence to buy your stolen goods. Sell stolen goods to the white market.',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'black market',\r\n        attribute: 'intelligence',\r\n        description: 'Finding a black market actor takes time and is risky.',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'gangs',\r\n        attribute: 'intelligence',\r\n        description: 'Finding gangs, talking to gangs, etc',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'gossip',\r\n        attribute: 'intelligence',\r\n        description: 'Picking up local information, knowing what is important and true, and not becoming suspicious in the process. Takes a full day',\r\n        results: ['5 or below: gain no information and attract attention',\r\n            '6-10: gain one piece of gossip and attract attention',\r\n            '11-15: gain multiple pieces of gossip and attract attention',\r\n            '16-20: gain multiple pieces of gossip, at least one is something you choose and attract attention',\r\n            '21-25: gain multiple pieces of gossip, at least one is something you choose, no attention',\r\n            '26 or above: gain multiple pieces of gossip, most of which is something you choose, no attention'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'local culture',\r\n        attribute: 'intelligence',\r\n        description: 'knowledge of local culture',\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Streetwise = new SkillTemplate('streetwise', '', useCases);\r\nexport default Streetwise;","import { Skill } from './Skills';\r\nimport Acrobatics from './skills/acrobatics';\r\nimport Athletics from './skills/athletics';\r\nimport Combat from './skills/combat';\r\nimport Computer from './skills/computer';\r\nimport Firearms from './skills/firearms';\r\nimport Empathy from './skills/empathy';\r\nimport Intimidation from './skills/intimidation';\r\nimport Investigation from './skills/investigation';\r\nimport Larceny from './skills/larceny';\r\nimport Medicine from './skills/medicine';\r\nimport Persuation from './skills/persuation';\r\nimport Pilot from './skills/pilot';\r\nimport Spells from './skills/spells';\r\nimport Stealth from './skills/stealth';\r\nimport Subtrefuge from './skills/subtrefuge';\r\nimport Survival from './skills/survival';\r\nimport Mechanics from './skills/mechanics';\r\nimport Streetwise from './skills/streetwise';\r\n\r\nexport const GetSkillList = (): Skill[] => {\r\n    return [\r\n        Acrobatics,\r\n        Athletics,\r\n        Combat,\r\n        Computer,\r\n        Empathy,\r\n        Firearms,\r\n        Intimidation,\r\n        Investigation,\r\n        Larceny,\r\n        Medicine,\r\n        Persuation,\r\n        Pilot,\r\n        Spells,\r\n        Stealth,\r\n        Subtrefuge,\r\n        Survival,\r\n        Streetwise,\r\n        Mechanics\r\n\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n}","import React, { useReducer, useState } from 'react';\r\nimport { Character } from '../components/Character';\r\nimport { GetTraits } from '../components/traits/Traits';\r\nimport { GetPerkList } from '../components/GetPerkList';\r\nimport { useCharacter } from '../components/useCharacter';\r\n\r\nimport './charactersheet.css';\r\nimport EditText, { HideText } from '../components/HideText';\r\nimport { Skill } from '../components/Skills';\r\n\r\ninterface CharacterSheetProps {\r\n    initialCharacter: Character;\r\n    characterCallback: (c: Character) => void;\r\n}\r\nconst padSize = 34;\r\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\r\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\r\n    const [viewState, setViewState] = useState<\"edit\" | \"print\" | \"explain\" | \"hide\">(\"edit\");\r\n    const [viewTraitList, setViewTraitList] = useState(false);\r\n    const [viewPerkList, setViewPerkList] = useState(false);\r\n\r\n    return (<div className=\"characterSheet\">\r\n        {viewState !== \"edit\" ?\r\n            <button className='no-print' onClick={() => setViewState(\"edit\")}>edit</button>\r\n            :\r\n            <button className='no-print' onClick={() => setViewState(\"explain\")}>explain</button>}\r\n        {/* page 1 */}\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan={3}><h4>Infinite Darkness</h4></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <label>Name</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.name} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'name', value: 0 })} explain={character.explain('name')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Life</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getLife()} isEdit={viewState} explain={character.explain('life')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Strength</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.strength} isEdit={viewState} onChange={(str) => dispatch({ action: 'strength', value: parseInt(str) })} explain={character.explain('strength')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Gender</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.gender} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'gender', value: 0 })} explain={character.explain('gender')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Mana</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getMana()} isEdit={viewState} explain={character.explain('mana')} /> </td>\r\n                    <td>\r\n                        <label>Endurance</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.endurance} isEdit={viewState} onChange={(str) => dispatch({ action: 'endurance', value: parseInt(str) })} explain={character.explain('endurance')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Species</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.species} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'species', value: 0 })} explain={character.explain('species')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Mental Health</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getMentalHealth()} isEdit={viewState} explain={character.explain('mentalHealth')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Agility</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.agility} isEdit={viewState} onChange={(str) => dispatch({ action: 'agility', value: parseInt(str) })} explain={character.explain('agility')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Age</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.age} isEdit={viewState} onChange={(str) => dispatch({ action: 'age', value: parseInt(str) })} explain={character.explain('age')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Damage absorption</label>\r\n                    </td>\r\n                    <td>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <label>Perception</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.perception} isEdit={viewState} onChange={(str) => dispatch({ action: 'perception', value: parseInt(str) })} explain={character.explain('perception')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Character points</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getCalculatedPointsLeft()} explain={character.explain('pointsLeft')} isEdit={viewState} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Defense</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getPassiveDefense()} explain={character.explain('passivedefense')} isEdit={viewState} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Intelligence</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.intelligence} isEdit={viewState} onChange={(str) => dispatch({ action: 'intelligence', value: parseInt(str) })} explain={character.explain('intelligence')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Experience multiplier</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getExperienceMultiplier()} isEdit={viewState} explain={character.explain('experienceMultiplier')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Player</label>\r\n                    </td>\r\n                    <td>\r\n                        &nbsp;\r\n                    </td>\r\n                    <td>\r\n                        <label>Willpower</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.willpower} isEdit={viewState} onChange={(str) => dispatch({ action: 'willpower', value: parseInt(str) })} explain={character.explain('willpower')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}>\r\n                        Background\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        Apperance traits\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        Personality traits\r\n                    </td>\r\n                </tr>\r\n                {Pad(5, 0).map(i =>\r\n                    <tr>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                    </tr>\r\n                )}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Skills</h5>\r\n                        <table className=\"skillTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Skill</th>\r\n                                    <th>Exp</th>\r\n                                    <th>Rank</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {character.skills.map(skill => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            <label>{skill.name}</label>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <EditText txt={skill.level} isEdit={viewState} onChange={(str) => dispatch({ action: 'skill', name: skill.name, value: parseInt(str) })} explain={character.explain('skill:' + skill.name)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(padSize, character.skills.length).map(i => {\r\n                                    return <tr>\r\n                                        <td > <label> &nbsp;</label></td>\r\n                                        <td> </td>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Perks {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewPerkList(!viewPerkList)}>Add Perk</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewPerkList ? GetPerkList().map(perk => {\r\n                                    const skillRanks: Skill | undefined = character.skills.find(s => s.name === perk.skill);\r\n                                    if (skillRanks === undefined || skillRanks.level < perk.level * 6)\r\n                                        return null;\r\n                                    if (character.perks.find(p => p.name === perk.name)) return null;\r\n\r\n                                    return <tr className='no-print'>\r\n                                        <td>\r\n                                            <button onClick={() => dispatch({ action: 'addperk', name: perk.name, value: 0, perkToAdd: perk })}>{perk.name}</button> ({perk.level}) {perk.description()}\r\n                                        </td>\r\n                                    </tr>\r\n                                }) : null}\r\n                                {character.perks.map(perk => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            {perk.name}\r\n                                            <button onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewPerkList ? 0 : padSize + 1, character.perks.length).map(i => {\r\n                                    return <tr>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Traits {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewTraitList(!viewTraitList)}>Add Trait</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewTraitList ? GetTraits().map(trait => {\r\n                                    return <tr className='no-print'>\r\n                                        <td>\r\n                                            <button onClick={() => dispatch({ action: 'addtrait', name: trait.name, value: 0, traitToAdd: trait })}>{trait.name}</button> {trait.description}\r\n                                        </td>\r\n                                    </tr>\r\n                                }) : null}\r\n                                {character.traits.map(trait => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            {trait.name}\r\n                                            <button onClick={() => dispatch({ action: 'removetrait', name: trait.name, value: 0, traitToAdd: trait })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewTraitList ? 0 : padSize - 26, character.traits.length).map(i => {\r\n                                    return <tr>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <h5 style={{ marginTop: '20px' }}>Reputation</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {Pad(padSize - 9, 0).map(i => <tr>\r\n                                    <td> </td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                {/* page 2 */}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={3}>\r\n                        <h4>Equipment</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={6}>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        Weapon\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        HB\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        AP\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Damage\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Ammo\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Pad(6, 0).map(i =>\r\n                                    <tr>\r\n                                        <td className='bigtd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        Item\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Skill\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Bonus\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Pad(18, 0).map(i =>\r\n                                    <tr>\r\n                                        <td className='bigtd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colSpan={3}>\r\n                        <h4>Stash</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                {Pad(10, 0).map(i =>\r\n                    <tr>\r\n                        <td colSpan={6}> </td>\r\n                    </tr>)}\r\n\r\n            </tbody>\r\n        </table></div>);\r\n}\r\n\r\n\r\nconst Pad = (minSize: number, size: number) => {\r\n    const i = Math.max(minSize - size, 0);\r\n    let ar = new Array<number>();\r\n    for (let counter = 0; counter < i; counter++) {\r\n        ar.push(counter);\r\n    }\r\n    return ar;\r\n}","import { Character } from \"./Character\";\r\nimport { Perk } from \"./Perks\";\r\nimport { Trait } from \"./traits/Traits\";\r\n\r\nexport interface dispatcher {\r\n    action: string;\r\n    name?: string;\r\n    value: number;\r\n    perkToAdd?: Perk;\r\n    traitToAdd?: Trait;\r\n}\r\n\r\nexport const useCharacter = (state: Character, action: dispatcher): Character => {\r\n    switch (action.action) {\r\n        case 'strength': return new Character({ ...state, strength: action.value });\r\n        case 'agility': return new Character({ ...state, agility: action.value });\r\n        case 'endurance': return new Character({ ...state, endurance: action.value });\r\n        case 'willpower': return new Character({ ...state, willpower: action.value });\r\n        case 'perception': return new Character({ ...state, perception: action.value });\r\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\r\n        case 'age': return new Character({ ...state, age: action.value });\r\n        case 'skill':\r\n            let r = new Character({\r\n                ...state\r\n            });\r\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\r\n            return r;\r\n        case 'name': return new Character({ ...state, name: action.name || '' });\r\n        case 'species': return new Character({ ...state, species: action.name || '' });\r\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\r\n        case 'background': return new Character({ ...state, background: action.name || '' });\r\n    }\r\n    if (action.action === 'addperk') {\r\n        if (action.perkToAdd !== undefined)\r\n            return new Character({ ...state, perks: [...state.perks, action.perkToAdd] });\r\n    }\r\n    else if (action.action === 'removeperk') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.perkToAdd !== undefined) {\r\n            let pta = action.perkToAdd;\r\n            r.perks = r.perks.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    else if (action.action === 'addtrait') {\r\n        if (action.traitToAdd !== undefined)\r\n            return new Character({ ...state, traits: [...state.traits, action.traitToAdd] });\r\n    }\r\n\r\n    else if (action.action === 'removetrait') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.traitToAdd !== undefined) {\r\n            let pta = action.traitToAdd;\r\n            r.traits = r.traits.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    return state;\r\n}","import React from 'react';\r\nimport { IHooker } from './Character';\r\n\r\nexport interface Perk extends IHooker {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    cost(): number;\r\n    description(): JSX.Element;\r\n}\r\n\r\ninterface IPerk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    description: string;\r\n}\r\nconst def: IHooker = {\r\n    amount: 0,\r\n    applyTo: ''\r\n};\r\nexport class PerkTemplate implements Perk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    _description: string;\r\n    description(): JSX.Element {\r\n        return <>{this._description}</>;\r\n    }\r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n    constructor(data: IPerk, hook: IHooker = def) {\r\n        this.name = data.name;\r\n        this.skill = data.skill;\r\n        this.level = data.level;\r\n        this._description = data.description;\r\n        this.applyTo = hook.applyTo;\r\n        this.amount = hook.amount;\r\n    }\r\n}","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Deflection = new PerkTemplate({\r\n    name: 'deflection',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 to all blocking rolls and damage reduced to 1/3rd (from 1/2nd) on successful blocks'\r\n}, {\r\n    applyTo: 'block',\r\n    amount: 1\r\n});\r\n\r\nexport const LightWeaponSpecialization = new PerkTemplate({\r\n    name: 'light weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on small melee weapons'\r\n}, {\r\n    applyTo: 'lightmelee',\r\n    amount: 1\r\n});\r\n\r\nexport const MediumWeaponSpecialization = new PerkTemplate({\r\n    name: 'medium weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on medium melee weapons'\r\n}, {\r\n    applyTo: 'mediummelee',\r\n    amount: 1\r\n});\r\n\r\nexport const LargeWeaponSpecialization = new PerkTemplate({\r\n    name: 'large weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on large melee weapons'\r\n}, {\r\n    applyTo: 'largemelee',\r\n    amount: 1\r\n});\r\n\r\nexport const MartialArts = new PerkTemplate({\r\n    name: 'martial arts',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 to hit with all unarmed attacks and they now deal 1d4 + strength / 4 damage'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 1\r\n});\r\n\r\nexport const MartialArtsExpert = new PerkTemplate({\r\n    name: 'martial arts expert',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'gain +2 to hit with all unarmed attacks and they now deal 1d6 + strength / 3 damage.'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 2\r\n});\r\n\r\nexport const MartialArtsMaster = new PerkTemplate({\r\n    name: 'martial arts master',\r\n    skill: 'combat',\r\n    level: 3,\r\n    description: 'gain +3 to hit with all unarmed attacks and they now deal 1d8 + strength / 3 damage'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 3\r\n});\r\n\r\nexport const LightningReflexes = new PerkTemplate({\r\n    name: 'lightning reflexes',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'when you are ambushed you gain +4 to your sequence, does not apply if the attacker has no sequence advantage'\r\n}, {\r\n    applyTo: 'sequence',\r\n    amount: 4,\r\n});\r\n\r\nexport const SneakAttack = new PerkTemplate({\r\n    name: 'sneak attack',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'you gain +2 to your sequence when you ambush someone and +2 damage on all attacks (both combat and firearms) against anyone with lower sequence and did not attempt to block or dodge'\r\n}, {\r\n    applyTo: 'sequence',\r\n    amount: 2\r\n});\r\n\r\nexport const Assassination = new PerkTemplate({\r\n    name: 'assassination',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'you gain +1d6 damage on all attacks (both combat and firearms) on anyone who is unable to block or dodge your attack'\r\n}, {\r\n    applyTo: '_',\r\n    amount: 0\r\n});\r\n\r\nexport const CombatPerks = [Deflection, LightWeaponSpecialization, MediumWeaponSpecialization, LargeWeaponSpecialization, MartialArts, MartialArtsExpert, MartialArtsMaster, LightningReflexes, SneakAttack, Assassination];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const HandGunSpecialization = new PerkTemplate({\r\n    name: 'hand gun specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with single handheld guns'\r\n}, {\r\n    applyTo: 'handgun',\r\n    amount: 3\r\n});\r\n\r\nexport const RifleSpecialization = new PerkTemplate({\r\n    name: 'rifle specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with rifles'\r\n}, {\r\n    applyTo: 'rifle',\r\n    amount: 3\r\n});\r\n\r\nexport const MachineGunSpecialization = new PerkTemplate({\r\n    name: 'machine gun specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with portable and stationary machine guns'\r\n}, {\r\n    applyTo: 'machinegun',\r\n    amount: 3\r\n});\r\n\r\nexport const RocketLaunchersSpecialization = new PerkTemplate({\r\n    name: 'rocket launcher specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with rocket launchers, grenade launchers and all guns that fire explosives'\r\n}, {\r\n    applyTo: 'rocketlauncher',\r\n    amount: 3\r\n});\r\n\r\nexport const LaserSpecialization = new PerkTemplate({\r\n    name: 'laser specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with all laser based weapons'\r\n}, {\r\n    applyTo: 'lasers',\r\n    amount: 3\r\n});\r\n\r\nexport const PlasmaSpecialization = new PerkTemplate({\r\n    name: 'plasma specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with all plasma based weapons'\r\n}, {\r\n    applyTo: 'plasma',\r\n    amount: 3\r\n});\r\n\r\nexport const FirearmsPerks = [HandGunSpecialization, RifleSpecialization, MachineGunSpecialization, RocketLaunchersSpecialization, LaserSpecialization, PlasmaSpecialization];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const QualifiedForCar = new PerkTemplate({\r\n    name: 'car qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all car driving rolls, is qualified to drive car'\r\n}, {\r\n    applyTo: 'drive car',\r\n    amount: 6\r\n});\r\n\r\nexport const QualifiedForBoat = new PerkTemplate({\r\n    name: 'boat qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all boat sailing rolls, is qualified to drive boat no larger than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive boat',\r\n    amount: 6\r\n});\r\n\r\nexport const QualifiedForShip = new PerkTemplate({\r\n    name: 'ship qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all ship sailing rolls, is qualified to drive ship no smaller than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive ship',\r\n    amount: 9\r\n});\r\n\r\nexport const QualifiedForSubmarine = new PerkTemplate({\r\n    name: 'submarine qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +12 to all submarine sailing rolls, is qualified to drive a submarine'\r\n}, {\r\n    applyTo: 'drive submarine',\r\n    amount: 12\r\n});\r\n\r\nexport const QualifiedForAirplane = new PerkTemplate({\r\n    name: 'airplane qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +9 to all airplane piloting rolls, is qualified to drive an airplane'\r\n}, {\r\n    applyTo: 'pilot airplane',\r\n    amount: 12\r\n});\r\n\r\nexport const QualifiedForSpaceship = new PerkTemplate({\r\n    name: 'spaceship qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +12 to all spaceship piloting rolls, is qualified to pilot a spaceship'\r\n}, {\r\n    applyTo: 'pilot spaceship',\r\n    amount: 12\r\n});\r\n\r\nexport const QualifiedForFTL = new PerkTemplate({\r\n    name: 'FTL qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +12 to all FTL spaceship piloting rolls, is qualified to engage hyperdrive'\r\n}, {\r\n    applyTo: 'pilot FTL',\r\n    amount: 12\r\n});\r\n\r\nexport const PilotPerks = [QualifiedForAirplane, QualifiedForBoat, QualifiedForCar, QualifiedForFTL, QualifiedForShip, QualifiedForSpaceship, QualifiedForSubmarine];","import { PerkTemplate } from \"../Perks\";\r\nimport { IHooker } from \"../Character\";\r\nimport React from \"react\";\r\n\r\nconst spellhook: IHooker = {\r\n    applyTo: 'spells',\r\n    amount: 0\r\n}\r\n\r\nclass SpellTemplate implements PerkTemplate {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    _description: string;\r\n    constructor(name: string, description: string) {\r\n        this.name = name;\r\n        this.skill = 'spells';\r\n        this.level = 1;\r\n        this._description = description;\r\n        this.applyTo = spellhook.applyTo;\r\n        this.amount = spellhook.amount;\r\n    }\r\n    description(): JSX.Element {\r\n        return <>{this._description}</>;\r\n    }\r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n}\r\n\r\nexport const DimensionalSwap = new SpellTemplate(\r\n    'Dimensional Swap',\r\n    'Spell: You can cause an object to being to exist or seize to exist by finding a virtual parallel universe which is identical in every way except for the objects existence.' +\r\n    'The object can not be of any previous consequence since it had to have either existed or not in both worlds. The object and its circumstances must be known to you'\r\n);\r\n\r\nexport const MortisAlbum = new SpellTemplate(\r\n    'Mortis Album',\r\n    'Mutation: body emits no heat, nails and hair become white and matte, your skin loses its color and becomes gray, you no longer need to breathe air or consume food');\r\n\r\nexport const Ocultos = new SpellTemplate('Ocultos',\r\n    'Mutation: Eyes grow all over your body, at the rate of 1 per month a new eye opens up somewhere randomly on your skin up to a maximum 12 additional eyes. The eyes are fully functional and grant the ability to gain a glipse of something of your choice, glipse closes the eye forever');\r\n\r\nexport const Biopod = new SpellTemplate('Biopod',\r\n    'Mutation: Nails and hair fall out and stop growing, a thin film of slick slime covers your skin, your pores turn into suckers which allow you to grab ahold of things, you gain the ability to turn your body extremely soft and elastic which allows you to squeeze through any slit at least 1 cm narrow');\r\n\r\nexport const SpellsPerks = [MortisAlbum, Ocultos, Biopod, DimensionalSwap];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Forensics = new PerkTemplate({\r\n    name: 'forensics',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'You know how to better investigate a crime scene, you gain +3 to investigation'\r\n}, {\r\n    applyTo: 'crimescene',\r\n    amount: 3\r\n});\r\n\r\nexport const Enigmas = new PerkTemplate({\r\n    name: 'enigmas',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'Mysteries, riddles, codes, clues- Your character can analyze them with +3 to investigation'\r\n}, {\r\n    applyTo: 'enigma',\r\n    amount: 3\r\n});\r\n\r\nexport const Search = new PerkTemplate({\r\n    name: 'search',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'finding hidden objects'\r\n}, {\r\n    applyTo: 'search',\r\n    amount: 3\r\n});\r\n\r\nexport const InvestigationPerks = [Forensics, Enigmas, Search];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Interrogator = new PerkTemplate({\r\n    name: 'interrogator',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'Your character is better able to break down a subject to the point where they no longer can without information, you gain +3 to interrogation'\r\n}, {\r\n    applyTo: 'interrogation',\r\n    amount: 3\r\n});\r\n\r\nexport const Frighten = new PerkTemplate({\r\n    name: 'frighten',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'Your character is able to emit a terrifying display, enemies must roll fear vs intimidation'\r\n}, {\r\n    applyTo: 'frighten',\r\n    amount: 0\r\n});\r\n\r\nexport const Spook = new PerkTemplate({\r\n    name: 'spook',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'Your character gains +3 when telling spooky story'\r\n}, {\r\n    applyTo: 'spook',\r\n    amount: 3\r\n});\r\n\r\nexport const IntimidationPerks = [Interrogator, Frighten, Spook];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const SlightOfHand = new PerkTemplate({\r\n    name: 'slight of hand',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all sight of hand rolls'\r\n}, {\r\n    applyTo: 'slightofhand',\r\n    amount: 3\r\n});\r\n\r\nexport const LockPick = new PerkTemplate({\r\n    name: 'lockpick',\r\n    skill: 'larceny',\r\n    level: 2,\r\n    description: 'Your character is well able to pick locks, +6 to all lockinging rolls'\r\n}, {\r\n    applyTo: 'slightofhand',\r\n    amount: 6\r\n});\r\n\r\nexport const HideObject = new PerkTemplate({\r\n    name: 'hide object',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character is good at finding spots to hide objects, +3 to make object hidden'\r\n}, {\r\n    applyTo: 'slightofhand',\r\n    amount: 3\r\n});\r\n\r\nexport const LarcenyPerks = [SlightOfHand, LockPick, HideObject];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Shadow = new PerkTemplate({\r\n    name: 'shadow',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character gains +3 to stealth rolls when following someone while remaining hidden'\r\n}, {\r\n    applyTo: 'shadow',\r\n    amount: 3\r\n});\r\n\r\nexport const Camouflage = new PerkTemplate({\r\n    name: 'camouflage',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is able to use their surroundings to hide in plain sight, +3 to stealth while hiding'\r\n}, {\r\n    applyTo: 'camouflage',\r\n    amount: 3\r\n});\r\n\r\nexport const Detection = new PerkTemplate({\r\n    name: 'detection',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is harder to hide from, anyone hiding counts as -3 vs your perception'\r\n}, {\r\n    applyTo: 'detection',\r\n    amount: 3\r\n});\r\n\r\nexport const StealthPerks = [Shadow, Camouflage, Detection];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const ImprovedForaging = new PerkTemplate({\r\n    name: 'improved foraging',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'Your character is better at foraging for food, gain +3 to foraging rolls'\r\n}, {\r\n    applyTo: 'forage',\r\n    amount: 3\r\n});\r\n\r\nexport const BetterNavigation = new PerkTemplate({\r\n    name: 'better navigation',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'Your character is better at finding their way in the wild, +3 to navigation rolls'\r\n}, {\r\n    applyTo: 'navigate',\r\n    amount: 3\r\n});\r\n\r\nexport const ShelterBuilder = new PerkTemplate({\r\n    name: 'shelter builder',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'your character can build shelters that offer protection against exposure'\r\n}, {\r\n    applyTo: 'shelter',\r\n    amount: 3\r\n});\r\n\r\nexport const SurvivalPerks = [ImprovedForaging, BetterNavigation, ShelterBuilder];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Hacking = new PerkTemplate({\r\n    name: 'hacking',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can hack into computer systems, gain +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 3\r\n});\r\n\r\nexport const AdvancedHacking = new PerkTemplate({\r\n    name: 'advanced hacking',\r\n    skill: 'computer',\r\n    level: 2,\r\n    description: 'Your character is an advanced hacker, gain extra +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 3\r\n});\r\n\r\nexport const Programmer = new PerkTemplate({\r\n    name: 'programmer',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can write software'\r\n}, {\r\n    applyTo: 'craft software',\r\n    amount: 3\r\n});\r\n\r\nexport const ComputerPerks = [Hacking, AdvancedHacking, Programmer];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Healer = new PerkTemplate({\r\n    name: 'healer',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character knows how to clean wounds and apply bandages, gains +3 to medicine when attending to injuries'\r\n}, {\r\n    applyTo: 'healing',\r\n    amount: 3\r\n});\r\n\r\nexport const MedicineExpert = new PerkTemplate({\r\n    name: 'medicine expert',\r\n    skill: 'medicine',\r\n    level: 2,\r\n    description: 'Your character knows which medicines are best for which situation and how to dose them, +3 to giving medicine'\r\n}, {\r\n    applyTo: 'medicines',\r\n    amount: 6\r\n});\r\n\r\nexport const Surgeon = new PerkTemplate({\r\n    name: 'surgeon',\r\n    skill: 'medicine',\r\n    level: 2,\r\n    description: 'Your character can perform surgeries'\r\n}, {\r\n    applyTo: 'suregon',\r\n    amount: 6\r\n});\r\n\r\nexport const Psychiatrist = new PerkTemplate({\r\n    name: 'psychiatrist',\r\n    skill: 'medicine',\r\n    level: 2,\r\n    description: 'Your character can perform psychiatric diagnostics and treatment'\r\n}, {\r\n    applyTo: 'psychiatry',\r\n    amount: 6\r\n});\r\n\r\nexport const MedicinePerks = [Healer, MedicineExpert, Surgeon, Psychiatrist];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const DetectMotives = new PerkTemplate({\r\n    name: 'detect motives',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'Your character is more likely to accurately guess other peoples motives, gain +3 to empathy when finding out motives'\r\n}, {\r\n    applyTo: 'detectmotives',\r\n    amount: 3\r\n});\r\n\r\nexport const DetectLies = new PerkTemplate({\r\n    name: 'detect lies',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'Your character is harder to lie to and can pick up on small signs that someone is not truthful, you gain +3 vs lies'\r\n}, {\r\n    applyTo: 'detectlies',\r\n    amount: 3\r\n});\r\n\r\nexport const DetectPersonality = new PerkTemplate({\r\n    name: 'detect personality',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'Your char acter can read other people and better understand their personality, you gain +3 when attempting to read personality'\r\n}, {\r\n    applyTo: 'detectpersonality',\r\n    amount: 3\r\n});\r\n\r\nexport const EmpathyPerks = [DetectMotives, DetectLies, DetectPersonality];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const HideEmotion = new PerkTemplate({\r\n    name: 'hide emotion',\r\n    skill: 'subtrefuge',\r\n    level: 1,\r\n    description: 'Your character is harder to read than most, gain +2 vs having your personality or motives detected'\r\n}, {\r\n    applyTo: 'emotions',\r\n    amount: 2\r\n});\r\n\r\nexport const Deception = new PerkTemplate({\r\n    name: 'deception',\r\n    skill: 'subtrefuge',\r\n    level: 1,\r\n    description: 'Your character is a skilled liar, gain +3 vs having your lies spotted'\r\n}, {\r\n    applyTo: 'lies',\r\n    amount: 3\r\n});\r\n\r\nexport const SubtreFugePerks = [HideEmotion, Deception];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Climber = new PerkTemplate({\r\n    name: 'climber',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character is better at climing, gain +3 to climbing rolls'\r\n}, {\r\n    applyTo: 'climb',\r\n    amount: 3\r\n});\r\n\r\nexport const Runner = new PerkTemplate({\r\n    name: 'runner',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character is better at running, gain +3 to running'\r\n}, {\r\n    applyTo: 'run',\r\n    amount: 3\r\n});\r\n\r\nexport const Jumper = new PerkTemplate({\r\n    name: 'jumper',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character is better at jumping, gain +3 to jumping rolls'\r\n}, {\r\n    applyTo: 'jump',\r\n    amount: 3\r\n});\r\n\r\nexport const Swimmer = new PerkTemplate({\r\n    name: 'swimmer',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character is better at swimming, gain +3 to swimming rolls'\r\n}, {\r\n    applyTo: 'jump',\r\n    amount: 3\r\n});\r\n\r\nexport const DeepLungs = new PerkTemplate({\r\n    name: 'deep lungs',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character has deep lungs, gain +3 to holding your breath'\r\n}, {\r\n    applyTo: 'breath',\r\n    amount: 3\r\n});\r\n\r\nexport const GoodFortitude = new PerkTemplate({\r\n    name: 'good fortitude',\r\n    skill: 'athletics',\r\n    level: 1,\r\n    description: 'Your character has great fortitude, gain +1 hitpoints'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 1\r\n});\r\n\r\nexport const GreatFortitude = new PerkTemplate({\r\n    name: 'great fortitude',\r\n    skill: 'athletics',\r\n    level: 2,\r\n    description: 'Your character has great fortitude, gain +2 hitpoints'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 2\r\n});\r\n\r\nexport const AthleticsPerks = [Climber, Runner, Swimmer, Jumper, DeepLungs, GoodFortitude, GreatFortitude];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const Balance = new PerkTemplate({\r\n    name: 'balance',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has excellent balance, gain +3 to balancing rolls'\r\n}, {\r\n    applyTo: 'balance',\r\n    amount: 3\r\n});\r\n\r\nexport const Throwing = new PerkTemplate({\r\n    name: 'throwing',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has excellent aim while throwing, gain +3 to all throw rolls'\r\n}, {\r\n    applyTo: 'throw',\r\n    amount: 3\r\n});\r\n\r\nexport const Dodger = new PerkTemplate({\r\n    name: 'dodger',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is a faster dodger, gain +3 to all dodge rolls and passive dodging'\r\n}, {\r\n    applyTo: 'dodge',\r\n    amount: 3\r\n});\r\n\r\nexport const Tumbler = new PerkTemplate({\r\n    name: 'tumbler',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is an avid tumbler, gain +3 to all tumbling rolls'\r\n}, {\r\n    applyTo: 'tumble',\r\n    amount: 3\r\n});\r\n\r\nexport const AcrobaticsPerks = [Balance, Throwing, Dodger, Tumbler];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const ArtOfDeal = new PerkTemplate({\r\n    name: 'the art of the deal',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is a strong negotiator when it comes to making a deal, +3 to persuation rolls when making deal'\r\n}, {\r\n    applyTo: 'deal',\r\n    amount: 3\r\n});\r\n\r\nexport const MotivationalSpeaker = new PerkTemplate({\r\n    name: 'motivational speaker',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is an adept motivational speaker, you gain +3 to persuation when rolling for motivational speech'\r\n}, {\r\n    applyTo: 'motivationalspeaker',\r\n    amount: 3\r\n});\r\n\r\nexport const InspireCourage = new PerkTemplate({\r\n    name: 'inspire courage',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'your character can inspire courage, speak for 1 minute and roll persuation, any character gains that hears you +2 fear resistence but not more than your result'\r\n}, {\r\n    applyTo: 'inspirecourage',\r\n    amount: 0\r\n});\r\n\r\nexport const PeaceMaker = new PerkTemplate({\r\n    name: 'peace maker',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is known for talking down hostiles and coming to a non-violent outcome, gain +3 when attempting to talk down a hostile'\r\n}, {\r\n    applyTo: 'peacemaker',\r\n    amount: 0\r\n});\r\n\r\nexport const PersuationPerks = [ArtOfDeal, MotivationalSpeaker, InspireCourage, PeaceMaker];","import { PerkTemplate } from \"../Perks\";\r\n\r\nexport const CriminalTrader = new PerkTemplate({\r\n    name: 'criminal trader',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all fencing rolls, +3 to all black market rolls involving illegal goods'\r\n}, {\r\n    applyTo: 'fencing',\r\n    amount: 3\r\n});\r\n\r\nexport const Gangster = new PerkTemplate({\r\n    name: 'gangster',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character is well experienced with gangs both from the inside and outside, gain +3 to all gang rolls and you may start out as a gang member'\r\n});\r\n\r\nexport const Gossiper = new PerkTemplate({\r\n    name: 'gossiper',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all gossip roles and using the skill does not block other activities.'\r\n});\r\n\r\nexport const LocalSlang = new PerkTemplate({\r\n    name: 'local slang',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Pick one location, you know the slang of that location and gain +3 to all streetwise rolls there'\r\n});\r\n\r\n\r\nexport const StreetwisePerks = [CriminalTrader, Gangster, Gossiper, LocalSlang];","import { CombatPerks } from './perks/Combat';\r\nimport { FirearmsPerks } from './perks/Firearms';\r\nimport { PilotPerks } from './perks/Pilot';\r\nimport { SpellsPerks } from './perks/Spells';\r\nimport { InvestigationPerks } from './perks/Investigation';\r\nimport { IntimidationPerks } from './perks/Intimidation';\r\nimport { LarcenyPerks } from './perks/Larceny';\r\nimport { StealthPerks } from './perks/Stealth';\r\nimport { SurvivalPerks } from './perks/Survival';\r\nimport { ComputerPerks } from './perks/Computer';\r\nimport { MedicinePerks } from './perks/Medicine';\r\nimport { EmpathyPerks } from './perks/Empathy';\r\nimport { SubtreFugePerks } from './perks/Subtrefuge';\r\nimport { AthleticsPerks } from './perks/Athletics';\r\nimport { AcrobaticsPerks } from './perks/Acrobatics';\r\nimport { PersuationPerks } from './perks/Persuation';\r\nimport { StreetwisePerks } from './perks/Streetwise';\r\nimport { Perk } from './Perks';\r\n\r\nexport const GetPerkList = (): Perk[] => {\r\n    return [\r\n        ...CombatPerks,\r\n        ...FirearmsPerks,\r\n        ...PilotPerks,\r\n        ...SpellsPerks,\r\n        ...InvestigationPerks,\r\n        ...IntimidationPerks,\r\n        ...LarcenyPerks,\r\n        ...StealthPerks,\r\n        ...SurvivalPerks,\r\n        ...ComputerPerks,\r\n        ...MedicinePerks,\r\n        ...EmpathyPerks,\r\n        ...SubtreFugePerks,\r\n        ...AthleticsPerks,\r\n        ...AcrobaticsPerks,\r\n        ...PersuationPerks,\r\n        ...StreetwisePerks\r\n\r\n    ].sort(sortPerk);\r\n}\r\n\r\nconst sortPerk = (prevPerk: Perk, nextPerk: Perk) => {\r\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\r\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\r\n};","import { Skill } from \"./Skills\";\r\nimport { Perk } from './Perks';\r\nimport { Trait } from \"./traits/Traits\";\r\nimport { GetSkillList } from \"./GetSkillList\";\r\n\r\nexport const fSum = (n: number): number => {\r\n    let x = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        x += i;\r\n    }\r\n    return x;\r\n};\r\n\r\nexport interface IHooker {\r\n    applyTo: string;\r\n    amount: number;\r\n}\r\n\r\nexport interface ICharacter {\r\n    name: string;\r\n    species: string;\r\n    gender: string;\r\n    background: string;\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n}\r\n\r\nexport class Character {\r\n    name: string;\r\n    species: string;\r\n    gender: string;\r\n    age: number;\r\n    background: string;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n    constructor(copy?: ICharacter) {\r\n        this.name = (copy && copy.name) || \"\";\r\n        this.species = (copy && copy.species) || \"\";\r\n        this.gender = (copy && copy.gender) || \"\";\r\n        this.background = (copy && copy.background) || \"\";\r\n        this.strength = (copy && copy.strength) || 4;\r\n        this.agility = (copy && copy.agility) || 4;\r\n        this.endurance = (copy && copy.endurance) || 4;\r\n        this.perception = (copy && copy.perception) || 4;\r\n        this.willpower = (copy && copy.willpower) || 4;\r\n        this.intelligence = (copy && copy.intelligence) || 4;\r\n        this.skills = (copy && copy.skills) || GetSkillList();\r\n        this.traits = (copy && copy.traits) || [];\r\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\r\n        else this.perks = [];\r\n        this.age = (copy && copy.age) || 24;\r\n    }\r\n\r\n    public getCharacterPointsCostPerks() {\r\n        return this.perks.length > 0 ? this.perks.map(p => p.cost()).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostTraits() {\r\n        return this.traits.length > 0 ? this.traits.map(t => t.cost).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostSkills() {\r\n        return this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    public getCharacterPointsCostAttribute() {\r\n        const intMultipler = this.species === 'merlion' ? 3 : 4;\r\n        return fSum(this.strength) * 4\r\n            + fSum(this.agility) * 4\r\n            + fSum(this.endurance) * 4\r\n            + fSum(this.perception) * 4\r\n            + fSum(this.willpower) * 4\r\n            + fSum(this.intelligence) * intMultipler;\r\n    }\r\n\r\n    public getCalculatedPointsUsed() {\r\n        return this.getCharacterPointsCostPerks() + this.getCharacterPointsCostSkills() + this.getCharacterPointsCostTraits();\r\n    }\r\n\r\n    public getCalculatedPointsUsedPointBuy() {\r\n        return this.getCalculatedPointsUsed() + this.getCharacterPointsCostAttribute();\r\n    }\r\n\r\n    public getCalculatedPointsLeft() {\r\n        return this.getStartingPointsAvailable() - this.getCalculatedPointsUsed();\r\n    }\r\n\r\n    private getSkillLevel(skillName: string) {\r\n        var skill = this.skills.find(s => s.name === skillName);\r\n        if (skill !== undefined) return skill.level;\r\n        return 0;\r\n    }\r\n\r\n    public getPassiveDefense() {\r\n        const combat = this.getSkillLevel('combat');\r\n        const acrobatics = this.getSkillLevel('acrobatics');\r\n        return 10 + this.agility + Math.max(combat, acrobatics);\r\n    }\r\n\r\n    private static CharacterPoints(start: number, agePhases: number[], expPhases: number[], age: number) {\r\n        let p = start;\r\n        if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\r\n        let prevPhase = 0;\r\n        for (var phase in agePhases) {\r\n            let currentAgePhase = agePhases[phase];\r\n            let expPhase = expPhases[phase];\r\n\r\n            let ageRange = currentAgePhase - prevPhase;\r\n            if (age > prevPhase) p += Math.min(age - prevPhase, ageRange) * expPhase;\r\n            prevPhase = currentAgePhase;\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    public static CharacterPointsHuman(age: number) {\r\n        return Character.CharacterPoints(0, [18, 26, 40, 80], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static CharacterPointsMerlion(age: number) {\r\n        return Character.CharacterPoints(0, [16, 28, 50, 90], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static CharacterPointsShambra(age: number) {\r\n        return Character.CharacterPoints(0, [10, 20, 40, 80, 160, 320, 640], [4, 5, 6, 8, 10, 11, 12], age);\r\n    }\r\n\r\n    public static CharacterPointsNekovian(age: number) {\r\n        return Character.CharacterPoints(0, [16, 24, 36, 80], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static ExperienceMultiplerHuman(age: number) {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    public static ExperienceMultiplerMerlion(age: number) {\r\n        if (age > 70) return 1;\r\n        if (age > 60) return 1.5;\r\n        if (age > 50) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    public static ExperienceMultiplerShambra(age: number) {\r\n        if (age > 100) return 3;\r\n        if (age > 80) return 2.5;\r\n        if (age > 60) return 2;\r\n        if (age > 40) return 1.5;\r\n        return 1;\r\n    }\r\n\r\n    public static ExperienceMultiplerNekovian(age: number) {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 30) return 2.5;\r\n        if (age > 26) return 3;\r\n        if (age > 24) return 3.5;\r\n        if (age > 20) return 4;\r\n        if (age > 16) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    private characterPointsHuman() {\r\n        return Character.CharacterPointsHuman(this.age);\r\n    }\r\n\r\n    private characterPointsMerlion() {\r\n        return Character.CharacterPointsMerlion(this.age);\r\n    }\r\n\r\n    private characterPointsShambra() {\r\n        return Character.CharacterPointsShambra(this.age);\r\n    }\r\n\r\n    private characterPointsNekovian() {\r\n        return Character.CharacterPointsNekovian(this.age);\r\n    }\r\n\r\n    public getStartingPointsAvailable() {\r\n\r\n        switch (this.species) {\r\n            case 'human': return this.characterPointsHuman();\r\n            case 'merlion': return this.characterPointsMerlion();\r\n            case 'shambra': return this.characterPointsShambra();\r\n            case 'nekovian': return this.characterPointsNekovian();\r\n            default: return this.characterPointsHuman();\r\n        }\r\n    }\r\n\r\n    public getExperienceMultiplier() {\r\n        if (this.age < 16) return 3 * + (this.getHook('exp') + 1);\r\n        if (this.age < 20) return 2.5 * + (this.getHook('exp') + 1);\r\n        if (this.age < 24) return 2 * + (this.getHook('exp') + 1);\r\n        if (this.age < 28) return 1.75 * + (this.getHook('exp') + 1);\r\n        if (this.age < 32) return 1.5 * + (this.getHook('exp') + 1);\r\n        if (this.age < 36) return 1.25 * + (this.getHook('exp') + 1);\r\n        return 1;\r\n    }\r\n\r\n    public getLife() {\r\n        return this.strength + this.endurance * 2 + this.getHook('life');\r\n    }\r\n\r\n    public getMana() {\r\n        return this.endurance + this.willpower * 2 + this.getHook('mana');\r\n    }\r\n\r\n    public getMentalHealth() {\r\n        return this.willpower * 2 + this.getHook('mentalHealth');\r\n    }\r\n\r\n    public getDamageBonusSmall() {\r\n        return Math.floor(this.strength / 5) + this.getHook('lightmelee');\r\n    }\r\n\r\n    public getDamageBonusMedium() {\r\n        return Math.floor(this.strength / 4) + this.getHook('mediummelee');\r\n    }\r\n    public getDamageBonusLarge() {\r\n        return Math.floor(this.strength / 3) + this.getHook('largemelee');\r\n    }\r\n\r\n    public getSequence() {\r\n        return this.perception + this.agility + this.getHook('sequence');\r\n    }\r\n\r\n    public getHook(applyTo: string): number {\r\n\r\n        return this.sumOr(applyTo, this.perks, 0) + this.sumOr(applyTo, this.traits, 0);\r\n    }\r\n\r\n    public explain(what: string): string {\r\n        switch (what) {\r\n            case 'strength': return 'muscle power';\r\n            case 'endurance': return 'stamina';\r\n            case 'agility': return 'speed, coordination';\r\n            case 'perception': return 'seeing, hearing';\r\n            case 'intelligence': return 'brain power';\r\n            case 'willpower': return 'brain stamina';\r\n            case 'life': return 'STR + 2 x END';\r\n            case 'mana': return 'END + 2 x WILL';\r\n            case 'mentalHealth': return 'WILL x 2';\r\n            case 'age': return 'how old';\r\n            case 'damageBonus': return 'STR /5, /4, /3';\r\n            case 'name': return '';\r\n            case 'gender': return '';\r\n            case 'species': return '';\r\n            case 'pointsLeft': return 'points remaining';\r\n            case 'experienceMultiplier': return 'exp bonus';\r\n            case 'passivedefense': return '10 + AGL + skill';\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    private sumOr(applyTo: string, sum: IHooker[], or: number): number {\r\n        let s = sum.filter(perk => perk.applyTo === applyTo).map(p => p.amount);\r\n        if (s.length > 0) return s.reduce((a, b) => a + b);\r\n        else return or;\r\n    }\r\n}","import React, { useState, Suspense, lazy } from 'react';\r\nimport './App.css';\r\nimport { Character } from './components/Character';\r\nimport { DialogTitle } from '@material-ui/core';\r\nimport { CharacterSheet } from './views/CharacterSheet';\r\nconst SkillPerkManual = lazy(() => import('./views/SkillPerkManual'));\r\nconst GameMaster = lazy(() => import('./views/GameMaster'));\r\nconst WorldAndLore = lazy(() => import('./views/WorldAndLore'));\r\nconst Wizard = lazy(() => import('./views/Wizard'));\r\nconst PlayerManual = lazy(() => import('./views/PlayerManual'));\r\n\r\nconst App: React.FC = () => {\r\n  const main = 'main';\r\n  const [viewMode, setViewMode] = useState(main);\r\n  const [character, setCharacter] = useState(new Character());\r\n  const characterSheet = 'Character Sheet';\r\n  const playerManual = 'Player Manual';\r\n  const gameMaster = 'Game Master';\r\n  const worldAndLore = 'World & Lore';\r\n  const skillsAndPerks = 'Skills & Perks';\r\n  const wizard = 'Character Wizard';\r\n  const about = 'About';\r\n  let options = [main,\r\n    characterSheet,\r\n    playerManual,\r\n    gameMaster,\r\n    worldAndLore,\r\n    skillsAndPerks,\r\n    wizard,\r\n    about\r\n  ];\r\n  const parseMenu = (choice: string) => setViewMode(choice);\r\n\r\n  return (\r\n    <>\r\n      <Menu callback={(option) => parseMenu(option)} options={options} current={viewMode} />\r\n      <div className=\"page\">\r\n\r\n        <Conditional shouldView={viewMode === main}>\r\n          <DialogTitle>Infinite Darkness</DialogTitle>\r\n          <p>This webpage is a resource for both players and game masters to run a tabletop game of Infinite Darkness.</p>\r\n          <p>Infinite Darkness is a sci-fi roleplaying game set in a future where humanity has begun to take to the stars, aliens and humans co exist.</p>\r\n          <p>With the discovery of faster than light travel- the ability to visit distant stars became a possibility. But space is still vast beyond imagining, the time it takes to travel is still long.\r\n          Due to the limitations of telescopes most stars in the local neighborhood are still mostly uncharted, very little is known of each system beyond the classification of the star and occationally limited information of a planet.\r\n          </p>\r\n          <p>No body knows what lurks out there and if you can't take a little bloody nose then perhaps you ought to go home and crawl under you bed. It's not safe out there, it's wonderous with treasures to satiete desires both subtle and gross. But it's not for the timid</p>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === characterSheet}>\r\n          <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === playerManual}>\r\n          <PlayerManual />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === gameMaster}>\r\n          <GameMaster></GameMaster>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === worldAndLore}>\r\n          <WorldAndLore></WorldAndLore>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === skillsAndPerks}>\r\n          <SkillPerkManual />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === wizard}>\r\n          <Wizard />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === about}>\r\n          <h2>About</h2>\r\n          <h3>This is a work in progress</h3>\r\n          <p>Author: Thorvaldur Saemundsson</p>\r\n          <p>Technology: ReactJS, github pages</p>\r\n          <p>Project: Infinite Darkness, a sci-fi and fantasy game</p>\r\n          <p>Please formulate any complaints and suggestions in the form of a pull request ;)</p>\r\n          <span style={{ float: 'right', fontSize: '11px' }}>Copyright Thorvaldur Saemundsson</span>\r\n        </Conditional>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\ninterface ItemProp {\r\n  shouldView: boolean;\r\n}\r\n\r\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\r\n  if (shouldView) return <Suspense fallback={<div>Loading...</div>}>{children}</Suspense>;\r\n  else return null;\r\n}\r\n\r\ninterface MenuProps {\r\n  callback: (option: string) => void;\r\n  options: string[];\r\n  current: string;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = (props) => {\r\n  return <div className=\"pageTop\">\r\n    <div className=\"pageTopInner\">\r\n      {props.options.map(option =>\r\n        <Tab active={option === props.current} key={option} onClick={() => props.callback(option)}>{option}</Tab>\r\n      )}\r\n    </div>\r\n  </div>;\r\n}\r\n\r\ninterface ITabPRops {\r\n  onClick: Function;\r\n  active: boolean;\r\n}\r\n\r\nconst Tab: React.FC<ITabPRops> = (props) => {\r\n  return <button className={props.active ? 'tab tabActive no-print' : 'tab no-print'} onClick={() => props.onClick()}>{props.children}</button>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\n\r\ninterface IHideText {\r\n    isEdit: \"edit\" | \"print\" | \"explain\" | \"hide\";\r\n    explain: string;\r\n    txt: string | number;\r\n}\r\nexport const HideText: React.FC<IHideText> = ({ isEdit, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <span className='no-print'>{txt}</span>;\r\n    else if (isEdit === \"explain\")\r\n        return <span className='no-print'>{explain}</span>;\r\n    else return null;\r\n}\r\n\r\ninterface IEditText extends IHideText {\r\n    onChange: (str: string) => void;\r\n}\r\n\r\nconst EditText: React.FC<IEditText> = ({ isEdit, onChange, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <input className='no-print' type=\"text\" onChange={(e) => onChange(e.target.value)} value={txt}></input>\r\n    else return <HideText txt={txt} isEdit={isEdit} explain={explain} />\r\n}\r\n\r\n\r\n\r\nexport default EditText;"],"sourceRoot":""}