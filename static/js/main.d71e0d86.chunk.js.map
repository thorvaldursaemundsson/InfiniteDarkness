{"version":3,"sources":["components/Label.tsx","components/Field.tsx","components/Skills.tsx","components/Character.tsx","components/perks/TemplatePerk.tsx","components/Perks.tsx","components/StringField.tsx","components/CharacterSheet.tsx","components/PlayerManual.tsx","components/SkillPerkManual.tsx","components/GameMaster.tsx","components/Lore/FTLHyperDrive.tsx","components/Lore/History.tsx","components/Lore/Merlions.tsx","components/WorldAndLore.tsx","components/Wizard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Label","children","style","display","minWidth","Field","label","value","onChange","max","min","modifier","enableButtons","useState","viewChildren","setViewChildren","ma","undefined","mi","total","Paper","className","Button","key","size","variant","onClick","GetSkillList","combat","pilot","spells","investigation","persuation","intimidation","larceny","stealth","survival","science","computer","medicine","surgery","empathy","subtrefuge","athletics","acrobatics","search","slightOfHand","sort","a","b","attribute","fSum","n","x","i","Character","copy","name","species","gender","age","background","strength","agility","endurance","perception","willpower","intelligence","skills","perks","this","Math","floor","sqrt","perkCost","length","map","p","cost","reduce","s","level","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","characterPoints","characterPointsHuman","characterPointsMerlion","characterPointsKlackon","getStartingPointsAvailable","TemplatePerk","skill","TextField","PerkTemplate","data","_description","description","Skills","GetPerkList","generic10All","m","generic20All","generic30All","generic40All","gun1","gun2","gun3","gun4","sortPerk","prevPerk","nextPerk","StringField","props","enableEdit","e","target","CharacterSheet","useReducer","useCharacter","initialCharacter","character","dispatch","charJSON","setCharJSON","edit","setEdit","perksList","textAlign","characterCallback","json","JSON","stringify","makeJSONText","Grid","container","spacing","item","xs","sm","getCalculatedPointsUsed","getMaximumPointsAvailable","getMaxStrength","action","getMaxAgility","getMaxEndurance","getMaxPerception","getMaxWillpower","getMaxIntelligence","getExperienceMultiplier","getHitpoints","getMana","getDamageBonusSmall","getDamageBonusMedium","getDamageBonusLarge","substring","toUpperCase","filter","perkToAdd","perk","state","r","findIndex","push","pta","PlayerManual","SkillSection","currentSkill","setCurrentSkill","width","PerkSection","currentPerk","setCurrentPerk","SkillPerkManual","GameMaster","youCant","setYouCant","alert","yc","FTLHyperDrive","open","setOpen","HistorySection","title","History","Merlions","merlionText","setMerlionText","useEffect","log","fetch","then","response","text","WorldAndLore","Step0","currentNumber","callback","step","Step1","setSpecies","setGender","setName","Step2","birthPlaceOption1","setBirthPlaceOption1","birthPlaceOption2","setBirthPlaceOption2","getAddLib","option","Step3","Step4","Step5","Step6","Step7","Step8","Step9","Wizard","viewStep","setViewStep","setCharacter","viewSheet","setViewSheet","setData","c","Conditional","shouldView","padding","Menu","options","App","viewMode","setViewMode","wizard","MainButton","DialogTitle","info","charData","prompt","parse","loadCharacter","float","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d71e0d86.chunk.js","sourcesContent":["    import React from 'react';\n\nexport const Label: React.FC<{}> = ({children}) => {\n    return <label style={{display:'inline-block', minWidth:'140px'}}>{children}</label>;\n}\n\n","import React, { useState } from 'react';\nimport { Paper, Button } from '@material-ui/core';\nimport { Label } from './Label';\n\ninterface FieldProps {\n    label: string;\n    value: number;\n    max?: number;\n    min?: number;\n    modifier?: number;\n    enableButtons?: boolean;\n    onChange: (n: number) => void;\n}\n\nexport const Field: React.FC<FieldProps> = ({ label, value, onChange, max, min, modifier, enableButtons, children }) => {\n    const [viewChildren, setViewChildren] = useState(false);\n    let ma = max !== undefined ? max : 10;\n    let mi = min !== undefined ? min : 1;\n    let total = modifier !== undefined ? value + modifier : value;\n    return <Paper className=\"extraPadding\">\n        <Label>{label}:</Label> <Label>{value} {modifier !== undefined ? ` | ${modifier} | ${total}` : null}</Label>\n        {enableButtons === true ? <Button key={'fieldbutton_increase_'+label} size=\"small\" variant=\"contained\" onClick={() => onChange(ma <= value ? value : value + 1)}>+</Button> : null}\n        {enableButtons === true ? <Button key={'fieldbutton_decrease_'+label}  size=\"small\" variant=\"contained\" onClick={() => onChange(mi >= value ? value : value - 1)}>-</Button> : null}\n\n        {children !== undefined ? viewChildren === true ?\n            <Paper><Button  key={'fieldbutton_children_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(false)}>X</Button>{children} </Paper>\n            : (enableButtons === true ? <Button  key={'fieldbutton_children_2_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(true)}>?</Button> : null)\n            : null}\n    </Paper>\n}","import combat from './skills/combat.json';\nimport pilot from './skills/pilot.json';\nimport spells from './skills/spells.json';\nimport investigation from './skills/investigation.json';\nimport intimidation from './skills/intimidation.json';\nimport larceny from './skills/larceny.json';\nimport stealth from './skills/stealth.json';\nimport survival from './skills/survival.json';\nimport science from './skills/science.json';\nimport computer from './skills/computer.json';\nimport medicine from './skills/medicine.json';\nimport surgery from './skills/surgery.json';\nimport empathy from './skills/empathy.json';\nimport subtrefuge from './skills/subtrefuge.json';\nimport athletics from './skills/athletics.json';\nimport acrobatics from './skills/acrobatics.json';\nimport search from './skills/search.json';\nimport slightOfHand from './skills/slightOfHand.json';\nimport persuation from './skills/persuation.json';\n\n\nexport interface Skill {\n    name: string;\n    attribute: string | 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\n    level: number;\n    description: string;\n}\nexport const GetSkillList = (): Skill[] => {\n    return [\n        { ...combat },\n        { ...pilot },\n        { ...spells },\n        { ...investigation },\n        { ...persuation },\n        { ...intimidation },\n        { ...larceny },\n        { ...stealth },\n        {  ...survival },\n        { ...science },\n        { ...computer },\n        { ...medicine },\n        { ...surgery },\n        { ...empathy },\n        { ...subtrefuge },\n        { ...athletics },\n        { ...acrobatics },\n        { ...search },\n        {  ...slightOfHand }\n    ].sort((a, b) => a.attribute < b.attribute ? -1 : 1);\n}","import { Skill, GetSkillList } from \"./Skills\";\nimport { Perk } from './Perks';\n\nconst fSum = (n: number): number => {\n    let x = 0;\n    for (let i = 0; i <= n; i++) {\n        x += i;\n    }\n    return x;\n};\n\nexport interface ICharacter {\n    name: string;\n    species: string;\n    gender: string;\n    background: string;\n    age: number;\n    strength: number;\n    agility: number;\n    endurance: number;\n    perception: number;\n    willpower: number;\n    intelligence: number;\n    skills: Skill[];\n    perks: Perk[];\n}\n\nexport class Character {\n    name: string;\n    species: string;\n    gender: string;\n    age: number;\n    background: string;\n    strength: number;\n    agility: number;\n    endurance: number;\n    perception: number;\n    willpower: number;\n    intelligence: number;\n    skills: Skill[];\n    perks: Perk[];\n    constructor(copy?: ICharacter) {\n        this.name = (copy && copy.name) || \"\";\n        this.species = (copy && copy.species) || \"\";\n        this.gender = (copy && copy.gender) || \"\";\n        this.background = (copy && copy.background) || \"\";\n        this.strength = (copy && copy.strength) || 4;\n        this.agility = (copy && copy.agility) || 4;\n        this.endurance = (copy && copy.endurance) || 4;\n        this.perception = (copy && copy.perception) || 4;\n        this.willpower = (copy && copy.willpower) || 4;\n        this.intelligence = (copy && copy.intelligence) || 4;\n        this.skills = (copy && copy.skills) || GetSkillList();\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\n        else this.perks = [];\n        this.age = (copy && copy.age) || 24;\n    }\n\n    public getMaxStrength() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 1, 11);\n                if (this.age < 26) return 11;\n                if (this.age < 36) return 12;\n                if (this.age < 50) return 10;\n                if (this.age < 66) return 9;\n                if (this.age < 90) return 8;\n                return 7;\n            case 'merlion':\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\n                if (this.age < 26) return 10;\n                if (this.age < 40) return 11;\n                if (this.age < 70) return 10;\n                if (this.age < 90) return 9;\n                return 8;\n            case 'klackon':\n                return 4 + Math.floor(Math.sqrt(this.age));\n            default: return 10;\n        }\n    }\n    public getMaxAgility() {\n        switch (this.species) {\n            case 'human':\n                return 10;\n            case 'merlion':\n                return 12;\n            case 'klackon':\n                return 9;\n            default: return 10;\n        }\n    }\n    public getMaxEndurance() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 2, 11);\n                if (this.age < 26) return 12;\n                if (this.age < 36) return 13;\n                if (this.age < 50) return 12;\n                if (this.age < 66) return 11;\n                if (this.age < 90) return 10;\n                return 9;\n            case 'merlion':\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\n                if (this.age < 26) return 10;\n                if (this.age < 40) return 11;\n                if (this.age < 70) return 10;\n                if (this.age < 90) return 9;\n                return 8;\n            case 'klackon':\n                return 12\n            default: return 10;\n        }\n    }\n    public getMaxPerception() {\n        switch (this.species) {\n            case 'human':\n                if (this.age < 18) return Math.min(Math.floor(this.age / 18) + 1, 13);\n                if (this.age < 26) return 12;\n                if (this.age < 30) return 11;\n                if (this.age < 36) return 9;\n                if (this.age < 42) return 8;\n                if (this.age < 50) return 7;\n                return 6;\n            case 'merlion':\n                return 11;\n            case 'klackon':\n                return 12;\n            default: return 10;\n        }\n    }\n    public getMaxWillpower() {\n        switch (this.species) {\n            case 'human':\n                return 12;\n            case 'merlion':\n                return 8;\n            case 'klackon':\n                return 9;\n            default: return 10;\n        }\n    }\n    public getMaxIntelligence() {\n        switch (this.species) {\n            case 'human':\n                return 10;\n            case 'merlion':\n                return 16;\n            case 'klackon':\n                return 5 + Math.floor(Math.sqrt(Math.sqrt(this.age)));\n            default: return 10;\n        }\n    }\n\n    public getCalculatedPointsUsed() {\n        const perkCost = this.perks.length > 0 ? this.perks.map(p => p.cost).reduce((a, b) => a + b) : 0;\n        return fSum(this.strength) * 4\n            + fSum(this.agility) * 4\n            + fSum(this.endurance) * 4\n            + fSum(this.perception) * 4\n            + fSum(this.willpower) * 4\n            + fSum(this.intelligence) * 4\n            + this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0)\n            + perkCost;\n    }\n\n    private characterPoints(start: number, agePhases: number[], expPhases: number[]): number {\n        let p = start;\n        if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\n        let prevPhase = 0;\n        for (var phase in agePhases) {\n            let currentAgePhase = agePhases[phase];\n            let expPhase = expPhases[phase];\n\n            let ageRange = currentAgePhase - prevPhase;\n            if (this.age > prevPhase) p += Math.min(this.age - prevPhase, ageRange) * expPhase;\n            prevPhase = currentAgePhase;\n        }\n\n        return p;\n    }\n\n    private characterPointsHuman() {\n        return this.characterPoints(300, [18, 26, 40, 70], [16, 12, 8, 4]);\n    }\n\n    private characterPointsMerlion() {\n        return this.characterPoints(200, [16, 24, 50, 90], [20, 16, 12, 6]);\n    }\n\n    private characterPointsKlackon() {\n        return this.characterPoints(100, [10, 20, 40, 80, 160, 320, 640], [6, 8, 10, 12, 16, 18, 18]);\n    }\n\n\n\n    public getStartingPointsAvailable() {\n\n        switch (this.species) {\n            case 'human': return this.characterPointsHuman();\n            case 'merlion': return this.characterPointsMerlion();\n            case 'klackon': return this.characterPointsKlackon();\n            default: return this.characterPointsHuman();\n        }\n    }\n\n    public getMaximumPointsAvailable() {\n        return this.getStartingPointsAvailable() * 2;\n    }\n\n    public getExperienceMultiplier() {\n        if (this.age < 16) return 3;\n        if (this.age < 20) return 2.5;\n        if (this.age < 24) return 2;\n        if (this.age < 28) return 1.75;\n        if (this.age < 32) return 1.5;\n        if (this.age < 36) return 1.25;\n        return 1;\n    }\n\n    public getHitpoints() {\n        return this.strength + this.endurance * 2;\n    }\n\n    public getMana() {\n        return this.endurance + this.willpower * 2\n    }\n\n    public getDamageBonusSmall() {\n        return Math.floor(this.strength / 4);\n    }\n\n    public getDamageBonusMedium() {\n        return Math.floor(this.strength / 3);\n    }\n    public getDamageBonusLarge() {\n        return Math.floor(this.strength / 2);\n    }\n}","import {Perk} from './../Perks';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport class TemplatePerk implements Perk\n{\n    name: string;    \n    skill: string;\n    cost: number;\n    description(): JSX.Element {\n        return <TextField />;\n    }\n    constructor(name: string, skill:string, cost: number){\n        this.name = name;\n        this.skill = skill;\n        this.cost = cost;\n    }\n    \n}","import gun1 from './perks/gun1.json';\nimport gun2 from './perks/gun2.json';\nimport gun3 from './perks/gun3.json';\nimport gun4 from './perks/gun4.json';\nimport React from 'react';\nimport { GetSkillList } from './Skills';\nimport { TemplatePerk } from './perks/TemplatePerk';\n\n\nexport interface Perk {\n    name: string;\n    skill: string;\n    cost: number;\n    description(): JSX.Element;\n}\n\ninterface IPerk {\n    name: string;\n    skill: string;\n    cost: number;\n    description: string;\n}\n\nclass PerkTemplate implements Perk{\n    name: string;\n    skill: string;\n    cost: number;\n    _description:string;\n    description():JSX.Element  {\n        return <>{this._description}</>;\n    }\n    constructor(data:IPerk) {\n        this.name = data.name;\n        this.skill = data.skill;\n        this.cost = data.cost;\n        this._description = data.description;\n    }\n}\nconst Skills =GetSkillList();\nexport const GetPerkList = (): Perk[] => {\n    \n    const generic10All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 10\", m.name,10));\n    const generic20All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 20\", m.name,20));\n    const generic30All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 30\", m.name,30));\n    const generic40All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 40\", m.name,40));\n    return [\n        ...generic10All,\n        ...generic20All,\n        ...generic30All,\n        ...generic40All,\n        new PerkTemplate({ ...gun1 }),\n        new PerkTemplate({ ...gun2 }),\n        new PerkTemplate({ ...gun3 }),\n        new PerkTemplate({ ...gun4 }),\n        \n    ].sort(sortPerk);\n}\n\nconst sortPerk = (prevPerk:Perk, nextPerk:Perk) => {\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\n};","import React from 'react';\r\nimport { TextField, Paper } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface FieldProps {\r\n    label: string;\r\n    value: string;\r\n    enableEdit?: boolean;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\nconst StringField: React.FC<FieldProps> = (props: FieldProps) => {\r\n    if (props.enableEdit !== true) return <Paper><Label>{props.label}:</Label><Label>{props.value}</Label></Paper>\r\n    else return <Paper>\r\n        <Label>{props.label}:</Label>\r\n        <TextField value={props.value} onChange={(e) => props.onChange(e.target.value)} >{props.value}</TextField>\r\n    </Paper>\r\n}\r\n\r\nexport default StringField;","import React, { useReducer, useState } from 'react';\nimport { Field } from './Field';\nimport { Paper, Grid, Button } from '@material-ui/core';\nimport { Character } from './Character';\nimport { GetPerkList, Perk } from './Perks';\nimport StringField from './StringField';\n\ninterface CharacterSheetProps {\n    initialCharacter: Character;\n    characterCallback: (c: Character) => void;\n}\n\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\n    const [charJSON, setCharJSON] = useState('');\n    const [edit, setEdit] = useState(false);\n\n    const perksList = GetPerkList();\n\n    const makeJSONText = () => {\n        const json = JSON.stringify({ ...character });\n        setCharJSON(json);\n    };\n\n    return <Paper style={{ textAlign: 'left' }}>\n        <Button key='charactersheet_exit_and_save' onClick={() => props.characterCallback(character)}>exit</Button>\n        {charJSON !== '' ? <Button key='charactersheet_close_character_data' onClick={() => setCharJSON('')}>Close character data</Button> : null}\n        <Button key='charactersheet_make_json_text' onClick={() => makeJSONText()}>Save character data</Button>\n        <Button key='charactersheet_edit' onClick={() => setEdit(!edit)}>edit</Button>\n        <Paper>{charJSON}</Paper>\n        <Grid container spacing={3} >\n            <Grid item xs={12} sm={6}>\n                Character points used {character.getCalculatedPointsUsed()} / {character.getStartingPointsAvailable()} ({character.getMaximumPointsAvailable()})\n                <Field enableButtons={edit} max={character.getMaxStrength()} label='strength' value={character.strength} onChange={n => dispatch({ action: 'strength', value: n })}>Raw muscle strength</Field>\n                <Field enableButtons={edit} max={character.getMaxAgility()} label='agility' value={character.agility} onChange={n => dispatch({ action: 'agility', value: n })}>Steady hands, reflexes</Field>\n                <Field enableButtons={edit} max={character.getMaxEndurance()} label='endurance' value={character.endurance} onChange={n => dispatch({ action: 'endurance', value: n })}>Ability to last long</Field>\n                <Field enableButtons={edit} max={character.getMaxPerception()} label='perception' value={character.perception} onChange={n => dispatch({ action: 'perception', value: n })}>eyesight, hearing, and how much you smell</Field>\n                <Field enableButtons={edit} max={character.getMaxWillpower()} label='willpower' value={character.willpower} onChange={n => dispatch({ action: 'willpower', value: n })}>ability to say \"no\" when it's sooo good</Field>\n                <Field enableButtons={edit} max={character.getMaxIntelligence()} label='intelligence' value={character.intelligence} onChange={n => dispatch({ action: 'intelligence', value: n })}>big brainy boy</Field>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <StringField label={'name'} value={character.name} enableEdit={edit} onChange={n => dispatch({ action: 'name', value: 0, name: n })} ></StringField>\n                <StringField label={'gender'} value={character.gender} enableEdit={edit} onChange={n => dispatch({ action: 'gender', value: 0, name: n })} ></StringField>\n                <StringField label={'species'} value={character.species} enableEdit={edit} onChange={n => dispatch({ action: 'species', value: 0, name: n })} ></StringField>\n                <StringField label={'background'} value={character.background} enableEdit={edit} onChange={n => dispatch({ action: 'background', value: 0, name: n })} ></StringField>\n                <Field enableButtons={edit} label='age' max={900} min={1} value={character.age} onChange={n => dispatch({ action: 'age', value: n })}>Your age determines your starting, maximum experience, as well as experience multiplier</Field>\n                <Paper>Experience multiplier: {character.getExperienceMultiplier()}</Paper>\n                <Paper>Hit points: {character.getHitpoints()}</Paper>\n                <Paper>mana: {character.getMana()}</Paper>\n                <Paper>damage bonus small: {character.getDamageBonusSmall()}</Paper>\n                <Paper>damage bonus medium: {character.getDamageBonusMedium()}</Paper>\n                <Paper>damage bonus large: {character.getDamageBonusLarge()}</Paper>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                {character.skills.map(s => {\n                    let modifier: number = 0;\n                    switch (s.attribute) {\n                        case 'strength': modifier = character.strength; break;\n                        case 'agility': modifier = character.agility; break;\n                        case 'endurance': modifier = character.endurance; break;\n                        case 'perception': modifier = character.perception; break;\n                        case 'willpower': modifier = character.willpower; break;\n                        case 'intelligence': modifier = character.intelligence; break;\n                    }\n                    return <Field key={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\n                        enableButtons={edit}\n                        modifier={modifier}\n                        max={40}\n                        min={0}\n                        label={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\n                        value={s.level}\n                        onChange={(n => dispatch({ action: 'skill', name: s.name, value: n }))}>\n                        {s.description}\n                        {perksList.filter(p => p.skill === s.name).map(p => {\n                            return <Button key={'addperk_' + p.name} onClick={() => dispatch({ action: 'addperk', name: p.name, value: 0, perkToAdd: p })}>{p.name}</Button>;\n                        })}\n                    </Field>\n                })}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <h1>Perks</h1>\n                {character.perks.map(perk => {\n                    return (<p><b>{perk.name}</b> ({perk.cost}) {perk.description()}\n                        <Button key={'removeperk_' + perk.name} size=\"small\" onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>X</Button>\n                    </p>)\n                })}\n            </Grid>\n        </Grid>\n    </Paper>;\n}\n\ninterface dispatcher {\n    action: string;\n    name?: string;\n    value: number;\n    perkToAdd?: Perk;\n}\n\nconst useCharacter = (state: Character, action: dispatcher): Character => {\n    switch (action.action) {\n        case 'strength': return new Character({ ...state, strength: action.value });\n        case 'agility': return new Character({ ...state, agility: action.value });\n        case 'endurance': return new Character({ ...state, endurance: action.value });\n        case 'willpower': return new Character({ ...state, willpower: action.value });\n        case 'perception': return new Character({ ...state, perception: action.value });\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\n        case 'age': return new Character({ ...state, age: action.value });\n        case 'skill':\n            let r = new Character({\n                ...state\n            });\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\n            return r;\n        case 'name': return new Character({ ...state, name: action.name || '' });\n        case 'species': return new Character({ ...state, species: action.name || '' });\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\n        case 'background': return new Character({ ...state, background: action.name || '' });\n    }\n    if (action.action === 'addperk') {\n        let r = new Character({\n            ...state\n        });\n        if (action.perkToAdd !== undefined) r.perks.push(action.perkToAdd);\n        return r;\n    }\n    else if (action.action === 'removeperk') {\n        let r = new Character({\n            ...state\n        });\n        if (action.perkToAdd !== undefined) {\n            let pta = action.perkToAdd;\n            r.perks = r.perks.filter(p => p.name !== pta.name);\n        }\n        return r;\n    }\n\n\n    return state;\n}","import React from 'react';\n\nconst PlayerManual: React.FC = () => {\n    return (<div>\n        <h1>Index</h1>\n        <ul>\n            <li>\n                How to make a character\n            </li>\n            <li>\n                Attributes\n            </li>\n            <li>\n                Skills\n            </li>\n            <li>\n                Perks\n            </li>\n        </ul>\n        <hr />\n        <div>\n            <h2>How to make a character</h2>\n            <h3>Step 1 - concept</h3>\n            <p>The first step is conceptual and mostly abstract, but will feed into the next steps. Begin by answering at least all of these questions.</p>\n            <h4>Where was my character born?</h4>\n            <h4>How old is my character currently?</h4>\n            <h4>What kind of upbringing did my character have?</h4>\n            <h4>How does my character's upbringing bias my character's point of view?</h4>\n            <h4>What major events happened in my characters life?</h4>\n            <h4>How did those events shape my characters personality?</h4>\n            <h4>What lessons and skills did my character learn from that?</h4>\n            <p>There may be more questions you want to ask depending on your answers.</p>\n            <h3>Step 2 - outlining your character</h3>\n            <p>Based on the answer in step 1...</p>\n            <h4>Adjust your age</h4>\n            <p>The older you start at the more character points (applicable experience) you start with.</p>\n            <p>Finally the younger you are the bigger your multiplier, whenever you gain character points in game you multiply them by this.</p>\n            <p>You also have a maximum character point ceiling, this is based off your current age and you can not exceed it</p>\n            <h4>Adjust your attributes</h4>\n            <p>They are as expensive as they are valuable. Choose with care. Save points for skills and perks</p>\n            <h4>Select between 2 and 4 \"main skills\" and as many additional secondary skills as you need.</h4>\n            <p>You'll want to put points into your main skills, note that the cost increases rapidly.\n                The cost for each step is what you have + 1\n                Save some character points for perks</p>\n            <p>Also notice that your attributes play a part in your skill total,\n                for example pilot is a perception skill,\n                when you roll for pilot you roll 2d10 + pilot + perception</p>\n            <h3>Step 3 - choose your perks</h3>\n            <p>Perks are specializations, they either grant new capabilities under a skill or make a specific skill usage more powerful/likely to succeed (skills have multiple uses)</p>\n            <p>Note that perks often come with skill requirements, and for skills that you don't put points into are often not worth taking.</p>\n        </div>\n    </div>);\n}\n\n\nexport default PlayerManual;","import React, { useState } from 'react';\nimport { GetSkillList } from './Skills';\nimport { Button } from '@material-ui/core';\nimport { GetPerkList } from './Perks';\n\nconst SkillPerkManual:React.FC = () => {\n    return <div>\n            <SkillSection />\n            <PerkSection />\n        </div>;\n}\n\nconst SkillSection = () => {\n    const [currentSkill, setCurrentSkill] = useState('');\n    return (<div>\n        <h2>Skills</h2>\n        {GetSkillList().map(skill => {\n            return (<div><h3><span style={{ display: 'inline-block', width: '200px' }}>{skill.name}</span> {currentSkill !== skill.name ?\n                <Button onClick={() => setCurrentSkill(skill.name)}>?</Button> :\n                <Button onClick={() => setCurrentSkill('')}>X</Button>} </h3>\n                {currentSkill === skill.name ? <div>{skill.description}</div> : null}</div>);\n        })}\n    </div>);\n}\n\nconst PerkSection = () => {\n    const [currentPerk, setCurrentPerk] = useState('');\n    return (<div>\n        <h2>Perks</h2>\n        {GetPerkList().map(perk => {\n            return (<div>\n                <h3><span style={{ display: 'inline-block', width: '200px' }}>{perk.name}</span> {currentPerk !== perk.name ?\n                <Button onClick={() => setCurrentPerk(perk.name)}>?</Button> :\n                <Button onClick={() => setCurrentPerk('')}>X</Button>} </h3>\n                {currentPerk === perk.name ? <div>\n                    <p><b>Cost</b>: {perk.cost}</p>\n                    <p><b>Skill</b>: {perk.skill}</p>\n                {perk.description()}</div> : null}\n            </div>);\n        })}\n    </div>)\n}\n\nexport default SkillPerkManual;","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nconst GameMaster: React.FC = () => {\n    const [youCant, setYouCant] = useState(['']);\n    return (<div>\n        <h1>Game Master</h1>\n        <p>The clock is ticking. The hours are going by. The past is increasing, the future recedes. Posibilities decreasing, regrets mounting</p>\n        <p>Do you understand?</p>\n        <Button onClick={() => alert('I am so sorry')}>I understand</Button>\n        <Button onClick={() => setYouCant([...youCant,'it is too late'])}>remain ignorant</Button>\n    {youCant.map(yc => <p>{yc}</p>)}\n    </div>);\n}\n\n\nexport default GameMaster;","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst FTLHyperDrive: React.FC = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    if (!open)\r\n        return <Button onClick={() => setOpen(true)}>View FTL Hyperdrive</Button>\r\n    else\r\n        return <>\r\n        <Button onClick={() => setOpen(false)}>X</Button>\r\n        <h2>The FTL Hyperdrive</h2>\r\n        <h5>What is it?</h5>\r\n        <p>The FTL Hyperdrive is the propulsion which allows humans to travel faster than the speed of light and thus visit other stars within a human lifetime.<br/>\r\n            It works by shortening the space in front of the ship and lengthening it behind it, as a result a \"hyperspace\" bubble is formed around the ship and moves it through normal space.<br/>\r\n            Inside the bubble there is no acceleration and thus no gravity.<br/>            \r\n        </p>\r\n        <h5>Fuel</h5>\r\n        <p>The FTL Hyperdrive uses a fuel called \"Exotic Hypermatter\", it is an extremely hard to fabricate material with exotic properties such as negative mass (not to be confused with anti-matter which has normal mass and opposite charge).<br/>\r\n        Exotic Hypermatter requires an extreme amount of energy to make, as such it is only made in huge stellar factories powered by the sun.<br/>\r\n        While the fuel is extremely expensive almost none is lost in FTL travel, most inefficiencies occur when the hyperspace bubble interacts with strong tidal forces from gravity fields, trying to fly through a planet would cause the fuel to be immediately depleted and the bubble to collapse, dropping out of FTL speed.<br/>\r\n        A normal FTL journey will only expend a negligable amount of fuel while entering hyperspace, however bad navigators and pilots can cause the journey to be more costly.\r\n        </p>\r\n        <h5>Speed</h5>\r\n        <p>Most ships can travel up to 54x the speed of light which seems to be a limit on the technology, above this speed fuel starts to drain.<br/>\r\n        To create a bubble takes some time to start, typically 1 hour or more, after that the ship does not reach maximum speed immediately, instead it starts slowly and increases exponentially until it reaches maximum speed.<br/>\r\n        Merlion ships are somehow able to travel even faster, 216x the speed of light, how this is done is not yet known. Very little about Merlion technology is understood, not because they are secretive but because it is hard.\r\n        </p>\r\n        <h5>Hazards</h5>\r\n        <p>There are many hazards involved with FTL travel, a poorly designed ship or badly routed journey can easily spell death for the crew.<br/>\r\n        If the hyperspace bubble is formed prematurely then it becomes open to hyper excited cosmic radiation, this is the result of interaction between the rapidly collapsing space in front of the ship and cosmic radiation.<br/>\r\n        Any matter caught in the hyperspace bubble on the journey may drain the fuel, if this happens the ship might become stranded deep in interstellar space, as such it's extremely important that navigation is done carefully, even so there's always some risk that a journey may stop too early.<br/>\r\n        Since there can be no gravitation on board while in hyperspace crew may experience muscle mass loss and bone density loss<br/>\r\n        While in the bubble the ship is causally unlinked from the rest of the universe, it's impossible to communicate with such a ship, a crew may become lonely, depression is a high risk\r\n        </p>\r\n        <h5>Communication</h5>\r\n        <p>A ship with a hyperdrive is the fastest known object in the universe, all inter-star communication must happen via these ships, ships travelling between the stars often contain news from their origin, this is the only direct contact systems have with each other.<br/>\r\n        Transport ships are always empowered to represent their origin, they must make decisions on their own, communication back is not possible until they return.<br/>\r\n        Distant systems are often very isolated as a result</p>\r\n        </>;\r\n}\r\n\r\nexport default FTLHyperDrive;","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst History: React.FC = () => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    if (!open)\r\n        return <Button onClick={() => setOpen(true)}>View history</Button>\r\n    else\r\n    return <>\r\n    <Button onClick={() => setOpen(false)}>X</Button>\r\n    <h2>History</h2>\r\n    <p>\r\n        This section outlines the major events that shaped the world of Infinite Darkness\r\n    </p>\r\n    <HistorySection title='2039'>First permanent moon base, main purpose was to serve as a refueling station, this promised to open up most of the solar system</HistorySection>\r\n    <HistorySection title='2046'>First human sets foot on Mars with help of the moon base, after two years the small screw returns home. They leave behind them the first parts that will later become the Mars colony</HistorySection>\r\n    <HistorySection title='2052'>First human on Ceres, since they have to stay for four years a base is setup beforehand where a large crew can live</HistorySection>\r\n    <HistorySection title='2061'>The first fusion rocket is used in space, many space ships are now built in space</HistorySection>\r\n    <HistorySection title='2072'>Most of solar system colonized, the asteroid belt, rings of saturn, planets and moon are exploited for profit and advancement of humanity</HistorySection>\r\n    <HistorySection title='2091'>Alien spacecraft from outside the solar system arrive, the alien craft seems to be capable of traveling faster than light, something previously believed impossible.\r\n    A message is communicated from it, \"we have translated your language, you may refer to us as the Merlions and we come here seeking refuge\".\r\n    Eventually aproximately 20 000 Merlions settle on Mars in exchange that they will help the terraforming project.</HistorySection>\r\n    <HistorySection title='2121'>Humans reverse engineer the Merlion faster than light propulsion but it will be many years and discoveries before it can be put to use.</HistorySection>\r\n    <HistorySection title='2123'>Merlions explain their origins, a star 2160 light years away called Sakrak where they were fleeing a war.\r\n    It had taken them 10 years to reach Sol, choosing it because they believed humans could one day become their allies.</HistorySection>\r\n    <HistorySection title='2137'>Growing discontent on Mars leads to a referendum to declare Mars independent from Earth. The referendum passes and Sovereignty of Mars is formed.</HistorySection>\r\n    <HistorySection title='2139'>Inspired by Mars efforts Ceres, Ganymede, Callisto, Io and Europa declare independence too, the moons of Jupiter form a coalition called \"Free worlds of Jupiter\".\r\n    Ceres later becomes a protectorate of Mars.</HistorySection>\r\n    <HistorySection title='2151'>The first exotic hypermatter factory goes online, this marks the start where humans will be able to create fuel for hyperdrives.</HistorySection>\r\n    <HistorySection title='2162'>Humans build first space ship equipped with a hyperdrive, this will close the distance between the planets and make interstellar travel possible.</HistorySection>\r\n    <HistorySection title='2174'>Coalition of Sol is formed, a loose trade and regulatory organization whos headquarters are located on Mercury. This will later grow into a fully fledged government.</HistorySection>\r\n    <HistorySection title='2182'>Humans leave solar system in FTL vessel for the first time, a compliment of over a hundred set off for Proxima Centauri- the closest star.\r\n    It will take two years in FTL travel to reach  the system.</HistorySection>\r\n    <HistorySection title='2184'>Humans visit the Alpha Centauri system (a trinary system, Rigil Kentaurus, Toliman, Proxima Centauri), colonizable planets are found on all three stars, half the crew decide to stay behind on one of the planet, the other go home.</HistorySection>\r\n    <HistorySection title='2190'>Improvements in effiency and speed have been made to the hyperdrive, as such a space race begins to alpha centauri, it is not long before a thriving community is established on the closest star.</HistorySection>\r\n    <HistorySection title='2201'>The most habitable planet- dubbed Nefertiti (orbiting Toliman) hosts many colonies.</HistorySection>\r\n    <HistorySection title='2229'>By this time most of the planets and moons in the Alpha Centauri system have some form of permanent presence, the population finally reach one hundred thousand</HistorySection>\r\n    <HistorySection title='2240'>Deep in interstellar space Humans find a probe, it contains a message to come to a set of coordinates according to the galaxy, it's 180 light years from Sol.\r\n    It will take 12 years to reach, an automated ship is built programmed to represent humanity, 16 years later a ship arrives at Sol where again aliens send a message\r\n    \"Greetings Humans, we come in peace, we are Klackon, we are delighted to make contact, we seek to know you\"</HistorySection>\r\n    <HistorySection title='2296'>Humans are welcome in the Klackon home world, having travelled on the much faster Klackon ship</HistorySection>\r\n    <HistorySection title='2257'>Marks the date when half of humanity lives outside of the planet Earth.</HistorySection>\r\n    <HistorySection title='2261'>Centauri system declares independence from the Coalition of Sol, Centauri Imperium is formed, due to severe isolation between the two systems relations are becoming more strained over time.</HistorySection>\r\n    <HistorySection title='2284'>A deep space exploration craft arrives at Alpha Herculis, there they discover a small yet extremely advanced outpost, it sends communications in an alien langauge, after they decipher it they are able to communicate. From there it is revealed that the outpost belongs to Merlions.\r\n    The Merlions warn the humans to never return or they will be destroyed.</HistorySection>\r\n    <HistorySection title='2301'>Centauri Imperium shut down their borders from Sol, 90 million people live scattered in the Centauri system, the cold war starts</HistorySection>\r\n    <HistorySection title='2317'>A tomb world named Agros orbiting Spica is discovered, it seems to have once had a huge population, now all that remains is fossilised remains.</HistorySection>\r\n    <HistorySection title='2327'>Humanity now exist on self sufficient colonies on planets from 17 star systems</HistorySection>\r\n    <HistorySection title='2328'>Planet Agros is destroyed when the star undergoes supernova, in 260 years this will be visible on the planet Earth.</HistorySection>\r\n    </>\r\n}\r\ninterface IHistorySection {\r\n    title:String;\r\n}\r\nconst HistorySection: React.FC<IHistorySection> = ({title, children}) => {\r\nreturn <><h4>Year {title}</h4><p>{children}</p></>\r\n}\r\n\r\nexport default History;","import { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Merlions: React.FC = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const [merlionText, setMerlionText] = useState('');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Merlions useEffect', { open });\r\n        if (open === true) {\r\n            fetch('merlions')\r\n                .then(response => response.text() as Promise<string>)\r\n                .then(text => setMerlionText(text));\r\n        }\r\n    }, [open]);\r\n    if (!open)\r\n        return <Button onClick={() => setOpen(true)}>View Merlions</Button>\r\n    return <>\r\n        <Button onClick={() => setOpen(false)}>X</Button>\r\n        <h2>Merlions</h2>\r\n        <p>{merlionText}</p>\r\n    </>\r\n}\r\n\r\nexport default Merlions;","import React  from 'react';\nimport FTLHyperDrive from './Lore/FTLHyperDrive';\nimport History from './Lore/History';\nimport Merlions from './Lore/Merlions';\n\nconst WorldAndLore: React.FC = () => {\n    return (<div>\n        <h1>World and Lore</h1>\n        <h2>Index</h2>\n        <h4>History</h4>\n        <h4>The FTL Hyperdrive</h4>\n        <h4>The Sol System</h4>\n        <h4>The Centauri System</h4>\n        <h4>The other colonies</h4>\n        <h4>The galaxy</h4>\n        <h4>The Merlions</h4>\n        <h4>The Klackons</h4>\n        <h4>Monsters</h4>\n        <div><History></History></div>\n        <div><FTLHyperDrive></FTLHyperDrive></div>\n        <div><Merlions></Merlions></div>\n    </div>);\n}\n\n\n\n\nexport default WorldAndLore;","import React, { useState } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { Character, ICharacter } from './Character';\r\nimport { CharacterSheet } from './CharacterSheet';\r\nimport { GetSkillList } from './Skills';\r\n\r\nconst Wizard: React.FC = () => {\r\n    const [viewStep, setViewStep] = useState(0);\r\n    const [character, setCharacter] = useState(new Character({\r\n        name: '',\r\n        species: '',\r\n        gender: '',\r\n        age: 1,\r\n        strength: 1,\r\n        agility: 1,\r\n        endurance: 1,\r\n        intelligence: 1,\r\n        perception: 1,\r\n        willpower: 1,\r\n        skills: GetSkillList()\r\n    } as ICharacter));\r\n    const [viewSheet, setViewSheet] = useState(false);\r\n    const setData = (n: number, c: Character) => {\r\n        setViewStep(n);\r\n        setCharacter(c);\r\n        setViewSheet(false);\r\n    };\r\n    return <div>\r\n        <h2>Character Creator Wizard</h2>\r\n        This is a work in progress...\r\n        <hr />\r\n        <Step0 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step0>\r\n        <Step1 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step1>\r\n        <Step2 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step2>\r\n        <Step3 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step3>\r\n        <Step4 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step4>\r\n        <Step5 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step5>\r\n        <Step6 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step6>\r\n        <Step7 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step7>\r\n        <Step8 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step8>\r\n        <Step9 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step9>\r\n        <hr />\r\n        <Button key='toggle_sheet' onClick={() => setViewSheet(!viewSheet)}>Toggle character sheet</Button>\r\n        {viewSheet === true ? <CharacterSheet initialCharacter={character} characterCallback={(c) => setCharacter(c)} ></CharacterSheet> : null}\r\n    </div>;\r\n}\r\n\r\ninterface IStepProps {\r\n    callback: (n: number, c: Character) => void;\r\n    character: Character;\r\n    currentNumber: number;\r\n}\r\n\r\nconst Step0: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 0;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>explanation of wizard and progress</h3>\r\n        <Button key='wizard_step0_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step1: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [species, setSpecies] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [name, setName] = useState('');\r\n    const step = 1;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>Lets get some basic information</h3>\r\n        <div><b>What is your character's name?</b> <TextField onChange={(e) => setName(e.target.value)} value={name}>{name}</TextField></div>\r\n        <div><b>What is your character's gender?</b> <TextField onChange={(e) => setGender(e.target.value)} value={gender}>{gender}</TextField></div>\r\n        <div><b>What is your character's species?</b> <TextField onChange={(e) => setSpecies(e.target.value)} value={species}>{species}</TextField></div>\r\n        <Button key='wizard_step1_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, name: name, species: species, gender: gender }))}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step2: React.FC<IStepProps> = ({ character, currentNumber, callback }) => {\r\n    const [birthPlaceOption1, setBirthPlaceOption1] = useState('');\r\n    const [birthPlaceOption2, setBirthPlaceOption2] = useState('');\r\n    const step = 2;\r\n    const getAddLib = () => {\r\n        if (birthPlaceOption1 === '') return `${character.name} has no background`;\r\n        if (birthPlaceOption2 !== '') return `${character.name} was born in ${birthPlaceOption1}, ${birthPlaceOption2}`\r\n        return `${character.name} was born in ${birthPlaceOption1}`;\r\n    }\r\n    const getBirthPlaceOptions2 = () => {\r\n        if (birthPlaceOption1 === 'Coalition of Sol')\r\n            return ['Earth', 'Mars', 'Ceres', 'Saturn Moons', 'Jupiter Moons', 'Space Station', 'Mercury Outpost'];\r\n        else if (birthPlaceOption1 === 'Centauri Imperium')\r\n        return ['Rigil Bolemia', 'Rigil Phomelara', 'Toliman Lachowei', 'Toliman Auria', 'Toliman Nion', 'Proxima Siugantu'];\r\n        else return ['Wild wild space west'];\r\n    }\r\n    if (currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>where was your character born or hatched?</h3>\r\n        {birthPlaceOption1 === '' ?\r\n            <div>\r\n                <Button variant=\"outlined\" onClick={() => setBirthPlaceOption1('Coalition of Sol')}>Coalition of Sol</Button>\r\n                <Button variant=\"outlined\" onClick={() => setBirthPlaceOption1('Centauri Imperium')}>Centauri Imperium</Button>\r\n                <Button variant=\"outlined\" onClick={() => setBirthPlaceOption1('Fronteer World')}>Fronteer World</Button>\r\n            </div>\r\n            : null}\r\n        {birthPlaceOption1 !== '' ?\r\n            <div>\r\n                {getBirthPlaceOptions2().map(option => {\r\n                    return <Button variant=\"outlined\" onClick={() => setBirthPlaceOption2(option)}>{option}</Button>\r\n                })}\r\n            </div>\r\n            : null\r\n        }\r\n        {getAddLib()}\r\n        <br />\r\n        <Button key='wizard_step2_next' onClick={() => callback(step + 1, new Character({ ...character, background: getAddLib() }))}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step3: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 3;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of family did your character have?</h3>\r\n        <Button key='wizard_step3_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step4: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 4;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what is your characters strengths and weaknesses</h3>\r\n        <Button key='wizard_step4_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step5: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 5;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of personality does your character have?</h3>\r\n        <Button key='wizard_step5_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step6: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 6;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what interests and hobbies does your character have?</h3>\r\n        <Button key='wizard_step6_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step7: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 7;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what education does your character have?</h3>\r\n        <Button key='wizard_step7_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step8: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 8;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>how does your character make a living?</h3>\r\n        <Button key='wizard_step8_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\nconst Step9: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 9;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>repeat step 8 until finished</h3>\r\n        <Button key='wizard_step9_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Wizard;","import React, { useState } from 'react';\nimport { CharacterSheet } from './components/CharacterSheet';\nimport './App.css';\nimport { Character, ICharacter } from './components/Character';\nimport { Button, DialogTitle } from '@material-ui/core';\nimport PlayerManual from './components/PlayerManual';\nimport SkillPerkManual from './components/SkillPerkManual';\nimport GameMaster from './components/GameMaster';\nimport WorldAndLore from './components/WorldAndLore';\nimport Wizard from './components/Wizard';\n\nconst App: React.FC = () => {\n  const main = 'main';\n  const [viewMode, setViewMode] = useState(main);\n  const [character, setCharacter ] = useState(new Character());//new Character();\n  const characterSheet = 'View Character Sheet';\n  const playerManual = 'Player Manual';\n  const gameMaster = 'Game Master';\n  const worldAndLore = 'World and Lore';\n  const skillsAndPerks = 'Skills and Perks';\n  const wizard = 'Launch Character Creator Wizard';\n  const about = 'About';\n  let options = [characterSheet,\n    playerManual,\n    gameMaster,\n    worldAndLore,\n    skillsAndPerks,\n    wizard,\n    about\n  ];\n  const MainButton = () => <Button onClick={() => setViewMode('main')}>EXIT</Button>;\n\n  const loadCharacter = () => {\n    try {\n      console.info('attempting to load character');\n      const charData = prompt('paste character string here');\n      if (charData !== null)\n      {\n        const c = JSON.parse(charData) as ICharacter;\n        setCharacter(new Character({...c}));\n        setViewMode(characterSheet);\n        console.log('character was successfully loaded:', {...c});\n      } else console.log('no character info was pasted');\n    }\n    catch(error) {\n      console.error({error});\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Conditional shouldView={viewMode === main}>\n        <DialogTitle>Infinite Darkness</DialogTitle>\n        <Menu callback={(option) => setViewMode(option)} options={options} />\n        <Button onClick={() => loadCharacter()}>Load Character</Button>\n      </Conditional>\n      <Conditional shouldView={viewMode === characterSheet}>\n        <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\n      </Conditional>\n      <Conditional shouldView={viewMode === playerManual}>\n        <MainButton />\n        <PlayerManual />\n      </Conditional>\n      <Conditional shouldView={viewMode === gameMaster}>\n        <MainButton />\n        <GameMaster></GameMaster>\n      </Conditional>\n      <Conditional shouldView={viewMode === worldAndLore}>\n        <MainButton />\n        <WorldAndLore></WorldAndLore>\n      </Conditional>\n      <Conditional shouldView={viewMode === skillsAndPerks}>\n        <MainButton />\n        <SkillPerkManual />\n      </Conditional>\n      <Conditional shouldView={viewMode === wizard}>\n        <MainButton />\n        <Wizard />\n      </Conditional>\n      <Conditional shouldView={viewMode === about}>\n        <MainButton />\n        <h2>About</h2>\n        <h3>This is a work in progress</h3>\n        <p>Author: Thorvaldur Saemundsson</p>\n        <p>Technology: ReactJS, github pages</p>\n        <p>Project: Infinite Darkness, a sci-fi and fantasy game</p>\n        <p>Please formulate any complaints and suggestions in the form of a pull request ;)</p>\n        <span style={{ float: 'right', fontSize: '11px' }}>Copyright Thorvaldur Saemundsson</span>\n      </Conditional>\n    </div>\n  );\n}\ninterface ItemProp {\n  shouldView: boolean;\n}\n\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\n  if (shouldView) return <div style={{ textAlign: 'left', padding: '15px' }}>{children}</div>;\n  else return null;\n}\n\ninterface MenuProps {\n  callback: (option: string) => void;\n  options: string[];\n}\n\nconst Menu: React.FC<MenuProps> = (props) => {\n  return <div>{props.options.map(option => <Button key={option} onClick={() => props.callback(option)}>{option}</Button>)}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}