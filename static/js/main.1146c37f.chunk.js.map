{"version":3,"sources":["components/general/Skills.tsx","components/general/HideText.tsx","components/Character.tsx","utils/Conditional.tsx","utils/usePersistentState.tsx","components/skills/acrobatics.ts","components/skills/athletics.ts","components/skills/combat.ts","components/skills/computer.ts","components/skills/empathy.ts","components/skills/intimidation.ts","components/skills/investigation.ts","components/skills/larceny.ts","components/skills/medicine.ts","components/skills/persuation.ts","components/skills/pilot.ts","components/skills/spells.ts","components/skills/stealth.ts","components/skills/subtrefuge.ts","components/skills/survival.ts","components/skills/mechanics.tsx","components/skills/streetwise.ts","components/skills/Science.ts","components/skills/electronics.ts","components/skills/explosives.ts","components/skills/generalknowledge.ts","components/skills/savoir-faire.ts","components/general/GetSkillList.tsx","components/skills/firearms.ts","components/skills/cooking.ts","components/traits/Traits.ts","components/perks/Spells.tsx","components/general/Perks.tsx","components/perks/Combat.ts","components/perks/Firearms.ts","components/perks/Pilot.ts","components/perks/Investigation.ts","components/perks/Intimidation.ts","components/perks/Larceny.ts","components/perks/Stealth.ts","components/perks/Survival.ts","components/perks/Computer.ts","components/perks/Medicine.ts","components/perks/Empathy.ts","components/perks/Subtrefuge.ts","components/perks/Athletics.ts","components/perks/Acrobatics.ts","components/perks/Persuation.ts","components/perks/Streetwise.ts","components/perks/Science.ts","components/perks/SavoirFaire.ts","components/perks/Cooking.ts","components/perks/Electronics.ts","components/perks/Explosives.ts","components/perks/GeneralKnowledge.ts","components/perks/Mechanics.ts","components/general/GetPerkList.ts","components/general/useCharacter.ts","views/CharacterSheet.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SkillTemplate","name","description","useCases","level","this","HideText","isEdit","txt","explain","className","EditText","onChange","type","e","target","value","fSum","n","x","i","Character","copy","species","gender","age","background","strength","agility","endurance","perception","willpower","intelligence","skills","perks","traits","size","GetSkillList","undefined","length","map","p","cost","reduce","a","b","t","s","intMultipler","getCharacterPointsCostPerks","getCharacterPointsCostSkills","getCharacterPointsCostTraits","getCalculatedPointsUsed","getCharacterPointsCostAttribute","getStartingPointsAvailable","skillName","skill","find","combat","getSkillLevel","acrobatics","getLowDefense","Math","max","getBaseDefense","getHook","base","athl","athletics","CharacterPointsHuman","CharacterPointsMerlion","CharacterPointsShambras","CharacterPointsNekovian","characterPointsHuman","characterPointsMerlion","characterPointsShambras","characterPointsNekovian","ExperienceMultiplerHuman","ExperienceMultiplerMerlion","ExperienceMultiplerShambras","ExperienceMultiplerNekovian","getRacialLife","floor","applyTo","sumOr","what","sum","or","filter","perk","amount","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","min","CharacterPoints","Conditional","shouldView","children","fallback","usePersistentState","key","defaultValue","useState","str","sessionStorage","getItem","def","JSON","parse","state","setState","useEffect","setItem","stringify","Acrobatics","attribute","results","Athletics","Combat","Computer","Empathy","Intimidation","Investigation","Larceny","Medicine","Persuation","Pilot","Spells","Stealth","Subtrefuge","Survival","Mechanics","Streetwise","Science","Electronics","Explosives","GeneralKnowledge","SavoirFaire","Firearms","Cooking","sort","toLowerCase","Coward","Brave","FoolHardy","Frail","Resillient","Reckless","Gifted","FastMetabolism","DoubleHanded","Phobia","WealthyFamily","Aggressive","Frugal","Durable","MentallyFlexible","Stubborn","ForgetfulFace","Blind","Deaf","Mute","NaturalTalent","GetTraits","spellhook","SpellTemplate","range","DimensionalSwap","Splinter","Unmask","UmbraConstant","MirrorTrap","DarkVortex","LuminiferousTransubstantiation","ColorBias","Rift","Conversation","HyperSight","Tesseraction","HarshEmpathy","BrutalEmpathy","SpiritualRegeneration","Quintessence","SolarFlare","QuantumLeap","SpellsPerks","PerkTemplate","data","hook","Deflection","LightWeaponSpecialization","MediumWeaponSpecialization","LargeWeaponSpecialization","MartialArts","MartialArtsExpert","MartialArtsMaster","LightningReflexes","SneakAttack","Assassination","Disarm","DualWeaponFighter","CombatPerks","HandGunSpecialization","RifleSpecialization","MachineGunSpecialization","RocketLaunchersSpecialization","LaserSpecialization","PlasmaSpecialization","Sniper","Marksman","DeadEye","Suppressor","RapidReload","FirearmsPerks","QualifiedForCar","QualifiedForBoat","QualifiedForShip","QualifiedForSubmarine","QualifiedForAirplane","QualifiedForSpaceship","PilotPerks","InvestigationPerks","IntimidationPerks","LarcenyPerks","StealthPerks","SurvivalPerks","Hacking","AdvancedHacking","Programmer","ComputerPerks","MedicinePerks","Mentalist","EmpathicListener","EmpathyPerks","SubtreFugePerks","Climber","Runner","Jumper","Swimmer","DeepLungs","AthleticsPerks","AcrobaticsPerks","PersuationPerks","StreetwisePerks","Physicist","AdvancedPhysicist","Chemist","AdvancedChemist","SciencePerks","SavoirFairePerks","CookingPerks","ElectronicsPerks","ExplosivesPerks","GeneralKnowledgePerks","MechanicsPerks","GetPerkList","sortPerk","prevPerk","nextPerk","getSizeFromString","useCharacter","action","r","findIndex","perkToAdd","pta","traitToAdd","CharacterSheet","props","useReducer","initialCharacter","character","dispatch","viewState","setViewState","viewTraitList","setViewTraitList","viewPerkList","setViewPerkList","onClick","colSpan","getLife","parseInt","getMentalHealth","getSequence","getCalculatedPointsLeft","getPassiveDefense","getExperienceMultiplier","getBaseCarryingCapacity","toString","getBaseSpeed","Pad","style","border","skillRanks","padSize","trait","marginTop","verticalAlign","minSize","ar","Array","counter","push","SmallLabel","Battleview","lazy","SkillPerkManual","GameMaster","WorldAndLore","PlayerManual","Menu","options","option","active","current","callback","Tab","App","viewMode","setViewMode","setCharacter","DialogTitle","textDecoration","color","cursor","clear","characterCallback","c","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1146c37f.chunk.js","sourcesContent":["\r\nexport type SkillName = 'acrobatics'|'athletics'|'combat'|'computer'|'cooking'|'electronics'|'empathy'|'explosives'|'firearms'|'general knowledge'|'intimidation'|'investigation'|'larceny'|'mechanics'|'medicine'|'persuation'|'pilot'|'savoir-faire'|'science'|'spells'|'stealth'|'streetwise'|'subtrefuge'|'survival';\r\n\r\nexport interface UseCase {\r\n    attribute: 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\r\n    name: string;\r\n    description: string;\r\n    results?: string[];\r\n    type: 'active' | 'passive';\r\n}\r\n\r\nexport interface Skill {\r\n    name: SkillName;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n}\r\n\r\n\r\nexport class SkillTemplate implements Skill {\r\n    name: SkillName;\r\n    level: number;\r\n    description: string;\r\n    useCases: UseCase[];\r\n    constructor(name: SkillName, description: string, useCases: UseCase[], level = 0) {\r\n        this.name = name;\r\n        this.level = level;\r\n        this.description = description;\r\n        this.useCases = useCases;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\ninterface IHideText {\r\n    isEdit: \"edit\" | \"print\" | \"explain\" | \"hide\";\r\n    explain: string;\r\n    txt: string | number;\r\n}\r\nexport const HideText: React.FC<IHideText> = ({ isEdit, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <span className='no-print'>{txt}</span>;\r\n    else if (isEdit === \"explain\")\r\n        return <span className='no-print'>{explain}</span>;\r\n    else return null;\r\n}\r\n\r\ninterface IEditText extends IHideText {\r\n    onChange: (str: string) => void;\r\n}\r\n\r\nconst EditText: React.FC<IEditText> = ({ isEdit, onChange, txt, explain }) => {\r\n    if (isEdit === \"edit\")\r\n        return <input className='no-print' type=\"text\" onChange={(e) => onChange(e.target.value)} value={txt}></input>\r\n    else return <HideText txt={txt} isEdit={isEdit} explain={explain} />\r\n}\r\n\r\n\r\n\r\nexport default EditText;","import { Skill } from \"./general/Skills\";\r\nimport { Perk } from './general/Perks';\r\nimport { Trait } from \"./traits/Traits\";\r\nimport { GetSkillList } from \"./general/GetSkillList\";\r\n\r\nexport const fSum = (n: number): number => {\r\n    let x = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        x += i;\r\n    }\r\n    return x;\r\n};\r\n\r\nexport interface IHooker {\r\n    applyTo: string;\r\n    amount: number;\r\n}\r\n\r\nexport type CharacterSize = 'tiny' | 'small' | 'medium' | 'large' | 'huge';\r\n\r\nexport interface ICharacter {\r\n    name: string;\r\n    species: string;\r\n    gender: string;\r\n    background: string;\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n    size: CharacterSize;\r\n}\r\n\r\nexport class Character {\r\n    name: string;\r\n    species: string | 'human' | 'merlion' | 'nekovian' | 'shambras';\r\n    gender: string;\r\n    age: number;\r\n    background: string;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    traits: Trait[];\r\n    size: CharacterSize;\r\n    constructor(copy?: ICharacter) {\r\n        this.name = (copy && copy.name) || \"\";\r\n        this.species = (copy && copy.species) || \"\";\r\n        this.gender = (copy && copy.gender) || \"\";\r\n        this.background = (copy && copy.background) || \"\";\r\n        this.strength = (copy && copy.strength) || 4;\r\n        this.agility = (copy && copy.agility) || 4;\r\n        this.endurance = (copy && copy.endurance) || 4;\r\n        this.perception = (copy && copy.perception) || 4;\r\n        this.willpower = (copy && copy.willpower) || 4;\r\n        this.intelligence = (copy && copy.intelligence) || 4;\r\n        this.skills = (copy && copy.skills) || GetSkillList();\r\n        this.traits = (copy && copy.traits) || [];\r\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\r\n        else this.perks = [];\r\n        this.age = (copy && copy.age) || 24;\r\n        this.size = (copy && copy.size) || 'medium';\r\n    }\r\n\r\n    public getCharacterPointsCostPerks() {\r\n        return this.perks.length > 0 ? this.perks.map(p => p.cost()).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostTraits() {\r\n        return this.traits.length > 0 ? this.traits.map(t => t.cost).reduce((a, b) => a + b) : 0;\r\n    }\r\n\r\n    public getCharacterPointsCostSkills() {\r\n        return this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    public getCharacterPointsCostAttribute() {\r\n        const intMultipler = this.species === 'merlion' ? 3 : 4;\r\n        return fSum(this.strength) * 4\r\n            + fSum(this.agility) * 4\r\n            + fSum(this.endurance) * 4\r\n            + fSum(this.perception) * 4\r\n            + fSum(this.willpower) * 4\r\n            + fSum(this.intelligence) * intMultipler;\r\n    }\r\n\r\n    public getCalculatedPointsUsed() {\r\n        return this.getCharacterPointsCostPerks() + this.getCharacterPointsCostSkills() + this.getCharacterPointsCostTraits();\r\n    }\r\n\r\n    public getCalculatedPointsUsedPointBuy() {\r\n        return this.getCalculatedPointsUsed() + this.getCharacterPointsCostAttribute();\r\n    }\r\n\r\n    public getCalculatedPointsLeft() {\r\n        return this.getStartingPointsAvailable() - this.getCalculatedPointsUsed();\r\n    }\r\n\r\n    private getSkillLevel(skillName: string) {\r\n        var skill = this.skills.find(s => s.name === skillName);\r\n        if (skill !== undefined) return skill.level;\r\n        return 0;\r\n    }\r\n\r\n    public getPassiveDefense() {\r\n        const combat = this.getSkillLevel('combat');\r\n        const acrobatics = this.getSkillLevel('acrobatics');\r\n        return this.getLowDefense() + Math.max(combat, acrobatics);\r\n    }\r\n\r\n    public getLowDefense() {\r\n        return this.getBaseDefense() + this.agility + this.getHook('defense');\r\n    }\r\n\r\n    public getBaseCarryingCapacity() {\r\n        return (this.strength + 1 + this.getHook('carryingCapacity')) * 4;\r\n    }\r\n\r\n    public getBaseSpeed() {\r\n        let base = 1;\r\n        switch (this.species) {\r\n            case 'human':\r\n            case 'merlion': base = 1; break;\r\n            case 'nekovian': base = 2; break;\r\n            case 'shambras': base = 0; break;\r\n        }\r\n\r\n        let size = 0;\r\n        switch (this.size) {\r\n            case 'tiny': size = 4; break;\r\n            case 'small': size = 5; break;\r\n            case 'medium': size = 6; break;\r\n            case 'large': size = 7; break;\r\n            case 'huge': size = 8; break;\r\n            default: size = 6; break;\r\n        }\r\n\r\n        let athl = 0;\r\n        let athletics = this.getSkillLevel('athletics');\r\n        if (athletics >= 18) athl = 3;\r\n        else if (athletics >= 12) athl = 2;\r\n        else if (athletics >= 6) athl = 1;\r\n\r\n        const hookBonus = this.getHook('speed');\r\n\r\n        return base + size + athl + hookBonus;\r\n\r\n    }\r\n\r\n    public getBaseDefense() {\r\n        switch (this.size) {\r\n            case 'tiny': return 14;\r\n            case 'small': return 12;\r\n            case 'medium': return 10;\r\n            case 'large': return 8;\r\n            case 'huge': return 6;\r\n            default: return 10;\r\n        }\r\n    }\r\n\r\n    private getSize() {\r\n        switch (this.size) {\r\n            case 'tiny': return 4;\r\n            case 'small': return 2;\r\n            case 'medium': return 0;\r\n            case 'large': return -2;\r\n            case 'huge': return -4;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    private static CharacterPoints(start: number, agePhases: number[], expPhases: number[], age: number) {\r\n        let p = start;\r\n        if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\r\n        let prevPhase = 0;\r\n        for (var phase in agePhases) {\r\n            let currentAgePhase = agePhases[phase];\r\n            let expPhase = expPhases[phase];\r\n\r\n            let ageRange = currentAgePhase - prevPhase;\r\n            if (age > prevPhase) p += Math.min(age - prevPhase, ageRange) * expPhase;\r\n            prevPhase = currentAgePhase;\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    public static CharacterPointsHuman(age: number) {\r\n        return Character.CharacterPoints(0, [18, 26, 40, 80], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static CharacterPointsMerlion(age: number) {\r\n        return Character.CharacterPoints(0, [16, 28, 50, 90], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static CharacterPointsShambras(age: number) {\r\n        return Character.CharacterPoints(0, [10, 20, 40, 80, 160, 320, 640], [4, 5, 6, 8, 10, 11, 12], age);\r\n    }\r\n\r\n    public static CharacterPointsNekovian(age: number) {\r\n        return Character.CharacterPoints(0, [16, 24, 36, 80], [10, 8, 6, 4], age);\r\n    }\r\n\r\n    public static ExperienceMultiplerHuman(age: number) {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    public static ExperienceMultiplerMerlion(age: number) {\r\n        if (age > 70) return 1;\r\n        if (age > 60) return 1.5;\r\n        if (age > 50) return 2;\r\n        if (age > 35) return 2.5;\r\n        if (age > 30) return 3;\r\n        if (age > 26) return 3.5;\r\n        if (age > 22) return 4;\r\n        if (age > 18) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    public static ExperienceMultiplerShambras(age: number) {\r\n        if (age > 100) return 3;\r\n        if (age > 80) return 2.5;\r\n        if (age > 60) return 2;\r\n        if (age > 40) return 1.5;\r\n        return 1;\r\n    }\r\n\r\n    public static ExperienceMultiplerNekovian(age: number) {\r\n        if (age > 60) return 1;\r\n        if (age > 50) return 1.5;\r\n        if (age > 40) return 2;\r\n        if (age > 30) return 2.5;\r\n        if (age > 26) return 3;\r\n        if (age > 24) return 3.5;\r\n        if (age > 20) return 4;\r\n        if (age > 16) return 4.5;\r\n        return 5;\r\n    }\r\n\r\n    private characterPointsHuman() {\r\n        return Character.CharacterPointsHuman(this.age);\r\n    }\r\n\r\n    private characterPointsMerlion() {\r\n        return Character.CharacterPointsMerlion(this.age);\r\n    }\r\n\r\n    private characterPointsShambras() {\r\n        return Character.CharacterPointsShambras(this.age);\r\n    }\r\n\r\n    private characterPointsNekovian() {\r\n        return Character.CharacterPointsNekovian(this.age);\r\n    }\r\n\r\n    public getStartingPointsAvailable() {\r\n        switch (this.species) {\r\n            case 'human': return this.characterPointsHuman();\r\n            case 'merlion': return this.characterPointsMerlion();\r\n            case 'shambras': return this.characterPointsShambras();\r\n            case 'nekovian': return this.characterPointsNekovian();\r\n            default: return this.characterPointsHuman();\r\n        }\r\n    }\r\n\r\n    public getExperienceMultiplier() {\r\n        switch (this.species) {\r\n            case 'human': return Math.max(Character.ExperienceMultiplerHuman(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'merlion': return Math.max(Character.ExperienceMultiplerMerlion(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'shambras': return Math.max(Character.ExperienceMultiplerShambras(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            case 'nekovian': return Math.max(Character.ExperienceMultiplerNekovian(this.age) + this.getHook('experienceMultiplier'), 1);\r\n            default: return Math.max(Character.ExperienceMultiplerHuman(this.age) + this.getHook('experienceMultiplier'), 1);\r\n        }\r\n\r\n    }\r\n\r\n    private getRacialLife() {\r\n        switch (this.species) {\r\n            case 'shambra':\r\n                if (this.age < 70) return +1;\r\n                if (this.age > 100) return +2;\r\n                return 0;\r\n            default: return 0;\r\n        }\r\n    }\r\n\r\n    public getLife() {\r\n        return this.strength + this.endurance * 2 + this.getHook('life') + this.getRacialLife();\r\n    }\r\n\r\n    public getMana() {\r\n        return this.endurance + this.willpower * 2 + this.getHook('mana');\r\n    }\r\n\r\n    public getMentalHealth() {\r\n        return this.willpower * 2 + this.getHook('mentalHealth');\r\n    }\r\n\r\n    public getDamageBonusSmall() {\r\n        return Math.floor(this.strength / 5) + this.getHook('lightmelee');\r\n    }\r\n\r\n    public getDamageBonusMedium() {\r\n        return Math.floor(this.strength / 4) + this.getHook('mediummelee');\r\n    }\r\n    public getDamageBonusLarge() {\r\n        return Math.floor(this.strength / 3) + this.getHook('largemelee');\r\n    }\r\n\r\n    public getSequence() {\r\n        return this.perception + this.agility + this.getHook('sequence');\r\n    }\r\n\r\n    public getHook(applyTo: string): number {\r\n\r\n        return this.sumOr(applyTo, this.perks, 0) + this.sumOr(applyTo, this.traits, 0);\r\n    }\r\n\r\n    public explain(what: string): string {\r\n        switch (what) {\r\n            case 'strength': return 'muscle power';\r\n            case 'endurance': return 'stamina';\r\n            case 'agility': return 'speed, coordination';\r\n            case 'perception': return 'seeing, hearing';\r\n            case 'intelligence': return 'brain power';\r\n            case 'willpower': return 'brain stamina';\r\n            case 'life': return 'STR + 2 x END';\r\n            case 'mana': return 'END + 2 x WILL';\r\n            case 'mentalHealth': return 'WILL x 2';\r\n            case 'age': return 'how old';\r\n            case 'damageBonus': return 'STR /5, /4, /3';\r\n            case 'name': return '';\r\n            case 'gender': return '';\r\n            case 'species': return '';\r\n            case 'pointsLeft': return 'points remaining';\r\n            case 'experienceMultiplier': return 'exp bonus';\r\n            case 'basedefense': return '10 + mod';\r\n            case 'lowdefense': return 'skill/2';\r\n            case 'passivedefense': return 'skill';\r\n            case 'sequence': return 'AGI+PER';\r\n            default: return '';\r\n        }\r\n    }\r\n\r\n    private sumOr(applyTo: string, sum: IHooker[], or: number): number {\r\n        let s = sum.filter(perk => perk.applyTo === applyTo).map(p => p.amount);\r\n        if (s.length > 0) return s.reduce((a, b) => a + b);\r\n        else return or;\r\n    }\r\n}","import React, { Suspense } from \"react\";\r\n\r\ninterface ItemProp {\r\n    shouldView: boolean;\r\n  }\r\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\r\n    if (shouldView) return <Suspense fallback={<div>Loading...</div>}>{children}</Suspense>;\r\n    else return null;\r\n  };\r\n\r\n  export default Conditional;","import { useState, useEffect } from 'react';\r\n\r\nfunction parseJsonOr<T>(str:string|null, def:T){\r\n  if (str === null) return def;\r\n  return JSON.parse(str) as T;\r\n}\r\n\r\nfunction usePersistentState<T>(key:string, defaultValue:T):[T, React.Dispatch<T>] {\r\n    const [state, setState] = useState<T>(\r\n      () => parseJsonOr<T>(sessionStorage.getItem(key), defaultValue)\r\n    );\r\n    useEffect(() => {\r\n      sessionStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState];\r\n  }\r\n  \r\n\r\nexport default usePersistentState;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'active dodge',\r\n        attribute: 'agility',\r\n        description: 'Roll 2d10 + agility + acrobatics to dodge, only the first to hit you while you do this will land, maximum one bullet. Counts as normal action and only normal movement is allowed.',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'balance',\r\n        attribute: 'agility',\r\n        description: 'anything balance related such as walking on slippery surfaces, walking tight rope, staying upright on shaky ground, etc. Can be done as a part of a move action',\r\n        results: [\r\n            'Walk on slippery surface: 9 or less: failure',\r\n            'Walk on slippery surface: 10-14: walk slowly',\r\n            'Walk on slippery surface: 15-19: walk normal',\r\n            'Walk on slippery surface: 20-24: jog',\r\n            'Walk on slippery surface: 25-29: run',\r\n            'Walk on slippery surface: 30: unimpeded movement',\r\n            'Walk on tightrope: same as slippery but -5 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'throwing',\r\n        attribute: 'agility',\r\n        description: 'throwing an item accurately and precisely at a target. The distance depends on your strength and the weight of the item. This is also used in combat when for example throwing weapons, bombs, etc',\r\n        results: [\r\n            '4-10: hit 1 meter object in 5 meters away (to hit a smaller object, assume same difficulty as if it was farther away)',\r\n            '11-15: hit 1 meter object in 10 meters away',\r\n            '16-20: hit 1 meter object in 20 meters away',\r\n            '21-25: hit 1 meter object in 40 meters away',\r\n            '26-30: hit 1 meter object in 80 meters away',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'tumbling',\r\n        attribute: 'agility',\r\n        description: 'tumbling is a form of gymnastics, this can be used to reduce to reduce fall damage, jump quickly through hoops or any general fast movement through difficult terrain',\r\n        results: [\r\n            '4 or lower: worse outcome',\r\n            'Reduce fall damage 1d6: 15',\r\n            'Reduce fall damage 2d6: 25',\r\n            'Move through difficult terrain: 9 or less: slow',\r\n            'Move through difficult terrain: 10-14: normal speed',\r\n            'Move through difficult terrain: 15-20: jog speed',\r\n            'Move through difficult terrain: 21+: can move any speed'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Acrobatics = new SkillTemplate('acrobatics', 'the ability to move around', useCases);\r\nexport default Acrobatics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'swim',\r\n        attribute: 'endurance',\r\n        description: 'how fast you swim, how long you can keep your breath, you need equal amount of rest time to reset timers. When you swim through moving water the movement on the water is added to your movement. If you roll is such that you can not move then you start to drown. Carrying capacity penalties are doubled for swimming',\r\n        results: [\r\n            'hold breath 1 minute: 14-20',\r\n            'hold breath 2 minute: 21-25',\r\n            'hold breath 3 minute: 26-30',\r\n            'stay afloat: use run table with 50% walk modifier',\r\n            'swim at 50% speed: use run table with run modifier',\r\n            'swim at 100% walk speed: use run table with sprint modifier',\r\n            'swim in lake/pool: no modifier',\r\n            'swim in ocean: take -5 on roll',\r\n            'swim in stormy/turbulen water: take -10 on roll',\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name:'ride',\r\n        attribute: 'agility',\r\n        description: 'ride bicycle, ride horse, or spouse',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'run',\r\n        attribute: 'endurance',\r\n        description: 'how fast you run and how long you can run. Once you hit the limit you gain one level of exhaustion. (take 10)',\r\n        results: [\r\n            'take one single step: -25 (unable to stand if you fail)',\r\n            'walk 2 rounds: -20',\r\n            'walk 1 minute: -15',\r\n            'walk 5 minutes: -10',\r\n            'walk 15 minutes: -5',\r\n            'walk 30 minutes: 0',\r\n            'walk 60 minutes: 5',\r\n            'walk 2 hours: 10',\r\n            'walk 4 hours: 15',\r\n            'walk 8 hours: 20',\r\n            'for each +5, double duration',\r\n            'walk at 50% rate: same as walk but +5 on the roll',\r\n            'power walk 2x speed: -5 (one step up)',\r\n            'jog x3 speed: -10  (two steps up)',\r\n            'run x4 speed: -20  (four steps up)',\r\n            'sprint x5 speed: -30  (six steps up)',\r\n            'each level of carrying capacity and exhaustion: -5 per step  (one step up)'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'jump',\r\n        attribute: 'endurance',\r\n        description: 'how high and far you can jump, jumping forward requires at least double runway distance for sprinting. Can be done as a part of move action, requires at least 10 meter sprinting or take a -5 to the roll',\r\n        results: [\r\n            '4-10: 50cm up',\r\n            '11-15: 1m up',\r\n            '16-20: 1.5m up',\r\n            '21-25: 2m up',\r\n            '26-30: 2.5m up',\r\n            '31-35: 3m up',\r\n            '36-40: 3.5m up',\r\n            '41-45: 4m up',\r\n            '46-50: 4.5m up',\r\n            '51-55: 5m up',\r\n            '4-10: 1.5m forward',\r\n            '11-15: 3m forward',\r\n            '16-20: 4.5m forward',\r\n            '21-25: 6m forward',\r\n            '26-30: 7.5m forward',\r\n            '31-35: 9m forward',\r\n            '36-40: 10.5m forward',\r\n            '41-45: 12m forward',\r\n            '46-50: 13.5m forward',\r\n            '51-55: 15m forward',\r\n            'each level of carrying capacity and exhaustion: -5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'climb',\r\n        attribute: 'endurance',\r\n        description: 'climbing up things, done as a move action, you normally move at 25% of your speed vertically/diagonally or 50% horizontally.',\r\n        results: [\r\n            '1+: climb ladder or stairs',\r\n            '6+: climb very steep slope',\r\n            '25+: climb rough wall',\r\n            '60+: climb sheer wall',\r\n            'each 25 meters up: -5 to roll',\r\n            'if using rope: +5 to roll',\r\n            'if using knotted rope: +10 to rope',\r\n            'if wet conditions: -5 to roll',\r\n            'if wet and windy conditions: -10 to roll',\r\n            'each level of carrying capacity and exhaustion: -5 to roll'\r\n        ],\r\n        type: 'passive'\r\n    },\r\n];\r\nconst Athletics = new SkillTemplate('athletics', 'skillful use of stamina', useCases);\r\nexport default Athletics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'unarmed attack',\r\n        attribute: 'agility',\r\n        description: 'punching kicking, deals 1d2 + strength / 4 (rounded down). Shambras using claw attack deal 1d6 + strength / 4',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'weapon attack',\r\n        attribute: 'agility',\r\n        description: 'weapons, damage based on weapon type',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'block',\r\n        attribute: 'agility',\r\n        description: 'use unarmed or weapon to block any attack, if successful only take 1/2 damage (round down, applied before damage reduction). Blocking firearms takes -10 on your roll vs their roll. If you block with a weapon, shield or object it takes the damage.',\r\n        results: [\r\n            'gadget or gun typical breaking damage: 10',\r\n            'wood typical breaking damage: 15',\r\n            'plastic typical breaking damage: 18',\r\n            'soft metal typical breaking damage: 22',\r\n            'steel typical breaking damage: 25',\r\n            'tital alloy typical breaking damage: 28'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Combat = new SkillTemplate('combat', 'the ability to move around', useCases);\r\nexport default Combat;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hacking',\r\n        attribute: 'intelligence',\r\n        description: 'hack into computers, takes 1 hour',\r\n        results: [\r\n            'Improve chances with larceny (electronic lockpick): 25, add roll - 25 to larceny',\r\n            'hack password: 24 or higher to succeed',\r\n            'hack very secure password: 34 or higher to succeed',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'craft software',\r\n        attribute: 'intelligence',\r\n        description: 'make computer programs, apps, drivers, services, etc. Takes 8 hours',\r\n        results: [\r\n            'craft single feature driver or application: 2 points',\r\n            'craft complex software: 6 points',\r\n            'architech software system: 12 points',\r\n            'craft computer OS core or AI core: 40 points',\r\n            'roll 21-30: add 1 software point',\r\n            'roll 31-40: add 1d2 software point',\r\n            'roll 41-50: add 1d3 software point',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'use computer',\r\n        attribute: 'intelligence',\r\n        description: 'You can use a computer to do research on the use of another skill, takes 10 minutes and gain a one time use +2',\r\n        results: [\r\n            'search internet: 10 or less -> wrong information',\r\n            'search internet: 11-15 -> incomplete information',\r\n            'search internet: 16-20 -> success',\r\n            'search internet: 21-30 -> success and gain added insight',\r\n            'if information sought is esoteric add -5 to roll',\r\n            'if information sought is criminal or classified add -10 to roll'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Computer = new SkillTemplate('computer', 'googling stuff', useCases);\r\nexport default Computer;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'detect motive',\r\n        attribute: 'intelligence',\r\n        description: 'find out what people want, if this is higher than \"hide emotion\" (subtrefuge) then you gain information, if it is significantly below you gain false information. Takes 1 minute to analyse',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'detect lies',\r\n        attribute: 'intelligence',\r\n        description: 'see through lies, rolls in the background everytime someone lies to you, role against \"deception\" (subtrefuge).',\r\n        type: 'passive'\r\n    },\r\n];\r\nconst Empathy = new SkillTemplate('empathy', 'understanding people', useCases);\r\nexport default Empathy;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'interrogation',\r\n        attribute: 'willpower',\r\n        description: 'force someone to give you answers to questions, you roll intimidation + willpower, they roll willpower',\r\n        results: [\r\n            'Less than equal: no answer, they resist for the day',\r\n            'Equal up to +10: they give one answer in 1 hours (may choose to lie, gain +5 to their subtrefuge)',\r\n            'Equal up to +20: they give one answer in 15 minutes (may choose to lie, gain +5 to their subtrefuge)',\r\n            'Equal up to +30: they give one answer in 1 minute (may choose to lie, gain +5 to their subtrefuge)',\r\n            'If they are able to escape or fight back they can choose to cancel the interrogation',\r\n            'If you employ credible threat of torture or violence gain +5, they gain +5 to subtrefuge',\r\n            'If you employ violence or torture, gain +10, they gain +10 to subtrefuge'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'frighten',\r\n        attribute: 'willpower',\r\n        description: 'emit a terrifying display of power and ill intent to cause viewers to fear you. It is contested by a 10 + willpower + intimidation',\r\n        results: [\r\n            'Fail by 10 or more: they gain confidence against you, +2 to all rolls vs you, you take 1 mental health damage from humiliation',\r\n            'Fail by less than 10: no effect, they are not afraid of you',\r\n            'Success: They become frightened and take 1 mental health damage',\r\n            'Success 5: They become frightened and take 1d2 mental health damage.',\r\n            'Success 10: They become frightened and take 1d4 mental health damage.',\r\n            'Success 15: They become frightened and take 1d6 mental health damage.',\r\n            'Success 20: They become frightened and take 1d8 mental health damage.',\r\n            'Success 25: They become frightened and take 1d10 mental health damage.',\r\n            'If you are not able to directly attack or harm them, you gain -10 on your roll',\r\n            'If you are able to directly attack them but seemingly at a disadvantage you gain -5 on your roll',\r\n            'If you are able to directly attack them and seemingly at an advantage you gain +5 on your roll',\r\n            'If they are defenseless and at your mercy you gain +10 on your roll',\r\n            'If you attempt to frighten multiple targets then you gain penalty equal to the number of targets'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'spook',\r\n        attribute: 'willpower',\r\n        description: 'while talking to someone for a while you instill in them a sense of dread, every 10 minutes they must roll willpower vs your roll or take 1d4 fear damage (plus 1 per 5 you exceed their roll)',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Intimidation = new SkillTemplate('intimidation', 'the act of casting a shadow over the soul of another being', useCases);\r\nexport default Intimidation;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'search',\r\n        attribute: 'perception',\r\n        description: 'you look for hidden objects, items are hidden with the larceny skill, roll vs hiders roll, takes 1 hour',\r\n        results: [\r\n            'larceny minus 6 or more: You find nothing and you are confident there is nothing to find, may not try again',\r\n            'larceny minus 1-5: You suspect theres something to find, takes 3 days to find object',\r\n            'larceny plus 0-5: You find hidden object within 2 hours',\r\n            'larceny plus 6-10: you find hidden object within 1 hour',\r\n            'larceny plus 11-15: you find hidden object within 30 minutes',\r\n            'larceny plus 16-20: you find hidden object within 15 minutes',\r\n            'larceny plus 21+: you find hidden object at a glance immediately'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'crime scene investigation',\r\n        attribute: 'perception',\r\n        description: 'you examine a crime scene, takes 1 hour to find clues, number of maximum clues depend on criminal larceny skill to hide evidence. Takes 1 hour',\r\n        results: [\r\n            'find clues 0-15: find 1 wrong or missleading clue',\r\n            'find clues 16-20: no clues',\r\n            'find clues 21-25: find 1 clue',\r\n            'find clues 26-30: find 1d6 clue',\r\n            'find clues 31-35: find 2d6 clues',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'solve enigma',\r\n        attribute: 'intelligence',\r\n        description: 'solving puzzles, enigmas, mysteries. You roll to put it together, see connections and understand the mystery',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Investigation = new SkillTemplate('investigation', 'finding out the butler did it after all', useCases);\r\nexport default Investigation;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide object',\r\n        attribute: 'perception',\r\n        description: 'hide an item somewhere, big items take a penalty, open places with few hiding spots take a penalty',\r\n        results: [\r\n            'Gain +5 if object is small',\r\n            'Gain +5 if location has many hiding spots',\r\n            'Lose -5 if object is large',\r\n            'Lose -5 if location has few hiding spots'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'lockpick',\r\n        attribute: 'agility',\r\n        description: 'pick a conventional lock takes 3 minutes or less',\r\n        results: [\r\n            '15: simple lever tumbler',\r\n            '20: complex lever tumbler and disk tumbler',\r\n            '25: simple pin tumbler',\r\n            '30: complex pin tumbler',\r\n            'Succeed by 10, do it in 1d6 rounds',\r\n            'Fail by 10, causes damage to lock, raises difficulty by 5 and if damaged twice it will be broken',\r\n            'Some locks are designed to break immediately on any failed lock pick attempt'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'electronic lockpick',\r\n        attribute: 'intelligence',\r\n        description: 'pick an electronic lock, needs a highly specialized electronic lockpicking tool, might involve a hacking roll (computer). Takes 10 minutes',\r\n        results: [\r\n            'Infra-red key lock: 25',\r\n            'Numb-pad key lock: 15',\r\n            'password key lock: 20',\r\n            'magnetic key lock: 30',\r\n            'Fingerprint scan: 30',\r\n            'Retina scan: 35',\r\n            'DNA scan: 45'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pick pocket',\r\n        attribute: 'agility',\r\n        description: 'remove or add an item to someones inventory without them realizing, they make a perception roll. Big and heavy items are harder to transfer. Takes 1-2 rounds',\r\n        results: [\r\n            '20+perception: tiny light item (single key, card)',\r\n            '25+perception: small light item (keychain, wallet, pocket computer)',\r\n            '30+perception: medium light item (hand gun, knife)',\r\n            '-5 to your roll if they see you comming',\r\n            '-10 to your roll if they expect pickpockets and keep their hands in their pockets',\r\n            '+5 your roll if you have accomplice to distract them',\r\n            '+5 to your roll if they are distracted'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hide evidence of crime',\r\n        attribute: 'perception',\r\n        description: 'Hide evidence of crime, takes 2 hours',\r\n        results: [\r\n            '1-9: leave behind 20 clues or more',\r\n            '10-15: leave behind 3d6 clues',\r\n            '16-20: leave behind 2d6 clues',\r\n            '21-25: leave behind 1d6 clues',\r\n            '26-30: leave behind 1d4 clues',\r\n            '31-35: leave behind 1d3 clues',\r\n            '36-40: leave behind 1d2 clues',\r\n            '41+: leave behind 1 clue',\r\n            \r\n        ],\r\n        type: 'active'\r\n    }\r\n\r\n];\r\nconst Larceny = new SkillTemplate('larceny', 'crimes and stuff', useCases);\r\nexport default Larceny;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'first aid',\r\n        attribute: 'intelligence',\r\n        description: 'if someone has zero or negative hitpoints then you can prevent bleedout by rolling first aid vs their total damage taken, must be applied every turn or until you succeed with a roll of 10 more than the target',\r\n        results: [\r\n            'perform CPR: 15 or higher: keep alive for as long as you keep performign CPR (only needed if heart stopped or breathing stopped)',\r\n            'stop light bleeding: 4 or lower: fail and cause 1 point of damage',\r\n            'stop light bleeding: 9-24: stop bleeding',\r\n            'stop light bleeding: 25+: stop bleeding and heal 1 life',\r\n            'stop intermediate bleeding: 9 or lower+: fail and cause 1 point of damage',\r\n            'stop intermediate bleeding: 15-34: stop bleeding',\r\n            'stop intermediate bleeding: 35+: stop bleeding and heal 1 life',\r\n            'stop heavy bleeding: 14 or lower+: fail and cause 1 point of damage',\r\n            'stop heavy bleeding: 20+: stop bleeding',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'surgery',\r\n        attribute: 'agility',\r\n        description: 'perform an operation on a patient with injuries or disease',\r\n        results: [\r\n            'remove bullets or shrapnel, stitch up wounds: equal to total damage, if success by 5 or more heal 1 hp, if success by 10 heal 1d6',\r\n            'fix fractured bone: 25',\r\n            'fix shattered bone: 30',\r\n            'biopsy: 25 (remove small piece of tissue for experimentation)',\r\n            'remove organ or cancer: 25-40 (depends on organ)',\r\n            'if you fail by 0-5 the surgery is a success but the patient takes 1d6 damage',\r\n            'if you fail by -6 the surgery is a failure and the patient takes 1d8 damage',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'administer medicine',\r\n        attribute: 'intelligence',\r\n        description: 'picking out the right medicine and knowing how to administer it correctly, this involves a 15 minute checkup to diagnose the patient and 45 minutes of research and preparation',\r\n        results: [\r\n            'administer light painkillers: 10 (1/2 damage penalty to skills)',\r\n            'administer medium painkillers: 20 (1/4 damage penalty to skills)',\r\n            'administer heavy painkillers: 30 (1/8 damage penalty to skills)',\r\n            'administer adrenaline: 20+ (patient ignores damage penalties to skills up to -100% damage)',\r\n            'administer stempack: 30+ (takes 10 minutes, heal 1 life per hour for 8 hours, max 1 per endurance per week)',\r\n            'administer stempack: 15 or less cause 1d4 damage and 50% risk of cancer',\r\n            'administer antibiotics: 20',\r\n            'administer antivirals: 25',\r\n            'administer radioflush: 20',\r\n            'administer antivenom: 25',\r\n            'administer gene therapy detox: 25',\r\n            'administer anti-radiation: 25',\r\n            'administer active carbon: 5',\r\n            'administer performance enhancing drugs: 15',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'psychology',\r\n        attribute: 'intelligence',\r\n        description: 'reduce someones fear level, treat mental illness.',\r\n        results: [\r\n            'therapy: 5: lose 1 mental health from stress (takes 2 hour, max once per day)',\r\n            'therapy 20: heal 1d2 mental health (takes 2 hour, max once per day)',\r\n            'therapy 25: heal 1d4 mental health (takes 2 hour, max once per day)',\r\n            'therapy 30: heal 1d6 mental health (takes 2 hour, max once per day)',\r\n        ],\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Medicine = new SkillTemplate('medicine', 'giving people insulin, knowing insulin is not crack', useCases);\r\nexport default Medicine;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'dealing',\r\n        attribute: 'willpower',\r\n        description: 'striking a deal, haggling, negotiating exchanges, each side rolls and a compromise is made in favor of whoever has the higher roll equal to the difference. Only works on people open to it',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'motivational speech',\r\n        attribute: 'willpower',\r\n        description: 'you make a rousing motivational speech, everyone hearing it gains a +1 to all rolls for the rest of the day to any skill they have lower than your persuation skill. Takes 1 minute',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'inspire courage',\r\n        attribute: 'willpower',\r\n        description: 'you say a few heart warming words that strengthen the resolve of anyone hearing you gain +1 to fear resistance up to your roll. Takes 1 round',\r\n        results: [\r\n            '15-24: +1 to fear resistence',\r\n            '25+: +1 to fear resistence, restore 1 mental health (can only restore from this benefit once a day)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'quell conflict',\r\n        attribute: 'willpower',\r\n        description: 'you try to talk someone down from fighting you, gain +3 to your roll if you know their motives or if they fear you. Does not work on everyone',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Persuation = new SkillTemplate('persuation', 'making people see it your way', useCases);\r\nexport default Persuation;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'drive car',\r\n        attribute: 'perception',\r\n        description: 'drive a car, quadcar, or motorcycle',\r\n        results: [\r\n            'critical failure: 0',\r\n            'severe crash: 5',\r\n            'crash: 10',\r\n            'mild missadventure: 15',\r\n            'drive normally: 20',\r\n            'driving fast (+120km/h): -5 to roll',\r\n            'driving very fast (+180km/h): -10 to roll',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'autopilot available: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive boat',\r\n        attribute: 'agility',\r\n        description: 'drive a boat, driving normally has a difficulty of 15. Failure means you do not make any progress.',\r\n        results: [\r\n            'move forward or turn: 15',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive ship',\r\n        attribute: 'intelligence',\r\n        description: 'driving a ship typically requires mutliple people. Failure means you make no progress or move slightly in random direction.',\r\n        results: [\r\n            'move forward or turn: 20',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'autocaptain available: +8 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'drive submarine',\r\n        attribute: 'intelligence',\r\n        description: 'driving a sub is very hard and requires multiple people. Failure means you make no progress or move slightly in random direction.',\r\n        results: [\r\n            'move forward, turn, submerge or surface: 25',\r\n            'harsh weather: -3 to roll',\r\n            'autocaptain available: +6 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot airplane',\r\n        attribute: 'intelligence',\r\n        description: 'the second hardest point is takeof, the hardest part is landing. Failure could potentially mean death.',\r\n        results: [\r\n            'takeoff: 25',\r\n            'keep airborne: 20',\r\n            'land: 30',\r\n            'crashland safely: 25-29 (no harm to passengers, airplane is damaged and can not takeoff again without repair)',\r\n            'crash violently: 20-24 (airplane damaged, each passengers take 4d20 on hills or mountains, 3d20 damage on flatland, 2d20 on water. Roll seperately, if you die you die)',\r\n            'crash catastrophically: 19 or less (airplane destroyed, each passenger takes 5d20)',\r\n            'air combat: make opposed roll vs enemy, highest roll gets to fire weapon and hits',\r\n            'sea plane: +3 to roll',\r\n            'harsh weather: -3 to roll',\r\n            'extreme weather: -6 to roll',\r\n            'landing gear broken: -10 to roll (only for landing)',\r\n            'engine broken: -5 to roll (only for landing)',\r\n            'autopilot available: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot spaceship',\r\n        attribute: 'intelligence',\r\n        description: 'navigation requires understanding of orbital mechanics',\r\n        results: [\r\n            'enter orbit: 30',\r\n            'deorbit: 25',\r\n            'deorbit and land within 10km: 30',\r\n            'deorbit and land within 1km: 35',\r\n            'deorbit and land perfectly on landingarea: 40',\r\n            'activate retrothrusters to land smoothly: 40',\r\n            'adjust orbit to intercept other co-satelite: 35',\r\n            'plot escape trajectory to other satelite: 35',\r\n            'auto-naut available: +5 to roll',\r\n            'long preparatory time (48h): +5 to roll',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'pilot FTL',\r\n        attribute: 'intelligence',\r\n        description: 'knowing how to operate an FTL hyperdrive is hard',\r\n        results: [\r\n            'plot course to other star: 35 + 1 per light year'\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst Pilot = new SkillTemplate('pilot', 'driving car, boat, airplane, spaceship, horse', useCases);\r\nexport default Pilot;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'cast spell',\r\n        attribute: 'willpower',\r\n        description: 'cast a spell, unless the spell description says otherwise uses an action, does not restrict movement and has no visible somatic or verbal requirement, you simply will it into existence.',\r\n        results: [\r\n            'Spell mana cost depends on how you use them',\r\n            'The difficult is 4 + 4 x mana cost (1 mana = 8, 2 mana = 12, 3 mana = 16, etc)',\r\n            'If you roll 1-5 points below difficulty you may choose to have it succeed at double mana cost',\r\n            'If you roll 10+ points below difficulty the spell fails and you spend 1 additional mana per point of failure below 10 (so if difficulty is 24, you roll 12 you spend 4 + 2 = 6)',\r\n            'If you roll 10+ above difficulty the spell costs 1 less mana (minimum 1)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'regenerate mana',\r\n        attribute: 'willpower',\r\n        description: 'you regenerate 1 mana every 24 hours, if your mana goes into the negatives you can not cast any more spells. You also suffer a penalty to all rolls equal to your negative mana. Mana regeneration does not depend on rest.',\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Spells = new SkillTemplate('spells', 'You will a phenomenon into existence or use a mutations benefit.', useCases);\r\nexport default Spells;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'shadow',\r\n        attribute: 'agility',\r\n        description: 'follow someone without them knowing youre following them, roll stealth + agility vs their perception + stealth (passive take 10)',\r\n        results: [\r\n            'critical failure: 10 less than their perception roll: they notice you immediately, you dont notice that they notice you',\r\n            'failure: less than their perception roll: they notice you immediately',\r\n            'success: 0-5: you can follow them for 10 minutes undetected',\r\n            'success: 6-5: you can follow them for 20 minutes undetected',\r\n            'success: 11-15: you can follow them for 40 minutes undetected',\r\n            'success: 16-20: you can follow them for 80 minutes undetected',\r\n            'success: 21-25: you can follow them for 160 minutes undetected',\r\n            'success: 26-30: you can follow them for 320 minutes undetected',\r\n            'Target is paranoid: -5 to roll',\r\n            'Target knows your face: -10 to roll',\r\n            'You blend in well: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hide',\r\n        attribute: 'agility',\r\n        description: 'hide somewhere, roll agility + stealth vs target perception + stealth',\r\n        results: [\r\n            'critical failure: 10 less than their perception roll: they notice you immediately, you dont notice that they notice you',\r\n            'failure: less than their perception roll: they notice you immediately',\r\n            'success: 0-5: you are hidden for 15 minutes before they find you',\r\n            'success: 6-5: you are hidden them for 30 minutes before they find you',\r\n            'success: 11-15: you are hidden for 1 hour before they find you',\r\n            'success: 16-20: you are hidden for 2 hours before they find you',\r\n            'success: 21-25: you are hidden for 4 hours before they find you',\r\n            'success: 26-30: you are hidden for 8 hours before they find you',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'detection',\r\n        attribute: 'perception',\r\n        description: 'find someone who is hiding or shadowing you, this is a passive roll.',\r\n        results: [\r\n            'Active shadow search: +5 to your roll, shadow knows you are searching for a shadow',\r\n            'Active hidden person search: +5 to your roll, hidden person knows you are searching for a hiding person',\r\n        ],\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Stealth = new SkillTemplate('stealth', '', useCases);\r\nexport default Stealth;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hide emotion',\r\n        attribute: 'intelligence',\r\n        description: 'how hard you are to read, always take 10',\r\n        type: 'passive'\r\n    },\r\n    {\r\n        name: 'deception',\r\n        attribute: 'intelligence',\r\n        description: 'telling outright lies or knowingly leading others to a false conclusion through omission of the truth',\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Subtrefuge = new SkillTemplate('subtrefuge', '', useCases);\r\nexport default Subtrefuge;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'forage',\r\n        attribute: 'willpower',\r\n        description: 'find drinkable water, hunt fauna or gather edible flora. Takes 8 hours. The type of food you find depends on your biome. Barren worlds can not be foraged. Without tools it is assume that you crafted tools and they were used up in the act of gathering food.',\r\n        results: [\r\n            'Survival 20: ingredients for 1 meal',\r\n            'Survival 25: ingredients for 2 meals',\r\n            'Survival 30: ingredients for 3 meals',\r\n            'Survival 35: ingredients for 4 meals',\r\n            'Rush (4h): take -10 to roll to speed up the process. Still uses the effort of 8h',\r\n            'Exhaustion or over carry capacity: -3 per step',\r\n            'Outside of familiar biome: -5 to roll',\r\n            'Harsh biome: -5 to roll',\r\n            'Almost barren biome: -10 to roll',\r\n            'Find immediately edible food: -5 to roll',\r\n            'Have access to hunters/foraging tools: +10 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'wilderness orientation',\r\n        attribute: 'intelligence',\r\n        description: 'find your way through the wilderness',\r\n        results: [\r\n            'find north: 10',\r\n            'backtrack: 15'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build shelter',\r\n        attribute: 'intelligence',\r\n        description: 'build a shelter that protects you from exposure, depending on your roll and the environment will give you different levels of exposure. Building a shelter takes 8 hours to construct and 1 hour daily to maintain. Level 1 protection gives horrible quality sleep, level 2 gives bad quality sleep, level 3 gives adequate quality sleep. level 4 gives good quality sleep. level 5 gives fantastic quality sleep',\r\n        results: [\r\n            'Critical failure 5: no protection, materials destroyed',\r\n            'Failure 10: no protection, materials recoverable',\r\n            'Bad 15: 1 levels of protection',\r\n            'Adequate 20: 2 levels of protection',\r\n            'Good 25: 3 levels of protection',\r\n            'Great 30: 4 levels of protection',\r\n            'Fantastic 35: 5 levels of protection',\r\n            'Temperature range outside 5-35: -5 to roll',\r\n            'Temperature range outside -10 - 45: -10 to roll',\r\n            'Temperature range outside -30 - 60: -15 to roll',\r\n            'High winds: -5 to roll',\r\n            'Extreme winds: -10 to roll',\r\n            'Heavy rain: -5 to roll',\r\n            'Monsoon: -10 to roll',\r\n            'Build shelter for multiple people: -2 per person capacity, max 5',\r\n            'Have access to tent and bedroll: +5 to roll',\r\n            'Have access to wilderness tools: +5 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n\r\n];\r\nconst Survival = new SkillTemplate('survival', '', useCases);\r\nexport default Survival;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'repair machine',\r\n        attribute: 'intelligence',\r\n        description: 'repair a machine, takes 8 hours',\r\n        results: [\r\n            'maintain vehicle or machine: 25',\r\n            'repair vehicle or machine: 30',\r\n            'repair completely broken vehicle or machine: 35 (use replacement parts)',\r\n            'gain +5 if working in team',\r\n            'Take -10 to roll if no replacement parts available',\r\n            'if success with more than 10: job is done in 4 hours',\r\n            'if fail with more than 10: condition drops by 1 step'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'build device',\r\n        attribute: 'intelligence',\r\n        description: 'building a device',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'hotwire machine',\r\n        attribute: 'intelligence',\r\n        description: 'altering a machine to suit your needs',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'service robot',\r\n        attribute: 'intelligence',\r\n        description: 'servicing a robot',\r\n        type: 'active'\r\n    }\r\n];\r\nconst Mechanics = new SkillTemplate('mechanics', 'black thumb', useCases);\r\nexport default Mechanics;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'fencing',\r\n        attribute: 'intelligence',\r\n        description: 'Find a fence to buy your stolen goods. Sell stolen goods to the white market. Take 4 hours to achieve.',\r\n        results: [\r\n            'find fence: 20',\r\n            'sell hot stolen goods directly: 25',\r\n            'In a city with more crime: +5 to roll',\r\n            'In a town with less crime: -5 to roll',\r\n            '\"Looks like a cop\": -10 to roll',\r\n            'Is known to work in lawenforcement: -20 to roll',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'black market',\r\n        attribute: 'intelligence',\r\n        description: 'Finding a black market actor takes time and is risky. Takes 4 hours',\r\n        results: [\r\n            'Critical failure: 10 or less: law enforcement finds you',\r\n            'Failure: 11-15: criminals become suspicious of you',\r\n            'Failure: 16-24: no effect',\r\n            'Find market for illegal items: 30',\r\n            'Find black market for legal items: 25',\r\n            'In a city with lots of crime: +5 to roll',\r\n            'In a town with less crime: -5 to roll',\r\n            '\"Looks like a cop\": -10 to roll',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'gangs',\r\n        attribute: 'intelligence',\r\n        description: 'Finding gangs, talking to gangs, etc',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'gossip',\r\n        attribute: 'intelligence',\r\n        description: 'Picking up local information, knowing what is important and true, and not becoming suspicious in the process. Takes a 4 hours',\r\n        results: ['5 or below: gain no information and attract attention',\r\n            '6-10: gain one piece of gossip and attract attention',\r\n            '11-15: gain multiple pieces of gossip and attract attention',\r\n            '16-20: gain multiple pieces of gossip, at least one is something you choose and attract attention',\r\n            '21-25: gain multiple pieces of gossip, at least one is something you choose, no attention',\r\n            '26 or above: gain multiple pieces of gossip, most of which is something you choose, no attention',\r\n            'In town youre not familiar with: -3 to roll',\r\n            'In town youre familiar with: +3 to roll'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'local culture',\r\n        attribute: 'intelligence',\r\n        description: 'knowledge of local culture',\r\n        type: 'passive'\r\n    }\r\n];\r\nconst Streetwise = new SkillTemplate('streetwise', '', useCases);\r\nexport default Streetwise;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'set up experiment',\r\n        attribute: 'intelligence',\r\n        description: 'set up an experiment to test an hypothesis',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'formulize hypothesis',\r\n        attribute: 'intelligence',\r\n        description: 'create a theory to explain phenomena',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'remember science',\r\n        attribute:  'intelligence',\r\n        description: 'you remember a scientific fact pertaining a topic',\r\n        results: [\r\n            '15 or less: you remember wrong pseudoscience',\r\n            '25: you remember the necessary information',\r\n            '30: you remember additional useful information',\r\n            '35: you remember detailed useful information that gives you more or better options',\r\n            '40: you remember obscure detail especially useful information and gain a deep understanding',\r\n            '45: you remember all known scientific information about the topic',\r\n            '50: you make an ephiphany and will be able to further the field of science (gain free correct hypothesis)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'analyse life',\r\n        attribute: 'perception',\r\n        description: 'the scientist determines species, age, sex and abilities of a plant of creature',\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'fill spaceship cargobay/passengers',\r\n        attribute: 'intelligence',\r\n        description: 'when you fill a cargobay in a spaceship you have to be careful that the weight distribution is even, that includes the passengers. Takes between 1-8 hours, depending on the size of the ship, ship must be at rest.',\r\n        type: 'active',\r\n        results: [\r\n            '15 or less: you botch the job, the ship is missaligned and cant fly in a straight line',\r\n            '20: you are able to put the cargo in the right places, but its not perfect and the ship loses 10% acceleration',\r\n            '25: no penalties',\r\n            '30: youre able to organize the cargo perfectly, the ship has 10% more cargo space available'\r\n        ]\r\n    }\r\n];\r\nconst Science = new SkillTemplate('science', 'knowing science, conducting experiments', useCases);\r\nexport default Science;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'hotwire electronic device',\r\n        attribute: 'agility',\r\n        description: 'rewire an electronic device to turn on or off its function',\r\n        results: [\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst Electronics = new SkillTemplate('electronics', '', useCases);\r\nexport default Electronics;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'throw grenade',\r\n        attribute: 'agility',\r\n        description: 'throw a grenade at a target, grenade will explode at the end of your next turn',\r\n        results: [\r\n            'base difficulty: 10 (to hit square of target)',\r\n            'range penalty: 1 per meter',\r\n            'rain: +2',\r\n            'windy: +2',\r\n            'stormwind: +4',\r\n            'target on slope: +8',\r\n            'time grenade to explode when it arrives: -10, (if fail by 10 points or more theres is a 50% chance it explodes while youre holding it'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'set trigger detonated bomb',\r\n        attribute: 'intelligence',\r\n        description: 'you set a bomb to explode after a specific trigger has occured (time elapses, motion sensor, signal from remote etc). You can make it harder to disable by spending more time and using more better parts',\r\n        results: [\r\n            'base difficulty: 15',\r\n            'good parts: +2 (to roll)',\r\n            'spend 10 minutes: +2 (to roll)',\r\n            'spend 1 hour: +4 (to roll)',\r\n            'spend 4 hours: +6 (to roll)',\r\n            'make it explode if tampered with: -4 (to roll)'\r\n        ],\r\n        type :'active'\r\n    },\r\n    {\r\n        name: 'disable timed bomb',\r\n        attribute: 'perception',\r\n        description: 'you disable a timed bomb, the base difficulty is the resulting roll from when it was set. Takes 10 minutes, can be done in 1 minute at -10 penalty, 1 round -20 penalty',\r\n        results: [\r\n            'critical failure: 15 below target, bomb explodes immediately',\r\n            'severe failure: 10 below target, bomb time left is set to half (if timed, otherwise nothing)',\r\n            'failure: below target, no effect, difficulty raised +2',\r\n            'success: bomb disabled',\r\n            'critical success: 10 above target, bomb is disabled and can be manipulated immediately'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'make improvised bomb',\r\n        attribute: 'intelligence',\r\n        description: 'you make an improvised bomb from non-bomb materials. Takes 1 hour',\r\n        results: [\r\n            'molotov cocktail: base 15',\r\n            'nitroglycerin: base 25',\r\n            'dynomite: base 25',\r\n            'battery bomb: 20',\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Explosives = new SkillTemplate('explosives', 'creating and using explosive devices, bombs, grenades', useCases);\r\nexport default Explosives;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'remember common fact',\r\n        attribute: 'intelligence',\r\n        description: 'you remember a commonly known helpful fact or gain insight based on fact',\r\n        results: [\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst GeneralKnowledge = new SkillTemplate('general knowledge', 'so rare its a superpower', useCases);\r\nexport default GeneralKnowledge;","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'high society',\r\n        attribute: 'intelligence',\r\n        description: 'Act as though you belong in high society',\r\n        results: [\r\n            '15 or less: failure, people assume you are poor and treat you like scum or servant',\r\n            '16-20: low success, people assume you are middle class, nobody takes you seriously',\r\n            '21-25: mid success, people assume you belong and will treat you like anyone else, and detect failures',\r\n            '26-30: high success, people assume you are a good example, and detect low success',\r\n            '31+: great success, people look to you for advice, and detect mid success',\r\n            'is not dressed well: -10',\r\n            'is dressed extremely well: +5 (clothes worth 10 000 credits or more)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n];\r\nconst SavoirFaire = new SkillTemplate('savoir-faire', 'specialization into sub cultures that relates to legit occupations, high society and academy', useCases);\r\nexport default SavoirFaire;","import { Skill } from './Skills';\r\nimport Acrobatics from '../skills/acrobatics';\r\nimport Athletics from '../skills/athletics';\r\nimport Combat from '../skills/combat';\r\nimport Computer from '../skills/computer';\r\nimport Firearms from '../skills/firearms';\r\nimport Empathy from '../skills/empathy';\r\nimport Intimidation from '../skills/intimidation';\r\nimport Investigation from '../skills/investigation';\r\nimport Larceny from '../skills/larceny';\r\nimport Medicine from '../skills/medicine';\r\nimport Persuation from '../skills/persuation';\r\nimport Pilot from '../skills/pilot';\r\nimport Spells from '../skills/spells';\r\nimport Stealth from '../skills/stealth';\r\nimport Subtrefuge from '../skills/subtrefuge';\r\nimport Survival from '../skills/survival';\r\nimport Mechanics from '../skills/mechanics';\r\nimport Streetwise from '../skills/streetwise';\r\nimport Science from '../skills/Science';\r\nimport Electronics from '../skills/electronics';\r\nimport Explosives from '../skills/explosives';\r\nimport Cooking from '../skills/cooking';\r\nimport GeneralKnowledge from '../skills/generalknowledge';\r\nimport SavoirFaire from '../skills/savoir-faire';\r\n\r\nexport const GetSkillList = (): Skill[] => {\r\n    return [\r\n        Acrobatics,\r\n        Athletics,\r\n        Combat,\r\n        Computer,\r\n        Empathy,\r\n        Firearms,\r\n        Intimidation,\r\n        Investigation,\r\n        Larceny,\r\n        Medicine,\r\n        Persuation,\r\n        Pilot,\r\n        Spells,\r\n        Stealth,\r\n        Subtrefuge,\r\n        Survival,\r\n        Streetwise,\r\n        Mechanics,\r\n        Science,\r\n        Electronics,\r\n        Explosives,\r\n        Cooking,\r\n        GeneralKnowledge,\r\n        SavoirFaire\r\n\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\r\n}","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'aimed shot',\r\n        attribute: 'agility',\r\n        description: 'Fire a single shot at a target, any non fully-automatic weapon',\r\n        results: [\r\n            'If roll equals defense or greater then you hit',\r\n            'May also make any move action',\r\n            'Gain +1 armor pierce per each 10 over defense'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'snipe',\r\n        attribute: 'perception',\r\n        description: 'Wait for the perfect hit and then shoot, any non fully-automatic',\r\n        results: [\r\n            'If roll equals defense then you hit, if roll is less than up to 12 then take no action and simply wait (player may declare in advance the roll)',\r\n            'Defense from skill and agility removed',\r\n            'May take no other action at all',\r\n            'Gain +1 armor pierce per each 10 over defense'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'semi burst',\r\n        attribute: 'agility',\r\n        description: 'Fire multiple shots with a semi-automatic firearm',\r\n        results: [\r\n            'Fire 4 bullets',\r\n            'Add +5 to hit',\r\n            'If roll equals defense then you hit with 1d3 bullets',\r\n            'Defense from skill is removed',\r\n            'May also make any move action',\r\n            'Gain +1 minimum bullets hit per each 10 over defense (max 4)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'burst',\r\n        attribute: 'agility',\r\n        description: 'Hold down the trigger on a fully-automatic weapon for a short burst',\r\n        results: [\r\n            'Fire 10 bullets',\r\n            'Add +10 to hit',\r\n            'If roll equals defense then you hit with 1d6 bullets',\r\n            'Defense from skill is removed',\r\n            'May only make walk move action, move at half speed',\r\n            'Strength requirement increase by 1',\r\n            'Gain +1 minimum bullets hit per each 10 over defense (max 10)',\r\n            'You may shoot multiple targets using this, this choice is done before you shoot, -5 to hit for each extra target, all targets roll bullets individually with -1 per extra target (min 0)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'oppressive fire',\r\n        attribute: 'strength',\r\n        description: 'Hold down the trigger on a fully automatic firearm for the whole round, can spray across multiple targets',\r\n        results: [\r\n            'Shoot as many bullets as it uses per round, potentially empying the magazine',\r\n            'Add +15 to hit',\r\n            'If roll equals defense then you hit with 1d8 bullets',\r\n            'Defense from skill removed and agility',\r\n            'May take no other action at all for the whole round',\r\n            'Strength requirement increase by 2',\r\n            'Gain +1 bullet hit per each 10 over defense',\r\n            'Target gains \"oppressed\" debuff: if it chooses to take any offensive action until the begining of your first turn it is automatically hit by one bullet',\r\n            'You may shoot multiple targets using this, this choice is done before you shoot, -5 to hit for each extra target, all targets roll bullets individually with -1 per extra target (min 0)'\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'maintain weapon',\r\n        attribute: 'intelligence',\r\n        description: 'keep it clean and good. Takes 2 minute, requires ballistic kit.',\r\n        results: [\r\n            'service: 14 or lower: damage weapon, firearm drops condition by 1 step',\r\n            'service: 21-30 or lower: firearm condition countdown is reset',\r\n            'service: 31-40: firearm condition is improved by 1 step',\r\n            'service: 41+: firearm condition is improved by 2 steps'\r\n        ],\r\n        type: 'active'\r\n    }\r\n];\r\nconst Firearms = new SkillTemplate('firearms', 'shooting things', useCases);\r\nexport default Firearms;\r\n","import { SkillTemplate, UseCase } from \"../general/Skills\";\r\nconst useCases: UseCase[] = [\r\n    {\r\n        name: 'prepare meal',\r\n        attribute: 'perception',\r\n        description: 'you convert ingredients into a homecooked meal, you may cook multiple meals at once if the kitchen has the amenities for it.',\r\n        results: [\r\n            'Cooking 10 or less: you spoiled the food, horrible quality',\r\n            'Cooking 11-15: its edible yet unsatisfying',\r\n            'Cooking 16-20: average food, it does the job',\r\n            'Cooking 21-25: good food, leaves you in good mood',\r\n            'Cooking 26-30: great food, it tastes good and is yet very healthy',\r\n            'Cooking 31+: Outstanding food, this is some gourmet stuff',\r\n            'Cooking multiple meals requires an ever larger kitchen, home kitchen is good enough for 5',\r\n            'For each meal above 1, take -1 to roll (eg. 8 meals = -7 to roll)',\r\n            'Following recipe: +5 to roll (max is great)',\r\n            'Cooking fast: 30m, -5 to roll, max quality is great',\r\n            'Speed cooking: 15m, -10 to roll, max quality is good',\r\n        ],\r\n        type: 'active'\r\n    },\r\n    {\r\n        name: 'preserve food',\r\n        attribute: 'intelligence',\r\n        description: 'you convert edible food or raw ingredients into long lasting preserved food allowing it to last longer, you may preserve up to 10 meals as a single action, each meal increases time by 10%. Requires access to kitchen',\r\n        type: 'active',\r\n        results: [\r\n            'cooling: 5, food lasts 1 week',\r\n            'freezing: 5, food lasts 1 month',\r\n            'pickle: 15 average, 20 good. Takes 1 hour. Requires sealable container. lasts 1 year on average',\r\n            'curing: 20 average, 25 good. Takes 1 hour + 16 hours of time. lasts 6 months on average',\r\n            'fermentation: 20 average, 25 good, 30 great, 35+ outstanding.',\r\n            'high density ration: 25, requires raw protein, fats, sugars and synthetic vitamims. Lasts 10 years'\r\n        ]\r\n    }\r\n];\r\nconst Cooking = new SkillTemplate('cooking', 'everything related to cooking food', useCases);\r\nexport default Cooking;","import { IHooker } from '../Character';\r\n\r\n\r\nexport interface Trait extends IHooker {\r\n    name: string;\r\n    cost: number;\r\n    description: string;\r\n}\r\n\r\nconst Coward: Trait = {\r\n    name: 'Coward',\r\n    cost: -10,\r\n    description: 'You are a coward that more easily falls vicim to fear. Take a -2 to all frighten rolls and defense, frightened status lasts twice as long',\r\n    applyTo: 'fear',\r\n    amount: -2,\r\n}\r\n\r\nconst Brave: Trait = {\r\n    name: 'brave',\r\n    cost: 10,\r\n    description: 'You are brave and are less likely to be phased by fear. Take +2 to all frighten rolls and defense, frightened always only lasts 1 round.',\r\n    applyTo: 'fear',\r\n    amount: 2,\r\n}\r\n\r\nconst FoolHardy: Trait = {\r\n    name: 'foolhardy',\r\n    cost: 10,\r\n    description: 'At first glance you seem brave, but actually you are just ignoring the feeling completely. You gain 1 fear resistence but you are no longer privy to your own fear stat, the DM will roll for your fear without your knowledge',\r\n    applyTo: 'fear',\r\n    amount: 1,\r\n}\r\n\r\nconst Frail: Trait = {\r\n    name: 'frail',\r\n    cost: -10,\r\n    description: 'You are frail and easily damaged, -2 maximum hitpoints',\r\n    applyTo: 'hitpoints',\r\n    amount: -2,\r\n}\r\n\r\nconst Resillient: Trait = {\r\n    name: 'resillient',\r\n    cost: 20,\r\n    description: 'You are able to withstand more punishment, +2 maximum hitpoints',\r\n    applyTo: 'hitpoints',\r\n    amount: 2,\r\n}\r\n\r\nconst Reckless: Trait = {\r\n    name: 'reckless',\r\n    cost: -10,\r\n    description: 'You are reckless when using tools, items lose condition at double rate',\r\n    applyTo: '',\r\n    amount: 0,\r\n}\r\n\r\nconst Gifted: Trait = {\r\n    name: 'gifted',\r\n    cost: 80,\r\n    description: 'you are naturally gifted and everything seems to come easier to you, gain +1 to your 4 lowest base stats, however your experience multiplier is reduced by 1 (min 1)',\r\n    applyTo: 'experienceMultiplier',\r\n    amount: -1,\r\n}\r\n\r\nconst FastMetabolism: Trait = {\r\n    name: 'fast metabolism',\r\n    cost: 20,\r\n    description: 'You have a very high metabolism, you heal +1 life per day, eat 50% more, poison and drugs acts twice as fast and last half as long',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst DoubleHanded: Trait = {\r\n    name: 'double handed',\r\n    cost: 10,\r\n    description: 'you are proficient with both hands, can do any task with either hand',\r\n    amount: 0,\r\n    applyTo: '',\r\n}\r\n\r\nconst Phobia: Trait = {\r\n    name: 'phobia',\r\n    cost: -10,\r\n    description: 'pick one thing, your character has a phobia for that and is forced to make a fear roll when they see it',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst WealthyFamily: Trait = {\r\n    name: 'wealthy family',\r\n    cost: 30,\r\n    description: 'you come from a wealthy family, you start with an additional 60k credits and you are known in your home town, you have innate high society minimum mid success on savoir-faire',\r\n    amount: 0,\r\n    applyTo: '',\r\n}\r\n\r\nconst Aggressive: Trait = {\r\n    name: 'aggressive',\r\n    cost: 10,\r\n    description: 'you are particularly aggressive and fast to fight, +2 to sequence and -2 to all defense. If you panic you may choose to instead go berserk',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst Frugal: Trait = {\r\n    name: 'frugal',\r\n    cost: 10,\r\n    description: 'you are always vigilant trying to find the best prices, all purchases below 100 000 credits are 10% off',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst Durable: Trait = {\r\n    name:'durable',\r\n    cost: 20, \r\n    description: 'you are durable and gain +1 damage absorbtion',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst MentallyFlexible: Trait = {\r\n    name: 'mentally flexible',\r\n    cost: 30,\r\n    description: 'you are highly mentally flexible, you gain +1 to your experience multiplier',\r\n    amount: 1,\r\n    applyTo: 'experienceMultiplier'\r\n}\r\n\r\nconst Stubborn: Trait = {\r\n    name: 'stubborn',\r\n    cost: -10,\r\n    description: 'you are stubborn and unlikely to change your ways, -1 to experience multiplier (min 1) and you are resistent to being convinced (+2 resist persuation)',\r\n    amount: -1,\r\n    applyTo: 'experienceMultiplier'\r\n}\r\n\r\nconst ForgetfulFace: Trait = {\r\n    name: 'forgetful face',\r\n    cost: -10,\r\n    description: 'people are less likely to remember your face or your name, you dont tend to stand out in a crowd. 50% chance that you wont get any reputation for your deeds',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst Blind: Trait = {\r\n    name: 'blind',\r\n    cost: -30,\r\n    description: 'your eyesight is so poor that you are legally blind, your perception counts as -5 for all visual rolls (where you need to see), 0 if you have cybernetic eyes, additionally if you move faster than base speed you risk running into things',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst Deaf: Trait = {\r\n    name: 'deaf',\r\n    cost: -20,\r\n    description: 'your hearing is so poor that you are legally deaf, your perception counts as -5 for all auditory rolls, 0 if you have cybernetic ears. You can speak using sign language',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst Mute: Trait = {\r\n    name: 'mute',\r\n    cost: -20,\r\n    description: 'you cant speak, you can only communicate in writing. All skills that involve speaking are impossible for you',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\nconst NaturalTalent: Trait = {\r\n    name: 'natural talent',\r\n    cost: 10,\r\n    description: 'pick one skill, you have +3 to that skill',\r\n    amount: 0,\r\n    applyTo: ''\r\n}\r\n\r\n\r\n\r\nexport const GetTraits = (): Trait[] & IHooker[] => {\r\n    return [\r\n        Coward,\r\n        Brave,\r\n        FoolHardy,\r\n        Frail,\r\n        Resillient,\r\n        Reckless,\r\n        Gifted,\r\n        FastMetabolism,\r\n        DoubleHanded,\r\n        Phobia,\r\n        WealthyFamily,\r\n        Aggressive,\r\n        Frugal,\r\n        Durable,\r\n        MentallyFlexible,\r\n        Stubborn,\r\n        ForgetfulFace,\r\n        Blind,\r\n        Deaf,\r\n        Mute,\r\n        NaturalTalent\r\n    ].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1)\r\n};","import { PerkTemplate } from \"../general/Perks\";\r\nimport { IHooker } from \"../Character\";\r\n\r\nconst spellhook: IHooker = {\r\n    applyTo: 'spells',\r\n    amount: 0\r\n}\r\n\r\nclass SpellTemplate implements PerkTemplate {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    description: string;\r\n    results?: string[];\r\n    constructor(name: string, description: string, range?: string, results?: string[] | undefined) {\r\n        this.name = name;\r\n        this.skill = 'spells';\r\n        this.level = 1;\r\n        if (range !== undefined)\r\n            this.description = description + '. range: ' + range;\r\n        else this.description = description;\r\n        this.applyTo = spellhook.applyTo;\r\n        this.amount = spellhook.amount;\r\n        this.results = results;\r\n    }\r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n}\r\n//spells\r\nexport const DimensionalSwap = new SpellTemplate(\r\n    'Dimensional Swap',\r\n    'Spell: You can cause an object to being to exist or seize to exist by finding a virtual parallel universe which is identical in every way except for the objects existence.' +\r\n    'The object can not be of any previous consequence since it had to have either existed or not in both worlds. The object and its circumstances must be known to you.',\r\n    '10 meters, visual contact',\r\n    [\r\n        'base mana: 2',\r\n        'object is larger than 1kg: +1 mana',\r\n        'object is not within visual sight of caser: +2 mana',\r\n        'object is/was partially used: +2 mana',\r\n        'you dont see the object: +3 mana',\r\n        'increase range: +1 mana per 10 meters',\r\n        'no visual contact: +2 mana'\r\n    ]\r\n);\r\n\r\nexport const Splinter = new SpellTemplate(\r\n    'Splinter',\r\n    'Spell: you split into two clones of yourself with all of your capabilities and has shared mana. Lasts 24 hours after which one will die and the other will revert into being the original (players choice). Spend 2 mana every day to keep it alive longer, prevents mana regen while active',\r\n    'personal',\r\n    ['Base mana: 3',\r\n        'Increase duration: +1 mana per 24 hour']\r\n);\r\n\r\nexport const Unmask = new SpellTemplate(\r\n    'Unmask',\r\n    'Spell: Your skin splits open and shreds to pieces, revealing a new person hiding underneat. This person is the real you, this person doesnt need to have your face, gender, DNA or even height (you may increase or decrease up to 10cm)',\r\n    'personal',\r\n    [\r\n        'base mana: 2 (change face only)',\r\n        'change fingerprint/retina: +1 mana',\r\n        'change color of skin, eyes and/or hair: +1 mana',\r\n        'change gender: +2 mana (requires change DNA)',\r\n        'change DNA: +1 mana',\r\n        'change trait: +3 mana (requires character points if you add a positive or remove a negative, only one trait)'\r\n    ]\r\n);\r\n\r\nexport const UmbraConstant = new SpellTemplate(\r\n    'Umbra Constant',\r\n    'Spell: Your shadow becomes a temporary fixture on the ground, you may also enter the shadow and hide inside it for up to one hour. If the surface is damaged you get pushed out immediately.',\r\n    'direct contact',\r\n    ['base mana: 2',\r\n        'increase to five hours: +1 mana',\r\n        'increase to two days: +2 mana',\r\n        'increase to ten days: +3 mana',\r\n        'increase to fourty days: +4 mana',\r\n        'increase to one hundred days: +5 mana',\r\n        'hide additional stuff: +1 mana per 10 kg']\r\n);\r\n\r\nexport const MirrorTrap = new SpellTemplate(\r\n    'Mirror Trap',\r\n    'Spell: you trap someone in a mirror when you see them through the mirror directly, they become trapped inside a fake mirror universe, they are automatically freed when the mirror is broken, while inside the mirror they are timeless and immortal, lasts 1 day',\r\n    '10 meters, visual contact',\r\n    ['base mana: 3',\r\n        'increase by 1 day: +1 mana per day']\r\n);\r\n\r\nexport const DarkVortex = new SpellTemplate(\r\n    'Dark Vortex',\r\n    'Spell: You draw dark matter from all directions into one single point up to 1 meter away from your head, the dark matter creates a gravity well with 1m/s/s pull at 1 meter away, lasts 1 minute. You can interact with this point as if it was a tiny ball',\r\n    '1 meter, visual contact',\r\n    ['base mana: 1',\r\n        'increase gravity: +1 mana per 1/m/s/s',\r\n        'increase distance: +1 mana per 5 meters']\r\n);\r\n\r\nexport const LuminiferousTransubstantiation = new SpellTemplate(\r\n    'Luminiferous Transubstantiation',\r\n    'Spell: Your body converts into pure ultra high energy light that moves at the speed of light through up to 1m of solid or liquid matter or 30m of air, you travel up 30m. Clothes and equipment not included by default. While in light form you are blind, you must roll 10 points higher to accurately rematerialize where you want to, otherwise you will rematerialize within 1d6 meters of the target.',\r\n    'personal',\r\n    [\r\n        'base mana: 2',\r\n        'increase distance: +1 mana per +300m distance and +1m through solid objects',\r\n        'bring additional stuff: +1 mana per 20kg',\r\n        'if you dont see the target: -10 to your roll',\r\n        'if you materialize inside solid matter you are ejected to the nearest empty space and take 1d6 damage per meter traveled',\r\n        'if you materialize inside liquid matter you take 1d6 damage'\r\n    ]\r\n);\r\n\r\nexport const ColorBias = new SpellTemplate(\r\n    'ColorBias',\r\n    'Spell: You alter the color charge of the subatomic matter of a small object that you touch, this object becomes intensly radiactive as it slowly converts into energy. Level 8 radiation at 1 meter. 1 microgram per hour, stops at 2 hours. Object weight max 1kg',\r\n    'direct contact',\r\n    [\r\n        'base mana: 3',\r\n        'increase radiation level: +1 mana per level (+0.1 microgram per hour)',\r\n        'increase duration: +1 mana per hour',\r\n        'increase max kg: +1 mana per kg'\r\n    ]\r\n);\r\n\r\nexport const Rift = new SpellTemplate(\r\n    'Rift',\r\n    'Spell: Opens up a tiny rift to another dimension at the palm of your hand, a strange energy leaks out. This rift can be moved around only by you, you move it freely with your mind. It moves at a rate of up to 600meters per round. It must be within 300 meters of you. Anyone that touches it must roll 1d10 for a random effect. It lasts as long as you want but drains you of 1 mana per turn. To hit a person you must make a combat roll. If two consequtive effects are the same, reroll.',\r\n    'direct contact',\r\n    [\r\n        'base mana: 4',\r\n        '1: a burst of unknown, shimmering energy escapes, roll 1d6, 1: strength, 2: agility, 3: endurance, 4: perception, 5: intelligence, 6: willpower. Roll 1d6 damage',\r\n        '2: a burst of invisible kinetic energy escapes, target is violently pushed away from rift, takes 2d6 damage (10 armor piercing), is moved an equal amount of meters away.',\r\n        '3: a burst of gamma rays escape, target gains 1d8 levels of radiation',\r\n        '4: a burst of heat escapes, target is ignited, takes 1d6 damage (8 armor piercing) per turn for 10 turns',\r\n        '5: a bubbling prismatic tentacle lashes out, target is healed 2d6 life but paralyzed for an equal number of rounds, gaining 1 life each round.',\r\n        '6: a stream of large teeth engulf the target, target takes 1d6 damage (2 armor piercing) and has a -10 penalty to all actions for 1 round',\r\n        '7: a burst of toxic black ash escapes, all people within 6 meters take 1d4 damage (6 armor piercing) and are blinded for 1 round',\r\n        '8: a white bolt of lightning escapes and hits the target, the target can take 1 extra action and takes 1 mental health damage for 1d6 rounds',\r\n        '9: the target gains control of the rift, but mana is drained at a double rate',\r\n        '10: a burst of otherworldy mental projections escape, target gains 1d6 mana, loses 2d6 mental health, the target can gain a spell or mutation immediately.'\r\n    ]\r\n);\r\n\r\nexport const Conversation = new SpellTemplate(\r\n    'Conversation',\r\n    'Spell: You mentally communicate with anyone youve previously met, you may do at most 4 back/fourth, maximum 100 words each time. Persons who dont know you can do this will experience it as an inner monologue, asking uncomfortable questions may yield no answer',\r\n    'unlimited',\r\n    [\r\n        'base mana: 2',\r\n        'person is not on the same planet: +1 mana',\r\n        'person is not in the same system: +2 mana',\r\n        'person is dead: +5 mana',\r\n        'longer converation: +1 mana per back/fourth'\r\n    ]\r\n);\r\n\r\nexport const HyperSight = new SpellTemplate(\r\n    'Hyper Sight',\r\n    'Spell: You see things from the vantage point of a higher dimension, allowing you to see through matter as if it were transparent for up to 100 meters. Lasts 10 minutes',\r\n    'personal',\r\n    [\r\n        'base mana: 2',\r\n        'increase range: +1 mana per 100 meters',\r\n        'increase time: +1 mana per 10 minutes']\r\n);\r\n\r\nexport const Tesseraction = new SpellTemplate(\r\n    'Tesseraction',\r\n    'Spell: you designate a 1x1x1 cubic meter volume to become the host of a four dimensional tesseract. You add 7 extra cubic meters of volume which only you can interact with, you may rotate the tesserate so that any of the volumes becomes coterminus with reality. Lasts 5 days',\r\n    '1 meter visual contact',\r\n    [\r\n        'base mana: 3',\r\n        'increase duration: +1 mana per 2 days',\r\n        'increase size: +1 mana per cubic meter',\r\n        'allow someone else to interact: +1 mana per person'\r\n    ]\r\n);\r\n\r\nexport const HarshEmpathy = new SpellTemplate(\r\n    'Harsh Empathy',\r\n    'Spell: You establish an unrelenting empathic link to another person, which allows you to feel everything they feel, they feel everything you feel. Mental trauma and respite is shared. Lasts 1 day',\r\n    '10 meters, visual contact',\r\n    [\r\n        'base mana: 1',\r\n        'increase duration: +1 mana per 2 days'\r\n    ]\r\n);\r\n\r\nexport const BrutalEmpathy = new SpellTemplate(\r\n    'Brutal Empathy',\r\n    'Spell: You establish an immediate empathic link to another person which causes the sum total of your life damage to be redistributed equally',\r\n    '10 meters visual contact',\r\n    [\r\n        'base mana: 2',\r\n        'redistribute unequally: 1 mana per life in your favor',\r\n    ]\r\n);\r\n\r\nexport const SpiritualRegeneration = new SpellTemplate(\r\n    'Spiritual Regeneration',\r\n    'Spell: You are able to convert mana into life and reverse on yourself and others.',\r\n    'personal or direct contact',\r\n    [\r\n        'base mana: 1, heal 1 life per round for 1d6 rounds',\r\n        'increase regen: 1 mana, +1d6 rounds (can be applied multiple times)',\r\n        'apply to other person: +1 mana, other target consumes equal amount of mana',\r\n        'recover mana: lose 1 maximum life, recover 1d6 mana, no roll. recover 1 maximum life per 24 hours with no option to speed up recover under any circumstances',\r\n    ]\r\n);\r\n\r\nexport const Quintessence = new SpellTemplate(\r\n    'Quintessence',\r\n    'Spell: You projectile vomit a stream of a silvery bubbling liquid. When it hits a target the liquid engulfs it completely. After 1 minute the liquid disappates and the target is released, for the target no time has passed.',\r\n    '5 meters',\r\n    [\r\n        'base mana: 1. Make an unarmed attack to see if you hit a person',\r\n        'duration 10 minutes, +1 mana',\r\n        'duration 1 hour, +2 mana',\r\n        'duration 10 hours, +3 mana',\r\n        'duration 1 day, +4 mana',\r\n        'duration 10 days, +5 mana',\r\n        'if the liquid hits a surface or object heavier than 1000kg it will disappate immediately',\r\n        'anything that touches the liquid will feel intense cold and take 1d6 damage per mana spent',\r\n        'if damage equal to mana x 100 is dealt to the liquid it will disappate'\r\n    ]\r\n);\r\n\r\nexport const SolarFlare = new SpellTemplate(\r\n    'Solar Flare',\r\n    'Spell: Hot electric plasma engulfs your body, which you can direct at one target. If you are wearing clothes or armor they take damage. Lasts 1 minute',\r\n    'personal, 10 meter range',\r\n    [\r\n        'base mana: 2',\r\n        'each extra mana spent gives: +1 defense, damage absorbtion, +1d6 damage',\r\n        'Anyone standing within 1 meter, or attacks you in melee takes 1d6 damage every round',\r\n        'Gain +2 defense and damage absorbtion while in effect',\r\n        'Move at double speed',\r\n        'Send out jet of hot plasma dealing 2d6, (combat + agility) range 10 meters',\r\n        'damage absorbtion from fire, lightning and plasma sources: 100'\r\n    ]\r\n);\r\n\r\nexport const QuantumLeap = new SpellTemplate(\r\n    'Quantum Leap',\r\n    'Spell: You make the electrons in your body perform a quantum leap, removing their friction from the rest of the world for a split second. While frictionless you can move through solid objects freely and become completely invisible. Gravity still applies so if you stand still and make a quantum leap you will fall through the ground potentially dooming yourself. If you end the spell while inside solid or liquid matter it fuses with your body- destroying it utterly. Lasts up to 1 round.',\r\n    'personal',\r\n    [\r\n        'base mana: 1 entire body or partial, clothes, armor, equipment, inventory is not automatically included',\r\n        'quantum leap other matter: +1 mana per 20 kg',\r\n        'extend duration: +1 mana per round (after 2 rounds you take 1 damage per round, this is damage can not be reduced by any means)',\r\n        'You can use this spell in place of dodge or block, making the attack phase through you. If you are multi-attacking this counts as a melee attack',\r\n        'To jump through a wall you must also succeed a acrobatics 15 or you will fuse with the wall or floor',\r\n        'You can make part of your body frictionless',\r\n        'While frictionless you are immune all photon and material effects.'\r\n    ]\r\n);\r\n\r\n\r\n//mutations\r\nexport const MortisAlbum = new SpellTemplate(\r\n    'Mortis Album',\r\n    'Mutation: body emits no heat (invisible to infrared), nails and hair become white and matte, your skin loses its color and becomes gray',\r\n    undefined,\r\n    [\r\n        'you gain 1 radiation resistance at all times',\r\n        'you no longer eat food, drink water or breathe air',\r\n        'you no longer need to sleep to rest, instead sitting still for 4 hours is enough to gain a full nights rest',\r\n        'you permanently increase perception by 1 and can see normally in darkness'\r\n    ]\r\n);\r\n\r\nexport const Ocultos = new SpellTemplate(\r\n    'Ocultos',\r\n    'Mutation: Eyes grow all over your body, at the rate of 1 per 1d12 days a new eye opens up somewhere randomly on your skin up to a maximum 33 additional eyes. The eyes are fully functional and grant the ability to gain a glipse of something of your choice, glipse closes the eye forever',\r\n    undefined,\r\n    [\r\n        'any yes or no question: 2 mana',\r\n        'any single word answer question: 3 mana',\r\n        'any single sentence answer question: 4 mana',\r\n        'any advanced question: 6 mana'\r\n    ]\r\n);\r\n\r\nexport const Biopod = new SpellTemplate(\r\n    'Biopod',\r\n    'Mutation: Nails and hair fall out and stop growing, a thin film of slick slime covers your skin, your pores turn into suckers which allow you to grab ahold of things, you gain the ability to turn your body extremely soft and elastic which allows you to squeeze through any slit at least 1 cm narrow'\r\n);\r\n\r\nexport const Xeropaga = new SpellTemplate(\r\n    'Xeropaga',\r\n    'Mutation: Your tongue permanently transforms into a viper that delivers powerful neurotoxin when it bites. The snake phases through armor as if it was air, damage absorbtion from armor or cover has no effect. Additionally the first time you strike someone you gain 1d6 mana, they lose the same amount, this affect only works once per target per 24h.',\r\n    undefined,\r\n    [\r\n        'use spell to hit their defense (standard rules) counts as full round action and you only have base level defense for the rest of the round. If you miss then no effect. No effects on robots',\r\n        'base mana: 1',\r\n        '1st round: 1d6 intelligence damage, drain 1d6 mana',\r\n        '2nd round: 1d6 perception damage',\r\n        '3rd round: 1d6 willpower damage',\r\n        'you may opt to deal no damage for no mana cost, but you still drain'\r\n    ]\r\n);\r\n\r\nexport const TwinSoul = new SpellTemplate(\r\n    'Twin Soul',\r\n    'Mutation: You have a guest inside your mind, another entity. This entity has their own mental abilities and skill set. If it is in their interest they can help you, you may use their skills or mental abilities for any check.',\r\n    'touch',\r\n    [\r\n        'Interference: This entity can always communicate with you, if it wishes to distract you you have -3 to all rolls',\r\n        'Eject entity: If (and only if) the entity is willing you may eject it, if it has nowhere to go it simply seizes to exist',\r\n        'Absorb entity: You may absorb the mind of a dying (below -100% life, but not dead) person, the person must be willing',\r\n        'Battle of wills: if you absorb a mind while already having one then the guest has a chance to force out the host, each roll 2d10+willpower, highest wins, loser is forcefully ejected.'\r\n    ]\r\n);\r\n\r\nexport const Ferral = new SpellTemplate(\r\n    'Ferral',\r\n    'Mutation: Your skin turns into a dark shade of grey like iron then grow into small scales that rust and also slowly fall out. Your nails and teeth turn into black hard steel, your hair turn into thin steel wires. You are not affected by magnetism. Your insides and blood are also black and metallic.',\r\n    undefined,\r\n    [\r\n        'You gain permanenty: 3 damage absorbtion',\r\n        'You gain permanently: 2 armor piercing and +1 damage on all unarmed attacks',\r\n        'you gain permanently: 1 strength, 1 endurance, -1 agility (min 1)',\r\n        'you gain permanently: +25% weight',\r\n        'You can increase damage absorbtion, strength and damage by 1 by eating 100 grams of pure iron, doing so costs one mana, lasts one 24 hours'\r\n    ]\r\n);\r\n\r\n\r\n\r\nexport const SpellsPerks = [MortisAlbum, Ocultos, Biopod, Xeropaga, TwinSoul, Ferral, //6\r\n\r\n    DimensionalSwap, Splinter, Unmask, UmbraConstant, MirrorTrap, DarkVortex, LuminiferousTransubstantiation, ColorBias, Rift, Conversation, HyperSight, Tesseraction,\r\n    HarshEmpathy, BrutalEmpathy, SpiritualRegeneration, Quintessence, SolarFlare, QuantumLeap //18\r\n];","import { IHooker } from '../Character';\r\n\r\nexport interface Perk extends IHooker {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    cost(): number;\r\n    description: string;\r\n    results?: string[]\r\n}\r\n\r\ninterface IPerk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    description: string;\r\n    results?: string[]\r\n}\r\nconst def: IHooker = {\r\n    amount: 0,\r\n    applyTo: ''\r\n};\r\nexport class PerkTemplate implements Perk {\r\n    name: string;\r\n    skill: string;\r\n    level: 1 | 2 | 3 | 4 | 5;\r\n    applyTo: string;\r\n    amount: number;\r\n    description: string;\r\n    results?: string[]\r\n    \r\n    cost(): number {\r\n        return this.level * 10;\r\n    }\r\n    constructor(data: IPerk, hook: IHooker = def) {\r\n        this.name = data.name;\r\n        this.skill = data.skill;\r\n        this.level = data.level;\r\n        this.description = data.description;\r\n        this.applyTo = hook.applyTo;\r\n        this.amount = hook.amount;\r\n        this.results = data.results;\r\n    }\r\n}","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Deflection = new PerkTemplate({\r\n    name: 'deflection',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 to all blocking rolls and damage reduced to 1/3rd (from 1/2nd) on successful blocks'\r\n}, {\r\n    applyTo: 'block',\r\n    amount: 1\r\n});\r\n\r\nexport const LightWeaponSpecialization = new PerkTemplate({\r\n    name: 'light weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on small melee weapons'\r\n}, {\r\n    applyTo: 'lightmelee',\r\n    amount: 1\r\n});\r\n\r\nexport const MediumWeaponSpecialization = new PerkTemplate({\r\n    name: 'medium weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on medium melee weapons'\r\n}, {\r\n    applyTo: 'mediummelee',\r\n    amount: 1\r\n});\r\n\r\nexport const LargeWeaponSpecialization = new PerkTemplate({\r\n    name: 'large weapon specialization',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 damage and +2 to hit on large melee weapons'\r\n}, {\r\n    applyTo: 'largemelee',\r\n    amount: 1\r\n});\r\n\r\nexport const MartialArts = new PerkTemplate({\r\n    name: 'martial arts',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'gain +1 to hit with all unarmed attacks and they now deal 1d4 + strength / 4 damage (not compatible with natural attacks or barbarian)'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 1\r\n});\r\n\r\nexport const MartialArtsExpert = new PerkTemplate({\r\n    name: 'martial arts expert',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'gain +2 to hit with all unarmed attacks and they now deal 1d6 + strength / 3 damage. (not compatible with natural attacks or barbarian)'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 2\r\n});\r\n\r\nexport const MartialArtsMaster = new PerkTemplate({\r\n    name: 'martial arts master',\r\n    skill: 'combat',\r\n    level: 3,\r\n    description: 'gain +3 to hit with all unarmed attacks and they now deal 1d8 + strength / 3 damage. (not compatible with natural attacks or barbarian)'\r\n}, {\r\n    applyTo: 'unarmed',\r\n    amount: 3\r\n});\r\n\r\nexport const LightningReflexes = new PerkTemplate({\r\n    name: 'lightning reflexes',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'when you are ambushed you gain +4 to your sequence, does not apply if the attacker has no sequence advantage'\r\n}, {\r\n    applyTo: 'sequence',\r\n    amount: 4,\r\n});\r\n\r\nexport const SneakAttack = new PerkTemplate({\r\n    name: 'sneak attack',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'you gain +2 to your sequence when you ambush someone and +2 damage on all attacks (both combat and firearms) against anyone with lower sequence and did not attempt to block or dodge'\r\n}, {\r\n    applyTo: 'sequence',\r\n    amount: 2\r\n});\r\n\r\nexport const Assassination = new PerkTemplate({\r\n    name: 'assassination',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'you gain +1d6 damage on all attacks (both combat and firearms) on anyone who is unable to block or dodge your attack'\r\n}, {\r\n    applyTo: '_',\r\n    amount: 0\r\n});\r\n\r\nexport const Disarm = new PerkTemplate({\r\n    name: 'disarm',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'You may as an unarmed attack remove someones weapon from their hand, if you succeed by 10 or more you may keep it in your hand'\r\n});\r\n\r\nexport const DualWeaponFighter = new PerkTemplate({\r\n    name: 'dual weapon fighter',\r\n    skill: 'combat',\r\n    level: 1,\r\n    description: 'When you use two weapons strength requirement increases are reduced by half, your off-hand gains full agility and half skill.'\r\n});\r\n\r\nexport const DualWeaponMaster = new PerkTemplate({\r\n    name: 'dual weapon master',\r\n    skill: 'combat',\r\n    level: 2,\r\n    description: 'When you use two weapons strength requirement increases are ignored. Both hands gain full skill and agility bonus.',\r\n});\r\n\r\nexport const Barbarian = new PerkTemplate({\r\n    name:'barbarian',\r\n    skill:'combat',\r\n    level: 1,\r\n    description: 'You are a brutal warrior, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block'\r\n});\r\n\r\nexport const Berzerker = new PerkTemplate({\r\n    name: 'berzerker',\r\n    skill:'combat',\r\n    level: 2,\r\n    description: 'You are a savage warrior, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block'\r\n});\r\n\r\nexport const Beast = new PerkTemplate({\r\n    name: 'beast',\r\n    skill:'combat',\r\n    level: 3,\r\n    description: 'You cause absolute wreckage, +1 damage and +2 to hit on all offensive combat rolls, -2 to defense and block'\r\n});\r\n\r\nexport const ArmorSpecialist = new PerkTemplate({\r\n    name: 'armor specialist',\r\n    skill: 'combat',\r\n    description: 'You are a specialist at using armor, armor penalty to agility is reduced by 2 and weight from armor counts as half',\r\n    level: 1\r\n});\r\n\r\nexport const ArmorMaster = new PerkTemplate({\r\n    name: 'armor master',\r\n    skill: 'combat',\r\n    description: 'You have mastered armor using, armor penalty to agility is further reduced by 2 and weight is halved again',\r\n    level: 2\r\n});\r\n\r\nexport const CombatPerks = [Deflection, LightWeaponSpecialization, MediumWeaponSpecialization, LargeWeaponSpecialization,\r\n    MartialArts, MartialArtsExpert, MartialArtsMaster, LightningReflexes, SneakAttack, Assassination, Disarm, DualWeaponFighter,\r\n    Barbarian, Berzerker, Beast, ArmorSpecialist, ArmorMaster];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const HandGunSpecialization = new PerkTemplate({\r\n    name: 'hand gun specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with single handheld guns'\r\n}, {\r\n    applyTo: 'handgun',\r\n    amount: 3\r\n});\r\n\r\nexport const RifleSpecialization = new PerkTemplate({\r\n    name: 'rifle specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with rifles'\r\n}, {\r\n    applyTo: 'rifle',\r\n    amount: 3\r\n});\r\n\r\nexport const MachineGunSpecialization = new PerkTemplate({\r\n    name: 'machine gun specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with portable and stationary machine guns'\r\n}, {\r\n    applyTo: 'machinegun',\r\n    amount: 3\r\n});\r\n\r\nexport const RocketLaunchersSpecialization = new PerkTemplate({\r\n    name: 'rocket launcher specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with rocket launchers, grenade launchers and all guns that fire explosives'\r\n}, {\r\n    applyTo: 'rocketlauncher',\r\n    amount: 3\r\n});\r\n\r\nexport const LaserSpecialization = new PerkTemplate({\r\n    name: 'laser specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with all laser based weapons'\r\n}, {\r\n    applyTo: 'lasers',\r\n    amount: 3\r\n});\r\n\r\nexport const PlasmaSpecialization = new PerkTemplate({\r\n    name: 'plasma specialization',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'gain +3 to hit with all plasma based weapons'\r\n}, {\r\n    applyTo: 'plasma',\r\n    amount: 3\r\n});\r\n\r\nexport const Sniper = new PerkTemplate({\r\n    name: 'sniper',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nexport const Marksman = new PerkTemplate({\r\n    name: 'marksman',\r\n    skill: 'firearms',\r\n    level: 2,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nexport const DeadEye = new PerkTemplate({\r\n    name: 'deadeye',\r\n    skill: 'firearms',\r\n    level: 3,\r\n    description: 'half range penalties, stacks with all other sources multiplicatively'\r\n});\r\n\r\nexport const FastShooter = new PerkTemplate({\r\n    name: 'fast shooter',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'when using semi burst or burst you hit with 1 additional bullet'\r\n});\r\n\r\nexport const Suppressor = new PerkTemplate({\r\n    name: 'suppressor',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'when you use oppressive fire on a target they take -5 to all rolls even if they dont get hit'\r\n});\r\n\r\nexport const RapidReload = new PerkTemplate({\r\n    name: 'rapid reload',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'you may reload as a move action rather than a primary action'\r\n});\r\n\r\nexport const HeavyHandle = new PerkTemplate({\r\n    name: 'heavy handle',\r\n    skill: 'firearms',\r\n    level: 1,\r\n    description: 'your strength counts as +2 higher for the purposes of meeting strength requirements on firearms'\r\n});\r\n\r\nexport const StraferShooter = new PerkTemplate({\r\n    name: 'strafer shooter',\r\n    skill: 'firearms',\r\n    level: 2,\r\n    description: 'No movement or defense penalties from burst. Oppressive fire only apply burst penalties to movement and defense.'\r\n});\r\n\r\nexport const FirearmsPerks = [HandGunSpecialization, RifleSpecialization, MachineGunSpecialization, RocketLaunchersSpecialization,\r\n    LaserSpecialization, PlasmaSpecialization, Sniper, Marksman, DeadEye, Suppressor, RapidReload, StraferShooter];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const QualifiedForCar = new PerkTemplate({\r\n    name: 'car qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all car driving rolls, is qualified to drive car'\r\n}, {\r\n    applyTo: 'drive car',\r\n    amount: 6\r\n});\r\n\r\nexport const QualifiedForBoat = new PerkTemplate({\r\n    name: 'boat qualified',\r\n    skill: 'pilot',\r\n    level: 1,\r\n    description: 'gain +6 to all boat sailing rolls, is qualified to drive boat no larger than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive boat',\r\n    amount: 6\r\n});\r\n\r\nexport const QualifiedForShip = new PerkTemplate({\r\n    name: 'ship qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all ship sailing rolls, is qualified to drive ship no smaller than 10 metric tons'\r\n}, {\r\n    applyTo: 'drive ship',\r\n    amount: 9\r\n});\r\n\r\nexport const QualifiedForSubmarine = new PerkTemplate({\r\n    name: 'submarine qualified',\r\n    skill: 'pilot',\r\n    level: 3,\r\n    description: 'gain +12 to all submarine sailing rolls, is qualified to drive a submarine'\r\n}, {\r\n    applyTo: 'drive submarine',\r\n    amount: 12\r\n});\r\n\r\nexport const QualifiedForAirplane = new PerkTemplate({\r\n    name: 'airplane qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all airplane piloting rolls, is qualified to drive an airplane'\r\n}, {\r\n    applyTo: 'pilot airplane',\r\n    amount: 9\r\n});\r\n\r\nexport const QualifiedForSpaceship = new PerkTemplate({\r\n    name: 'spaceship qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all spaceship piloting rolls, is qualified to pilot a spaceship'\r\n}, {\r\n    applyTo: 'pilot spaceship',\r\n    amount: 9\r\n});\r\n\r\nexport const QualifiedForFTL = new PerkTemplate({\r\n    name: 'FTL qualified',\r\n    skill: 'pilot',\r\n    level: 2,\r\n    description: 'gain +9 to all FTL spaceship piloting rolls, is qualified to engage hyperdrive'\r\n}, {\r\n    applyTo: 'pilot FTL',\r\n    amount: 9\r\n});\r\n\r\nexport const PilotPerks = [QualifiedForAirplane, QualifiedForBoat, QualifiedForCar, QualifiedForFTL, QualifiedForShip, QualifiedForSpaceship, QualifiedForSubmarine];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Forensics = new PerkTemplate({\r\n    name: 'forensics',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'You know how to better investigate a crime scene, you gain +3 to investigation, additionally you never find bad clues'\r\n}, {\r\n    applyTo: 'crimescene',\r\n    amount: 3\r\n});\r\n\r\nexport const Enigmas = new PerkTemplate({\r\n    name: 'enigmas',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'Mysteries, riddles, codes, clues- Your character can analyze them with +3 to investigation'\r\n}, {\r\n    applyTo: 'enigma',\r\n    amount: 3\r\n});\r\n\r\nexport const Search = new PerkTemplate({\r\n    name: 'search',\r\n    skill: 'investigation',\r\n    level: 1,\r\n    description: 'When you try to find hidden objects you gain +3 to your roll and you may always try again'\r\n}, {\r\n    applyTo: 'search',\r\n    amount: 3\r\n});\r\n\r\nexport const InvestigationPerks = [Forensics, Enigmas, Search];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Interrogator = new PerkTemplate({\r\n    name: 'interrogator',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'Your character is better able to break down a subject to the point where they no longer can without information, you gain +3 to interrogation'\r\n}, {\r\n    applyTo: 'interrogation',\r\n    amount: 3\r\n});\r\n\r\nexport const Frighten = new PerkTemplate({\r\n    name: 'frighten',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'When you roll for frighten you gain +3 to your roll and any target that is affected become fearful for as many rounds as their mental health is damaged, fearful imposes -5 to all attacking actions'\r\n}, {\r\n    applyTo: 'frighten',\r\n    amount: 0\r\n});\r\n\r\nexport const Spook = new PerkTemplate({\r\n    name: 'spook',\r\n    skill: 'intimidation',\r\n    level: 1,\r\n    description: 'Your character gains +3 when telling spooky story'\r\n}, {\r\n    applyTo: 'spook',\r\n    amount: 3\r\n});\r\n\r\nexport const IntimidationPerks = [Interrogator, Frighten, Spook];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const SlightOfHand = new PerkTemplate({\r\n    name: 'slight of hand',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all pickpocket rolls, additionally you can steal any sized item at penalty'\r\n}, {\r\n    applyTo: 'slightofhand',\r\n    amount: 3\r\n});\r\n\r\nexport const LockPick = new PerkTemplate({\r\n    name: 'lockpick',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character is well able to pick locks, +3 to all lockpicking rolls, additionally the first failed attempt never breaks a lock'\r\n}, {\r\n    applyTo: 'lockpicking',\r\n    amount: 3\r\n});\r\n\r\nexport const HideObject = new PerkTemplate({\r\n    name: 'hide object',\r\n    skill: 'larceny',\r\n    level: 1,\r\n    description: 'Your character is good at finding spots to hide objects, +5 to make object hidden'\r\n}, {\r\n    applyTo: 'hide object',\r\n    amount: 5\r\n});\r\n\r\nexport const LarcenyPerks = [SlightOfHand, LockPick, HideObject];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Shadow = new PerkTemplate({\r\n    name: 'shadow',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character gains +3 to stealth rolls when following someone while remaining hidden'\r\n}, {\r\n    applyTo: 'shadow',\r\n    amount: 3\r\n});\r\n\r\nexport const Camouflage = new PerkTemplate({\r\n    name: 'camouflage',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is able to use their surroundings to hide in plain sight, +3 to stealth while hiding'\r\n}, {\r\n    applyTo: 'camouflage',\r\n    amount: 3\r\n});\r\n\r\nexport const Detection = new PerkTemplate({\r\n    name: 'detection',\r\n    skill: 'stealth',\r\n    level: 1,\r\n    description: 'Your character is harder to hide from, you gain +3 vs shadows and hiders'\r\n}, {\r\n    applyTo: 'detection',\r\n    amount: 3\r\n});\r\n\r\nexport const StealthPerks = [Shadow, Camouflage, Detection];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const HunterGatherer = new PerkTemplate({\r\n    name: 'Hunter gatherer',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'Your character is better at foraging for food, gain +5 to foraging rolls, you only take half penalties to unfamiliar biome and harsh biome'\r\n}, {\r\n    applyTo: 'forage',\r\n    amount: 5\r\n});\r\n\r\nexport const ShelterBuilder = new PerkTemplate({\r\n    name: 'shelter builder',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'your character can build shelters that offer protection against exposure, +5 to build shelter roll and only suffer half penalty for building shelter for multiple people. Your shelters require only 10 minutes of maintenance'\r\n}, {\r\n    applyTo: 'shelter',\r\n    amount: 5\r\n});\r\n\r\nexport const HardenedSurvivalist = new PerkTemplate({\r\n    name: 'hardened survivalist',\r\n    skill: 'survival',\r\n    level: 1,\r\n    description: 'You are resillient to the environment and ignore two factors that reduce sleep quality, when you sleep in a shelter it counts as 1 higher quality for you. You gain 1 maximum mental health.'\r\n},\r\n{\r\n    applyTo: 'mentalHealth',\r\n    amount: 1\r\n});\r\n\r\nexport const SurvivalPerks = [HunterGatherer, ShelterBuilder, HardenedSurvivalist];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Hacking = new PerkTemplate({\r\n    name: 'hacking',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can hack into computer systems, gain +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 5\r\n});\r\n\r\nexport const AdvancedHacking = new PerkTemplate({\r\n    name: 'advanced hacking',\r\n    skill: 'computer',\r\n    level: 2,\r\n    description: 'Your character is an advanced hacker, gain extra +3 vs software protection'\r\n}, {\r\n    applyTo: 'hacking',\r\n    amount: 5\r\n});\r\n\r\nexport const Programmer = new PerkTemplate({\r\n    name: 'programmer',\r\n    skill: 'computer',\r\n    level: 1,\r\n    description: 'Your character can write software, gain +3 to craft software rolls, crafting software time is reduced to 50%'\r\n}, {\r\n    applyTo: 'craft software',\r\n    amount: 3\r\n});\r\n\r\nexport const SeniorDeveloper = new PerkTemplate({\r\n    name: 'Senior Developer',\r\n    skill: 'computer',\r\n    level: 2,\r\n    description: 'Your character is a senior developer, you gain +3 to craft software and crafting software time is reduced to 33%'\r\n}, {\r\n    applyTo: 'craft software',\r\n    amount: 3\r\n});\r\n\r\n\r\nexport const ComputerPerks = [Hacking, AdvancedHacking, Programmer];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Healer = new PerkTemplate({\r\n    name: 'healer',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character knows how to clean wounds and apply bandages, gains +3 to first aid rolls and heal +1 life when successfully stopping bleeding or performing surgery'\r\n}, {\r\n    applyTo: 'healing',\r\n    amount: 3\r\n});\r\n\r\nexport const MedicineExpert = new PerkTemplate({\r\n    name: 'medicine expert',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character knows which medicines are best for which situation and how to dose them, +3 to all drug and medicines related rolls, immediately heal +1 life when applying stempack'\r\n}, {\r\n    applyTo: 'medicines',\r\n    amount: 3\r\n});\r\n\r\nexport const Surgeon = new PerkTemplate({\r\n    name: 'surgeon',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your gain +3 when performing surgeries and failed surgeries deal half damage, successful surgeries immediately heal +1 life'\r\n}, {\r\n    applyTo: 'suregon',\r\n    amount: 3\r\n});\r\n\r\nexport const Psychiatrist = new PerkTemplate({\r\n    name: 'psychiatrist',\r\n    skill: 'medicine',\r\n    level: 1,\r\n    description: 'Your character can perform psychiatric diagnostics and treatment, gain +3 to therapy as well'\r\n}, {\r\n    applyTo: 'psychiatry',\r\n    amount: 3\r\n});\r\n\r\nexport const MedicinePerks = [Healer, MedicineExpert, Surgeon, Psychiatrist];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Mentalist = new PerkTemplate({\r\n    name: 'mentalist',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'You are highly skilled at reading the facial expressions and body language of a person, you can attempt to understand them just by looking at them and gain a +3 to do so.'\r\n}, {\r\n    applyTo: 'detectmotives',\r\n    amount: 3\r\n});\r\n\r\nexport const EmpathicListener = new PerkTemplate({\r\n    name: 'empathic listener',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'You are easy to talk to and listen well to others. People are more likely to trust you and when you speak to someone you always gain some true information even if the target is being deliberately secretive.',\r\n})\r\n\r\nexport const LieDetector = new PerkTemplate({\r\n    name: 'Lie detector',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'Your character is harder to lie to and can pick up on small signs that someone is not truthful, you gain +3 vs lies and can always tell if someone is a constant liar.'\r\n}, {\r\n    applyTo: 'detectlies',\r\n    amount: 3\r\n});\r\n\r\nexport const ExpertTeamwork = new PerkTemplate({\r\n    name: 'expert teamwork',\r\n    skill: 'empathy',\r\n    level: 1,\r\n    description: 'When you and up to 5 other work together everyone benefits from the highest skill rank from the team. Whether only one or all are actually doing the task, they are all occupied for the duration of the task.'\r\n});\r\n\r\nexport const EmpathyPerks = [Mentalist, LieDetector, EmpathicListener, ExpertTeamwork];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const HideEmotion = new PerkTemplate({\r\n    name: 'hide emotion',\r\n    skill: 'subtrefuge',\r\n    level: 1,\r\n    description: 'Your character is harder to read than most, gain +5 vs having your personality or motives detected'\r\n}, {\r\n    applyTo: 'emotions',\r\n    amount: 5\r\n});\r\n\r\nexport const Deception = new PerkTemplate({\r\n    name: 'deception',\r\n    skill: 'subtrefuge',\r\n    level: 1,\r\n    description: 'Your character is a skilled liar, gain +4 vs having your lies spotted'\r\n}, {\r\n    applyTo: 'lies',\r\n    amount: 4\r\n});\r\n\r\nexport const SubtreFugePerks = [HideEmotion, Deception];","import { PerkTemplate } from \"../general/Perks\";\r\nconst skill = 'athletics';\r\nexport const Climber = new PerkTemplate({\r\n    name: 'climber',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at climing, gain +5 to climbing rolls'\r\n}, {\r\n    applyTo: 'climb',\r\n    amount: 5\r\n});\r\n\r\nexport const Runner = new PerkTemplate({\r\n    name: 'runner',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at running, gain +5 to running'\r\n}, {\r\n    applyTo: 'run',\r\n    amount: 5\r\n});\r\n\r\nexport const Jumper = new PerkTemplate({\r\n    name: 'jumper',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at jumping, gain +5 to jumping rolls'\r\n}, {\r\n    applyTo: 'jump',\r\n    amount: 5\r\n});\r\n\r\nexport const Swimmer = new PerkTemplate({\r\n    name: 'swimmer',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character is better at swimming, gain +5 to swimming rolls'\r\n}, {\r\n    applyTo: 'jump',\r\n    amount: 5\r\n});\r\n\r\nexport const DeepLungs = new PerkTemplate({\r\n    name: 'deep lungs',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You have trained your body to hold your breath for longer, +5 to holding breath'\r\n}, {\r\n    applyTo: 'breath',\r\n    amount: 5\r\n});\r\n\r\nexport const FastSwimmer = new PerkTemplate({\r\n    name:'fast swimmer',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'When you roll to swim at 100% speed you instead swim at 150%'\r\n});\r\n\r\nexport const GoodFortitude = new PerkTemplate({\r\n    name: 'good fortitude',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your character has great fortitude, gain +2 hitpoints'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 2\r\n});\r\n\r\nexport const GreatFortitude = new PerkTemplate({\r\n    name: 'great fortitude',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'Your character has great fortitude, gain +4 hitpoints'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 4\r\n});\r\n\r\nexport const SupremeFortitude = new PerkTemplate({\r\n    name: 'great fortitude',\r\n    skill: skill,\r\n    level: 3,\r\n    description: 'Your character has supreme fortitude, gain +6 hitpoints'\r\n}, {\r\n    applyTo: 'life',\r\n    amount: 6\r\n});\r\n\r\nexport const StrongBack = new PerkTemplate({\r\n    name: 'strong back',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'Your strength counts as +3 for the purposes of carrying capacity'\r\n}, {\r\n    applyTo: 'carryingCapacity',\r\n    amount: 3\r\n});\r\n\r\nexport const Fast = new PerkTemplate({\r\n    name: 'Fast',\r\n    skill: skill,\r\n    level: 1,\r\n    description: 'You are a trained runner, gain +1 base speed and +3 to all running rolls'\r\n}, {\r\n    applyTo: 'speed',\r\n    amount: 1\r\n});\r\n\r\nexport const HighMobility = new PerkTemplate({\r\n    name: 'High mobility',\r\n    skill: skill,\r\n    level: 2,\r\n    description: 'You are highly mobile, gain +1 base speed and can enter sprint in a single round.'\r\n}, {\r\n    amount: 1,\r\n    applyTo: 'speed'\r\n});\r\n\r\nexport const Marathoner = new PerkTemplate({\r\n    name: 'Marathoner',\r\n    skill:skill,\r\n    level: 1,\r\n    description: 'Gain +10 on running, ignore one level of carry capacity or exhaustion'\r\n});\r\n\r\nexport const AthleticsPerks = [Climber, Runner, Swimmer, Jumper, DeepLungs, GoodFortitude, GreatFortitude, SupremeFortitude,StrongBack, Fast, HighMobility, Marathoner];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Balance = new PerkTemplate({\r\n    name: 'balance',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has excellent balance, gain +5 to balancing rolls'\r\n}, {\r\n    applyTo: 'balance',\r\n    amount: 5\r\n});\r\n\r\nexport const Throwing = new PerkTemplate({\r\n    name: 'throwing',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character has excellent aim while throwing, gain +5 to all throw rolls, including thrown weapons and explosives'\r\n}, {\r\n    applyTo: 'throw',\r\n    amount: 5\r\n});\r\n\r\nexport const Dodger = new PerkTemplate({\r\n    name: 'dodger',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is a faster dodger, gain +3 to all dodge rolls and passive dodging, when active dodging only 1 attack can hit you, the rest automatically fail'\r\n}, {\r\n    applyTo: 'defense',\r\n    amount: 3\r\n});\r\n\r\nexport const Tumbler = new PerkTemplate({\r\n    name: 'tumbler',\r\n    skill: 'acrobatics',\r\n    level: 1,\r\n    description: 'Your character is an avid tumbler, gain +5 to all tumbling rolls'\r\n}, {\r\n    applyTo: 'tumble',\r\n    amount: 5\r\n});\r\n\r\nexport const AcrobaticsPerks = [Balance, Throwing, Dodger, Tumbler];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const ArtOfDeal = new PerkTemplate({\r\n    name: 'the art of the deal',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is a strong negotiator when it comes to making a deal, +5 to persuation rolls when making deal'\r\n}, {\r\n    applyTo: 'deal',\r\n    amount: 5\r\n});\r\n\r\nexport const MotivationalSpeaker = new PerkTemplate({\r\n    name: 'motivational speaker',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is an adept motivational speaker, you gain +3 to persuation when rolling for motivational speech'\r\n}, {\r\n    applyTo: 'motivationalspeaker',\r\n    amount: 3\r\n});\r\n\r\nexport const InspireCourage = new PerkTemplate({\r\n    name: 'inspire courage',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'your character can inspire courage, speak for 1 minute and roll persuation vs 25, if you succeed they are temporarily immune to mental health damage and penalties (1 hour)'\r\n}, {\r\n    applyTo: 'inspirecourage',\r\n    amount: 0\r\n});\r\n\r\nexport const PeaceMaker = new PerkTemplate({\r\n    name: 'peace maker',\r\n    skill: 'persuation',\r\n    level: 1,\r\n    description: 'Your character is known for talking down hostiles and coming to a non-violent outcome, gain +5 when attempting to talk down a hostile'\r\n}, {\r\n    applyTo: 'peacemaker',\r\n    amount: 5\r\n});\r\n\r\nexport const PersuationPerks = [ArtOfDeal, MotivationalSpeaker, InspireCourage, PeaceMaker];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const CriminalTrader = new PerkTemplate({\r\n    name: 'criminal trader',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +3 to all fencing rolls, +3 to all black market rolls involving'\r\n}, {\r\n    applyTo: 'fencing',\r\n    amount: 3\r\n});\r\n\r\nexport const Gangster = new PerkTemplate({\r\n    name: 'gangster',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character is well experienced with gangs both from the inside and outside, gain +3 to all gang rolls, local culture and you may start out as a gang member'\r\n});\r\n\r\nexport const Gossiper = new PerkTemplate({\r\n    name: 'gossiper',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all gossip roles and using the skill does not block other activities.'\r\n});\r\n\r\nexport const LocalSlang = new PerkTemplate({\r\n    name: 'local slang',\r\n    skill: 'streetwise',\r\n    level: 1,\r\n    description: 'Pick one location, you know the slang of that location and gain +5 to all streetwise rolls there'\r\n});\r\n\r\n\r\nexport const StreetwisePerks = [CriminalTrader, Gangster, Gossiper, LocalSlang];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Physicist = new PerkTemplate({\r\n    name: 'phycisist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied physics, gain +3 to all physics science rolls'\r\n});\r\n\r\nexport const AdvancedPhysicist = new PerkTemplate({\r\n    name: 'phycisist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied physics a lot, gain +3 to all physics science rolls'\r\n});\r\n\r\nexport const Chemist = new PerkTemplate({\r\n    name: 'chemist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied chemistry, gain +3 to all chemistry science rolls'\r\n});\r\n\r\nexport const AdvancedChemist = new PerkTemplate({\r\n    name: 'chemist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied chemistry a lot, gain +3 to all chemistry science rolls'\r\n});\r\n\r\nexport const Biologist = new PerkTemplate({\r\n    name: 'biologist',\r\n    skill: 'science',\r\n    level: 1,\r\n    description: 'Youve studied biology, gain +3 to all biology science rolls'\r\n});\r\n\r\nexport const AdvancedBiologist = new PerkTemplate({\r\n    name: 'biologist',\r\n    skill: 'science',\r\n    level: 2,\r\n    description: 'Youve studied biology a lot, gain +3 to all biology science rolls'\r\n});\r\n\r\nexport const SciencePerks = [Physicist, Chemist, Biologist, AdvancedBiologist, AdvancedChemist, AdvancedPhysicist];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Aristocrat = new PerkTemplate({\r\n    name: 'aristocrat',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all high society related savoir-faire rolls'\r\n}, {\r\n    applyTo: 'highsociety',\r\n    amount: 5\r\n});\r\n\r\nexport const Enforcer = new PerkTemplate({\r\n    name: 'enforcer',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all law enforcement related savoir-faire rolls'\r\n}, {\r\n    applyTo: 'enforcer',\r\n    amount: 5\r\n});\r\n\r\nexport const Lawyer = new PerkTemplate({\r\n    name: 'lawyer',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all legal attourney related savoir-faire rolls'\r\n}, {\r\n    applyTo: 'lawyer',\r\n    amount: 5\r\n});\r\n\r\nexport const Soldier = new PerkTemplate({\r\n    name: 'soldier',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all military related savoir-faire rolls'\r\n}, {\r\n    applyTo: 'soldier',\r\n    amount: 5\r\n});\r\n\r\nexport const Academic = new PerkTemplate({\r\n    name: 'academic',\r\n    skill: 'savoir-faire',\r\n    level: 1,\r\n    description: 'Your character gains +5 to all academic related savoir-faire rolls'\r\n}, {\r\n    applyTo: 'academic',\r\n    amount: 5\r\n});\r\n\r\nexport const SavoirFairePerks = [Aristocrat, Enforcer, Lawyer, Soldier, Academic];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Chef = new PerkTemplate({\r\n    name: 'Chef',\r\n    skill: 'cooking',\r\n    level: 1,\r\n    description: 'You are a professional chef, time taken to cook is reduced to 75% and you gain +3 to cooking rolls'\r\n}, {\r\n    applyTo: '',\r\n    amount: 0\r\n});\r\n\r\nexport const GourmetChef = new PerkTemplate({\r\n    name: 'Gourmet Chef',\r\n    skill: 'cooking',\r\n    level: 2,\r\n    description: 'You are a gourmet chef, you gain +3 to all cooking rolls and take no penalty for the first 5 extra meals you prepare'\r\n}, {\r\n    applyTo: 'cooking',\r\n    amount: 3\r\n});\r\n\r\nexport const Scrambler = new PerkTemplate({\r\n    name: 'Scrambler',\r\n    skill: 'cooking',\r\n    level: 1,\r\n    description: 'You are used to working with inadequate tools and ingredients, ignore all penalties from tools and half penalties from low quality ingredients. When you speed cook you only take -5 to penalty'\r\n}, {\r\n    applyTo: '',\r\n    amount: 0\r\n});\r\n\r\nexport const CookingPerks = [Chef, GourmetChef, Scrambler];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Electrician = new PerkTemplate({\r\n    name: 'electrician',\r\n    skill: 'electronics',\r\n    level: 1,\r\n    description: 'WIP'\r\n});\r\n\r\nexport const ElectronicsPerks = [Electrician];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const BombMaker = new PerkTemplate({\r\n    name: 'bombmaker',\r\n    skill: 'explosives',\r\n    level: 1,\r\n    description: 'You know how to make home made bombs, +3 to making bombs'\r\n});\r\n\r\nexport const ExplosivesPerks = [BombMaker];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const Trivia = new PerkTemplate({\r\n    name: 'trivia',\r\n    skill: 'general knowledge',\r\n    level: 1,\r\n    description: 'You can remember useless but interesting trivia, roll a general knowledge + intelligence vs 15 to raise everyones spirits.'\r\n});\r\n\r\nexport const CommonSense = new PerkTemplate({\r\n    name: 'common sense',\r\n    skill: 'general knowledge',\r\n    level: 1,\r\n    description: 'Once per session when youre about to do something catastrophically stupid the game master will tell you the likely outcome and give a better alternative.' \r\n})\r\n\r\nexport const GeneralKnowledgePerks = [Trivia, CommonSense];","import { PerkTemplate } from \"../general/Perks\";\r\n\r\nexport const VehicleMechanic = new PerkTemplate({\r\n    name: 'Vehicle Mechanic',\r\n    skill: 'mechanics',\r\n    level: 1,\r\n    description: 'Pick one vehicle type (bike, car, boat, ship, spaceship, airplane, spaceplane, ftl), you gain +5 to mechanics roll on that. '\r\n});\r\n\r\nexport const MechanicsPerks = [VehicleMechanic];","import { Perk } from './Perks';\r\nimport { CombatPerks } from '../perks/Combat';\r\nimport { FirearmsPerks } from '../perks/Firearms';\r\nimport { PilotPerks } from '../perks/Pilot';\r\nimport { SpellsPerks } from '../perks/Spells';\r\nimport { InvestigationPerks } from '../perks/Investigation';\r\nimport { IntimidationPerks } from '../perks/Intimidation';\r\nimport { LarcenyPerks } from '../perks/Larceny';\r\nimport { StealthPerks } from '../perks/Stealth';\r\nimport { SurvivalPerks } from '../perks/Survival';\r\nimport { ComputerPerks } from '../perks/Computer';\r\nimport { MedicinePerks } from '../perks/Medicine';\r\nimport { EmpathyPerks } from '../perks/Empathy';\r\nimport { SubtreFugePerks } from '../perks/Subtrefuge';\r\nimport { AthleticsPerks } from '../perks/Athletics';\r\nimport { AcrobaticsPerks } from '../perks/Acrobatics';\r\nimport { PersuationPerks } from '../perks/Persuation';\r\nimport { StreetwisePerks } from '../perks/Streetwise';\r\nimport { SciencePerks } from '../perks/Science';\r\nimport { SavoirFairePerks } from '../perks/SavoirFaire';\r\nimport { CookingPerks } from '../perks/Cooking';\r\nimport { ElectronicsPerks } from '../perks/Electronics';\r\nimport { ExplosivesPerks } from '../perks/Explosives';\r\nimport { GeneralKnowledgePerks } from '../perks/GeneralKnowledge';\r\nimport { MechanicsPerks } from '../perks/Mechanics';\r\n\r\nexport const GetPerkList = (): Perk[] => {\r\n    return [\r\n        ...CombatPerks,\r\n        ...CookingPerks,\r\n        ...ComputerPerks,\r\n        ...FirearmsPerks,\r\n        ...PilotPerks,\r\n        ...SpellsPerks,\r\n        ...InvestigationPerks,\r\n        ...IntimidationPerks,\r\n        ...LarcenyPerks,\r\n        ...StealthPerks,\r\n        ...SurvivalPerks,\r\n        ...MedicinePerks,\r\n        ...EmpathyPerks,\r\n        ...ElectronicsPerks,\r\n        ...ExplosivesPerks,\r\n        ...GeneralKnowledgePerks,\r\n        ...MechanicsPerks,\r\n        ...SubtreFugePerks,\r\n        ...AthleticsPerks,\r\n        ...AcrobaticsPerks,\r\n        ...PersuationPerks,\r\n        ...StreetwisePerks,\r\n        ...SciencePerks,\r\n        ...SavoirFairePerks,\r\n    ].sort(sortPerk);\r\n}\r\n\r\nconst sortPerk = (prevPerk: Perk, nextPerk: Perk) => {\r\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\r\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\r\n};","import { Character, CharacterSize } from \"../Character\";\r\nimport { Perk } from \"./Perks\";\r\nimport { Trait } from \"../traits/Traits\";\r\n\r\nexport interface dispatcher {\r\n    action: string;\r\n    name?: string;\r\n    value: number;\r\n    perkToAdd?: Perk;\r\n    traitToAdd?: Trait;\r\n}\r\n\r\nconst getSizeFromString = (str:string|undefined):CharacterSize => {\r\n    switch (str) {\r\n        case 'huge': return 'huge';\r\n        case 'large': return 'large';\r\n        case 'small': return 'small';\r\n        case 'tiny': return 'tiny';\r\n        default: return 'medium';\r\n    }\r\n};\r\n\r\nexport const useCharacter = (state: Character, action: dispatcher): Character => {\r\n    switch (action.action) {\r\n        case 'strength': return new Character({ ...state, strength: action.value });\r\n        case 'agility': return new Character({ ...state, agility: action.value });\r\n        case 'endurance': return new Character({ ...state, endurance: action.value });\r\n        case 'willpower': return new Character({ ...state, willpower: action.value });\r\n        case 'perception': return new Character({ ...state, perception: action.value });\r\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\r\n        case 'age': return new Character({ ...state, age: action.value });\r\n        case 'skill':\r\n            let r = new Character({\r\n                ...state\r\n            });\r\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\r\n            return r;\r\n        case 'name': return new Character({ ...state, name: action.name || '' });\r\n        case 'species': return new Character({ ...state, species: action.name || '' });\r\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\r\n        case 'background': return new Character({ ...state, background: action.name || '' });\r\n        case 'size':\r\n            return new Character({...state, size: getSizeFromString(action.name)});\r\n    }\r\n    if (action.action === 'addperk') {\r\n        if (action.perkToAdd !== undefined)\r\n            return new Character({ ...state, perks: [...state.perks, action.perkToAdd] });\r\n    }\r\n    else if (action.action === 'removeperk') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.perkToAdd !== undefined) {\r\n            let pta = action.perkToAdd;\r\n            r.perks = r.perks.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    else if (action.action === 'addtrait') {\r\n        if (action.traitToAdd !== undefined)\r\n            return new Character({ ...state, traits: [...state.traits, action.traitToAdd] });\r\n    }\r\n\r\n    else if (action.action === 'removetrait') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.traitToAdd !== undefined) {\r\n            let pta = action.traitToAdd;\r\n            r.traits = r.traits.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n    return state;\r\n}","import React, { useReducer, useState } from 'react';\r\nimport { Character } from '../components/Character';\r\nimport { GetTraits } from '../components/traits/Traits';\r\nimport { GetPerkList } from '../components/general/GetPerkList';\r\nimport { useCharacter } from '../components/general/useCharacter';\r\n\r\nimport './charactersheet.css';\r\nimport EditText, { HideText } from '../components/general/HideText';\r\nimport { Skill } from '../components/general/Skills';\r\n\r\ninterface CharacterSheetProps {\r\n    initialCharacter: Character;\r\n    characterCallback: (c: Character) => void;\r\n}\r\nconst padSize = 33;\r\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\r\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\r\n    const [viewState, setViewState] = useState<\"edit\" | \"print\" | \"explain\" | \"hide\">(\"edit\");\r\n    const [viewTraitList, setViewTraitList] = useState(false);\r\n    const [viewPerkList, setViewPerkList] = useState(false);\r\n\r\n    return (<div className=\"characterSheet\">\r\n        {viewState !== \"edit\" ?\r\n            <button className='no-print' onClick={() => setViewState(\"edit\")}>edit</button>\r\n            :\r\n            <button className='no-print' onClick={() => setViewState(\"explain\")}>explain</button>}\r\n        {/* page 1 */}\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colSpan={3}><h4>Infinite Darkness</h4></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <label>Name</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.name} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'name', value: 0 })} explain={character.explain('name')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Life</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getLife()} isEdit={viewState} explain={character.explain('life')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Strength</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.strength} isEdit={viewState} onChange={(str) => dispatch({ action: 'strength', value: parseInt(str) })} explain={character.explain('strength')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Gender</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.gender} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'gender', value: 0 })} explain={character.explain('gender')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Mental Health</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getMentalHealth()} isEdit={viewState} explain={character.explain('mentalHealth')} /> </td>\r\n                    <td>\r\n                        <label>Endurance</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.endurance} isEdit={viewState} onChange={(str) => dispatch({ action: 'endurance', value: parseInt(str) })} explain={character.explain('endurance')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Species</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.species} isEdit={viewState} onChange={(str) => dispatch({ name: str, action: 'species', value: 0 })} explain={character.explain('species')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Sequence</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getSequence()} isEdit={viewState} explain={character.explain('sequence')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Agility</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.agility} isEdit={viewState} onChange={(str) => dispatch({ action: 'agility', value: parseInt(str) })} explain={character.explain('agility')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Age</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.age} isEdit={viewState} onChange={(str) => dispatch({ action: 'age', value: parseInt(str) })} explain={character.explain('age')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Damage absorption</label>\r\n                    </td>\r\n                    <td>\r\n\r\n                    </td>\r\n                    <td>\r\n                        <label>Perception</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.perception} isEdit={viewState} onChange={(str) => dispatch({ action: 'perception', value: parseInt(str) })} explain={character.explain('perception')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Character points</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getCalculatedPointsLeft()} explain={character.explain('pointsLeft')} isEdit={viewState} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Defense</label>\r\n                    </td>\r\n                    <td>\r\n                        <SmallLabel>\r\n                            <HideText txt={character.getBaseDefense()} explain={character.explain('basedefense')} isEdit={viewState} />\r\n                        </SmallLabel>\r\n                        /\r\n                        <SmallLabel>\r\n                            <HideText txt={character.getLowDefense()} explain={character.explain('lowdefense')} isEdit={viewState} />\r\n                        </SmallLabel>\r\n                        /\r\n                        <SmallLabel>\r\n                            <HideText txt={character.getPassiveDefense()} explain={character.explain('passivedefense')} isEdit={viewState} />\r\n                        </SmallLabel>\r\n                    </td>\r\n                    <td>\r\n                        <label>Intelligence</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.intelligence} isEdit={viewState} onChange={(str) => dispatch({ action: 'intelligence', value: parseInt(str) })} explain={character.explain('intelligence')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        <label>Experience multiplier</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText txt={character.getExperienceMultiplier()} isEdit={viewState} explain={character.explain('experienceMultiplier')} />\r\n                    </td>\r\n                    <td>\r\n                        <label>Carrying capacity</label>\r\n                    </td>\r\n                    <td>\r\n                        <HideText isEdit={viewState} txt={character.getBaseCarryingCapacity().toString()} explain={character.explain('carryingCapacity')}/>\r\n                    </td>\r\n                    <td>\r\n                        <label>Willpower</label>\r\n                    </td>\r\n                    <td>\r\n                        <EditText txt={character.willpower} isEdit={viewState} onChange={(str) => dispatch({ action: 'willpower', value: parseInt(str) })} explain={character.explain('willpower')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td><label>Player</label></td><td>&nbsp;</td>\r\n                    <td><label>Speed</label></td><td>\r\n                    <HideText isEdit={viewState} txt={character.getBaseSpeed().toString()} explain={character.explain('speed')}/>\r\n                        </td>\r\n                    <td><label>Size</label></td><td>\r\n                        <EditText txt={character.size} isEdit={viewState} onChange={(size) => dispatch({action:'size', value: 0, name: size}) } explain={character.explain('size')} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}>\r\n                        Background\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        Apperance traits\r\n                    </td>\r\n                    <td colSpan={2}>\r\n                        Personality traits\r\n                    </td>\r\n                </tr>\r\n                {Pad(5, 0).map(i =>\r\n                    <tr>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                        <td colSpan={2}> &nbsp;</td>\r\n                    </tr>\r\n                )}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Skills</h5>\r\n                        <table className=\"skillTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Skill</th>\r\n                                    <th>Exp</th>\r\n                                    <th>Rank</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {character.skills.map(skill => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            <label>{skill.name}</label>\r\n                                        </td>\r\n                                        <td></td>\r\n                                        <td>\r\n                                            <EditText txt={skill.level} isEdit={viewState} onChange={(str) => dispatch({ action: 'skill', name: skill.name, value: parseInt(str) })} explain={character.explain('skill:' + skill.name)} />\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(padSize, character.skills.length).map(i => {\r\n                                    return <tr>\r\n                                        <td > <label> &nbsp;</label></td>\r\n                                        <td> </td>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Perks {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewPerkList(!viewPerkList)}>Add Perk</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewPerkList ? GetPerkList().map(perk => {\r\n                                    const skillRanks: Skill | undefined = character.skills.find(s => s.name === perk.skill);\r\n                                    if (skillRanks === undefined || skillRanks.level < perk.level * 3 + 3)\r\n                                        return null;\r\n                                    if (character.perks.find(p => p.name === perk.name)) return null;\r\n\r\n                                    return <tr className='no-print'>\r\n                                        <td>\r\n                                            <button onClick={() => dispatch({ action: 'addperk', name: perk.name, value: 0, perkToAdd: perk })}>{perk.name}</button> ({perk.level}) {perk.description}\r\n                                        </td>\r\n                                    </tr>\r\n                                }) : null}\r\n                                {character.perks.map(perk => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            {perk.name}\r\n                                            <button onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewPerkList ? 0 : padSize + 1, character.perks.length).map(i => {\r\n                                    return <tr>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                    <td style={{ border: 'none' }} colSpan={2}>\r\n                        <h5>Traits {(viewState === \"edit\") ? <button className='no-print' onClick={() => setViewTraitList(!viewTraitList)}>Add Trait</button> : null}</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {viewTraitList ? GetTraits().map(trait => {\r\n                                    return <tr className='no-print'>\r\n                                        <td>\r\n                                            <button onClick={() => dispatch({ action: 'addtrait', name: trait.name, value: 0, traitToAdd: trait })}>{trait.name}</button> {trait.description}\r\n                                        </td>\r\n                                    </tr>\r\n                                }) : null}\r\n                                {character.traits.map(trait => {\r\n                                    return <tr>\r\n                                        <td>\r\n                                            {trait.name}\r\n                                            <button onClick={() => dispatch({ action: 'removetrait', name: trait.name, value: 0, traitToAdd: trait })}>x</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                                {Pad(viewTraitList ? 0 : padSize - 26, character.traits.length).map(i => {\r\n                                    return <tr>\r\n                                        <td> </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                        <h5 style={{ marginTop: '20px' }}>Reputation</h5>\r\n                        <table>\r\n                            <tbody>\r\n                                {Pad(padSize - 8, 0).map(i => <tr>\r\n                                    <td> </td>\r\n                                </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                {/* page 2 */}\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={6}>\r\n                        <table className='lifeboxes'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th colSpan={80}>Life</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    {Pad(80, 0).map(i => <td> &nbsp;</td>)}\r\n                                </tr>\r\n                                <tr>\r\n                                    {Pad(80, 0).map(i => <td> &nbsp;</td>)}\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <table className='statboxes'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Mental health</th>\r\n                                    <th>Mana</th>\r\n                                    <th>Carry/Exhaustion</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        {Pad(28,0).map(i=><span className='mentalHealthBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Pad(80,0).map(i=><span className='manaBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Pad(8,0).map(i=><span className='exhaustionBoxes'>&nbsp;</span>)}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={3}>\r\n                        <h4>Equipment</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td style={{ border: 'none' }} colSpan={6}>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        Weapon\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        HB\r\n                                    </th>\r\n                                    <th className='smalltd'>\r\n                                        AP\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Damage\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Ammo\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Pad(7, 0).map(i =>\r\n                                    <tr>\r\n                                        <td className='bigtd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='bigtd'>\r\n                                        Item\r\n                                    </th>\r\n                                    <th className='smalltd3'>\r\n                                        Skill\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Bonus\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Weight\r\n                                    </th>\r\n                                    <th className='smalltd2'>\r\n                                        Value\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Pad(19, 0).map(i =>\r\n                                    <tr>\r\n                                        <td className='bigtd'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd3'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                        <td className='smalltd2'>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td colSpan={3}>\r\n                        <h4>Stash</h4>\r\n                    </td>\r\n                    <td colSpan={3} style={{ verticalAlign: 'bottom' }} >\r\n                        <b>Credits:</b>\r\n                    </td>\r\n                </tr>\r\n\r\n                {Pad(12, 0).map(i =>\r\n                    <tr>\r\n                        <td colSpan={6}> </td>\r\n                    </tr>)}\r\n\r\n            </tbody>\r\n        </table></div>);\r\n}\r\n\r\n\r\nconst Pad = (minSize: number, size: number) => {\r\n    const i = Math.max(minSize - size, 0);\r\n    let ar = new Array<number>();\r\n    for (let counter = 0; counter < i; counter++) {\r\n        ar.push(counter);\r\n    }\r\n    return ar;\r\n}\r\n\r\nconst SmallLabel: React.FC = ({ children }) => {\r\n    return <span className='smallLabel'>{children}</span>\r\n}","import React, { useState, lazy } from 'react';\r\nimport './App.css';\r\nimport { Character } from './components/Character';\r\nimport { DialogTitle } from '@material-ui/core';\r\nimport { CharacterSheet } from './views/CharacterSheet';\r\nimport usePersistentState from './utils/usePersistentState';\r\nimport Conditional from './utils/Conditional';\r\nconst Battleview = lazy(() => import('./views/Battleview'));\r\nconst SkillPerkManual = lazy(() => import('./views/SkillPerkManual'));\r\nconst GameMaster = lazy(() => import('./views/GameMaster'));\r\nconst WorldAndLore = lazy(() => import('./views/WorldAndLore'));\r\nconst PlayerManual = lazy(() => import('./views/PlayerManual'));\r\n\r\nconst App: React.FC = () => {\r\n  const main = 'main';\r\n  const [viewMode, setViewMode] = usePersistentState<string>(main, main);\r\n  const [character, setCharacter] = useState(new Character());\r\n  const characterSheet = 'Character Sheet';\r\n  const playerManual = 'Player Manual';\r\n  const gameMaster = 'Game Master';\r\n  const worldAndLore = 'World & Lore';\r\n  const skillsAndPerks = 'Skills & Perks';\r\n  const battleView = 'Battleview';\r\n  let options = [main,\r\n    characterSheet,\r\n    playerManual,\r\n    gameMaster,\r\n    worldAndLore,\r\n    skillsAndPerks,\r\n    battleView\r\n  ];\r\n  const parseMenu = (choice: string) => setViewMode(choice);\r\n\r\n  return (\r\n    <>\r\n      <Menu callback={(option) => parseMenu(option)} options={options} current={viewMode} />\r\n      <div className=\"page\">\r\n\r\n        <Conditional shouldView={viewMode === main}>\r\n          <DialogTitle>Infinite Darkness</DialogTitle>\r\n          <p>This webpage is a resource for both players and game masters to run a tabletop game of Infinite Darkness.</p>\r\n          <p>Infinite Darkness is a sci-fi roleplaying game set in a future where humanity has begun to take to the stars, aliens and humans co exist.</p>\r\n          <p>With the discovery of faster than light travel- the ability to visit distant stars became a possibility. But space is still vast beyond imagining, the time it takes to travel is still long.\r\n          Due to the limitations of telescopes most stars in the local neighborhood are still mostly uncharted, very little is known of each system beyond the classification of the star and occationally limited information of a planet.\r\n          </p>\r\n          <p>No body knows what lurks out there and if you can't take a little bloody nose then perhaps you ought to go home and crawl under you bed. It's not safe out there, it's wonderous with treasures to satiete desires both subtle and gross. But it's not for the timid</p>\r\n          <hr />\r\n          <p>This page uses session storage (similar to cookies) click <span style={{ textDecoration: 'underline', color: 'red', cursor: 'pointer' }} onClick={() => sessionStorage.clear()}>here</span> to purge session manually.</p>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === characterSheet}>\r\n          <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === playerManual}>\r\n          <PlayerManual />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === gameMaster}>\r\n          <GameMaster></GameMaster>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === worldAndLore}>\r\n          <WorldAndLore></WorldAndLore>\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === skillsAndPerks}>\r\n          <SkillPerkManual />\r\n        </Conditional>\r\n        <Conditional shouldView={viewMode === battleView}>\r\n          <Battleview />\r\n        </Conditional>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\ninterface MenuProps {\r\n  callback: (option: string) => void;\r\n  options: string[];\r\n  current: string;\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = (props) => {\r\n  return <div className=\"pageTop\">\r\n    <div className=\"pageTopInner\">\r\n      {props.options.map(option =>\r\n        <Tab active={option === props.current} key={option} onClick={() => props.callback(option)}>{option}</Tab>\r\n      )}\r\n    </div>\r\n  </div>;\r\n}\r\n\r\ninterface ITabPRops {\r\n  onClick: Function;\r\n  active: boolean;\r\n}\r\n\r\nconst Tab: React.FC<ITabPRops> = (props) => {\r\n  return <button className={props.active ? 'tab tabActive no-print' : 'tab no-print'} onClick={() => props.onClick()}>{props.children}</button>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}