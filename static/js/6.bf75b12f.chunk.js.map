{"version":3,"sources":["components/Wizard/Step0.tsx","components/AutoSelectField.tsx","components/Wizard/Step1.tsx","components/Wizard/OptionExplorer.tsx","components/Wizard/Step2.tsx","components/Wizard/Step3.tsx","components/Wizard/Step4.tsx","components/Wizard/Step5.tsx","components/Wizard/Step6.tsx","components/Wizard/Step7.tsx","components/Wizard/Step8.tsx","components/Wizard/Step9.tsx","views/Wizard.tsx"],"names":["Step0","props","currentNumber","Button","variant","key","onClick","callback","step","character","AutoSelectField","values","value","onChange","useState","isOpen","setIsOpen","toolTip","setToolTip","TextField","title","e","target","onFocus","onKeyUp","toUpperCase","pressEnter","Paper","style","position","background","zIndex","map","v","a","b","al","toLowerCase","bl","startsWith","endsWith","match","intersectString","cursor","margin","padding","Step1","species","setSpecies","gender","setGender","name","setName","genderList","n","Character","OptionsExplorer","tree","dispatchCallback","parentCallback","hideButton","hasAnswered","setHasAnswered","parentHasAnswered","setParentHasAnswered","dispatch","optionTree","action","Step2","useReducer","useCharacter","c","top","d","Step3","age","Step4","traits","setTraits","GetTraits","trait","Step5","Step6","Step7","Step8","Step9","Wizard","viewStep","setViewStep","strength","agility","endurance","intelligence","perception","willpower","skills","GetSkillList","setCharacter","viewSheet","setViewSheet","setData","CharacterSheet","initialCharacter","characterCallback"],"mappings":"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","file":"static/js/6.bf75b12f.chunk.js","sourcesContent":["import IStepProps from \"./WizardSteps\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Step0: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 0;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>Press Next to start the wizard</h3>\r\n        <p>This wizard will ask you a series of questions which will progressively build your character from birth to current state, you can press toggle to view your character at any point</p>\r\n        <Button variant='outlined' key='wizard_step0_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step0;","import React, { useState } from 'react';\r\nimport { Paper, TextField } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface IAutoSelectFieldProps {\r\n    values: string[];\r\n    value: string;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\n\r\n\r\nconst AutoSelectField: React.FC<IAutoSelectFieldProps> = ({ values, value, onChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [toolTip, setToolTip] = useState('');\r\n    const intersectString = (a: string, b: string): boolean => {\r\n        const al = a.toLowerCase();\r\n        const bl = b.toLowerCase();\r\n        if (al === bl) return true;\r\n        if (al.startsWith(bl) || bl.startsWith(al)) return true;\r\n        if (al.endsWith(bl) || bl.endsWith(al)) return true;\r\n        if (al.match(bl) || bl.match(al)) return true;\r\n        return false;\r\n    }\r\n    const pressEnter = (e:React.KeyboardEvent<HTMLDivElement>):void => {\r\n        setToolTip(e.key);\r\n        switch (e.key.toUpperCase()) {\r\n            case 'ENTER' :\r\n            case 'ESCAPE' : setIsOpen(false); return;\r\n            default : setIsOpen(true); return;\r\n        }\r\n    };\r\n    return <>\r\n        <TextField title={toolTip} value={value} onChange={(e) => onChange(e.target.value)} onFocus={() => setIsOpen(true)} onKeyUp={(e) => pressEnter(e)} ></TextField>\r\n        {(isOpen) && <Paper style={{position:'absolute', background:'white', zIndex:999}}>\r\n            {values.map(v => {\r\n                if (!intersectString(v, value)) return null;\r\n                else return (<Paper style={{background:'white', cursor:'pointer', margin:'6px', padding:'4px'}} onClick={() => {onChange(v); setIsOpen(false)}}>{v}</Paper>)\r\n            })}\r\n        </Paper>}\r\n    </>\r\n}\r\n\r\nexport default AutoSelectField;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport AutoSelectField from \"../AutoSelectField\";\r\n\r\nimport { Character } from \"../Character\";\r\nimport React from \"react\";\r\n\r\nconst Step1: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [species, setSpecies] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [name, setName] = useState('');\r\n    const step = 1;\r\n    if (props.currentNumber !== step) return null;\r\n\r\n    const genderList = (species.toLowerCase() === 'merlion') ? ['linon', 'caion', 'vekon'] : ['male','female'];\r\n\r\n    return <div>\r\n        <h3>Lets get some basic information</h3>\r\n        <div><b>What is your character's name?</b> <TextField onChange={(e) => setName(e.target.value)} value={name}>{name}</TextField></div>\r\n        <div><b>What is your character's species?</b> <AutoSelectField value={species} onChange={(n) => setSpecies(n)} values={['human','merlion','klackon']} ></AutoSelectField> </div>\r\n        <div><b>What is your character's gender?</b> <AutoSelectField values={genderList} value={gender} onChange={(e) => setGender(e)}></AutoSelectField></div>\r\n        <Button variant='outlined'  key='wizard_step1_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, name: name, species: species, gender: gender }))}>Next</Button>\r\n    </div>;\r\n}\r\nexport default Step1;","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { dispatcher } from \"../useCharacter\";\r\n\r\nexport interface IOption {\r\n    key: string;\r\n    value: IOption[];\r\n    dispatch: dispatcher;\r\n}\r\n\r\ninterface IOptionsExplorer {\r\n    tree: IOption;\r\n    dispatchCallback: (d: dispatcher) => void;\r\n    parentCallback: () => void;\r\n    hideButton:boolean;\r\n}\r\n\r\nexport const OptionsExplorer: React.FC<IOptionsExplorer> = ({ tree, dispatchCallback, parentCallback, hideButton }) => {\r\n    const [hasAnswered, setHasAnswered] = useState(false);\r\n    const [parentHasAnswered, setParentHasAnswered] = useState(false);\r\n    if (!hasAnswered && hideButton === false) return <Button variant='outlined'  onClick={() => { dispatchCallback(tree.dispatch); setHasAnswered(true); parentCallback(); }}>{tree.key}</Button>;\r\n    return (<>\r\n        {hideButton && tree.key + '->'}\r\n        {tree.value.map(v => {\r\n                return (<OptionsExplorer hideButton={parentHasAnswered} parentCallback={() => setParentHasAnswered(true)} tree={v} dispatchCallback={dispatchCallback} ></OptionsExplorer>);\r\n            })}\r\n    </>);\r\n}","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { useState, useReducer } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { Character } from \"../Character\";\r\nimport React from \"react\";\r\nimport { IOption, OptionsExplorer } from \"./OptionExplorer\";\r\nimport { useCharacter } from \"../useCharacter\";\r\n\r\nconst Step2: React.FC<IStepProps> = ({ character, currentNumber, callback }) => {\r\n    const [c, dispatch] = useReducer(useCharacter, character);\r\n    const step = 2;\r\n    if (currentNumber !== step) return <></>;\r\n\r\n    const top: IOption = {\r\n        key: 'Background',\r\n        value: optionTree,\r\n        dispatch: { action: 'background', value: 0, name: '' }\r\n    };\r\n\r\n    return <div>\r\n        <h3>where was your character born or hatched?</h3>\r\n        <OptionsExplorer hideButton={false} parentCallback={() => { }} tree={top} dispatchCallback={(d) => dispatch(d)} ></OptionsExplorer>\r\n        <hr />\r\n        <Button variant='outlined' key='wizard_step2_next' onClick={() => callback(step + 1, c)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nconst optionTree: IOption[] = [{\r\n    key: 'Coalition of sol',\r\n    dispatch: { action: 'background', value: 0, name: 'Coalition of sol' },\r\n    value: [\r\n        {\r\n            key: 'Earth',\r\n            dispatch: { action: 'background', value: 0, name: ', Earth' },\r\n            value: [\r\n                {\r\n                    key: 'Euroasia',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Euroasia' }\r\n                },\r\n                {\r\n                    key: 'North America',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', North America' }\r\n                },\r\n                {\r\n                    key: 'South America',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', North America' }\r\n                },\r\n                {\r\n                    key: 'Africa',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Africa' }\r\n                },\r\n                {\r\n                    key: 'Greenland',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Greenland' }\r\n                },\r\n                {\r\n                    key: 'Australia',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Australia' }\r\n                },\r\n                {\r\n                    key: 'Antarctica',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: 'Antarctica' }\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            key: 'Mars',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Mars' }\r\n        },\r\n        {\r\n            key: 'Ceres',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Ceres' }\r\n        },\r\n        {\r\n            key: 'Jupiter moon colony',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Jupiter moons' }\r\n        },\r\n        {\r\n            key: 'Saturn moon coloy',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Saturn moons' }\r\n        },\r\n        {\r\n            key: 'Outer planets station or spaceborn',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Voidborn' }\r\n        }\r\n    ]\r\n},\r\n{\r\n    key: 'Centauri Imperium',\r\n    value: [],\r\n    dispatch: { action: 'background', value: 0, name: 'Centauri Imperium' }\r\n},\r\n{\r\n    key: 'Fronteer World',\r\n    value: [],\r\n    dispatch: { action: 'background', value: 0, name: 'Fronteer world' }\r\n}];\r\n\r\nexport default Step2;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { IOption } from \"./OptionExplorer\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step3: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 3;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of family did your character have?</h3>\r\n        <br/>\r\n        <br/>\r\n        <Button key='wizard_step3_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, age: 4 }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Step3;","import IStepProps from \"./WizardSteps\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\nimport { GetTraits, Trait } from \"../traits/Traits\";\r\n\r\nconst Step4: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [traits, setTraits] = useState<Trait[]>([]);\r\n    const step = 4;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what is your characters strengths and weaknesses</h3>\r\n        {GetTraits().map(trait => {\r\n            return <Button onClick={() => setTraits([...traits, trait])}>{trait.name}</Button>\r\n        })}\r\n        <br/>\r\n        {traits.map(trait => <p>{trait.name}</p>)}\r\n        <br/>\r\n        <Button key='wizard_step4_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, traits: traits }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step4;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step5: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 5;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of personality does your character have?</h3>\r\n        <Button key='wizard_step5_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step5;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step6: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 6;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what interests and hobbies does your character have?</h3>\r\n        <Button key='wizard_step6_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step6;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step7: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 7;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what education does your character have?</h3>\r\n        <Button key='wizard_step7_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step7;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step8: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 8;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>how does your character make a living?</h3>\r\n        <Button key='wizard_step8_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step8;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step9: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 9;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>repeat step 8 until finished</h3>\r\n        <Button key='wizard_step9_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step9;","import React, { useState } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { Character, ICharacter } from './../components/Character';\r\nimport { CharacterSheet } from './CharacterSheet';\r\nimport Step0 from './../components/Wizard/Step0';\r\nimport Step1 from './../components/Wizard/Step1';\r\nimport Step2 from './../components/Wizard/Step2';\r\nimport Step3 from './../components/Wizard/Step3';\r\nimport Step4 from './../components/Wizard/Step4';\r\nimport Step5 from './../components/Wizard/Step5';\r\nimport Step6 from './../components/Wizard/Step6';\r\nimport Step7 from './../components/Wizard/Step7';\r\nimport Step8 from './../components/Wizard/Step8';\r\nimport Step9 from './../components/Wizard/Step9';\r\nimport { GetSkillList } from '../components/GetSkillList';\r\n\r\nconst Wizard: React.FC = () => {\r\n    const [viewStep, setViewStep] = useState(0);\r\n    const [character, setCharacter] = useState(new Character({\r\n        name: '',\r\n        species: '',\r\n        gender: '',\r\n        age: 1,\r\n        strength: 1,\r\n        agility: 1,\r\n        endurance: 1,\r\n        intelligence: 1,\r\n        perception: 1,\r\n        willpower: 1,\r\n        skills: GetSkillList()\r\n    } as ICharacter));\r\n    const [viewSheet, setViewSheet] = useState(false);\r\n    const setData = (n: number, c: Character) => {\r\n        setViewStep(n);\r\n        setCharacter(c);\r\n        setViewSheet(false);\r\n    };\r\n    return <div>\r\n        <h2>Character Creator Wizard</h2>\r\n        <p>Answering these questions will produce a template of a character with a set of abilities and matching backstory that makes some kind of sense.\r\n            <br/>\r\n            But you are expected to modify and correct it.\r\n        </p>\r\n        <hr />\r\n        <Step0 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step0>\r\n        <Step1 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step1>\r\n        <Step2 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step2>\r\n        <Step3 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step3>\r\n        <Step4 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step4>\r\n        <Step5 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step5>\r\n        <Step6 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step6>\r\n        <Step7 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step7>\r\n        <Step8 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step8>\r\n        <Step9 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step9>\r\n        <hr />\r\n        <Button key='toggle_sheet' onClick={() => setViewSheet(!viewSheet)}>Toggle character sheet</Button>\r\n        {viewSheet === true ? <CharacterSheet initialCharacter={character} characterCallback={(c) => setCharacter(c)} ></CharacterSheet> : null}\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Wizard;"],"sourceRoot":""}