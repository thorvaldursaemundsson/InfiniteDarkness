{"version":3,"sources":["components/Wizard/Step0.tsx","components/AutoSelectField.tsx","components/Wizard/Step1.tsx","components/Wizard/OptionExplorer.tsx","components/Wizard/Step2.tsx","components/Wizard/Step3.tsx","components/Wizard/Step4.tsx","components/Wizard/Step5.tsx","components/Wizard/Step6.tsx","components/Wizard/Step7.tsx","components/Wizard/Step8.tsx","components/Wizard/Step9.tsx","components/Wizard.tsx"],"names":["Step0","props","currentNumber","Button","variant","key","onClick","callback","step","character","AutoSelectField","values","value","onChange","useState","isOpen","setIsOpen","toolTip","setToolTip","TextField","title","e","target","onFocus","onKeyUp","toUpperCase","pressEnter","Paper","style","position","background","zIndex","map","v","a","b","al","toLowerCase","bl","startsWith","endsWith","match","intersectString","cursor","margin","padding","Step1","species","setSpecies","gender","setGender","name","setName","genderList","n","Character","OptionButtons","tree","onSelectCallback","optionTree","length","o","ot","find","undefined","GetOptions","Step2","currentPosition","setCurrentPosition","makeBackground","join","age","Step3","Step4","traits","setTraits","GetTraits","trait","Step5","Step6","Step7","Step8","Step9","Wizard","viewStep","setViewStep","strength","agility","endurance","intelligence","perception","willpower","skills","GetSkillList","setCharacter","viewSheet","setViewSheet","setData","c","CharacterSheet","initialCharacter","characterCallback"],"mappings":"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","file":"static/js/6.fee52e5f.chunk.js","sourcesContent":["import IStepProps from \"./WizardSteps\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Step0: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 0;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>Press Next to start the wizard</h3>\r\n        <p>This wizard will ask you a series of questions which will progressively build your character from birth to current state, you can press toggle to view your character at any point</p>\r\n        <Button variant='outlined' key='wizard_step0_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step0;","import React, { useState } from 'react';\r\nimport { Paper, TextField } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface IAutoSelectFieldProps {\r\n    values: string[];\r\n    value: string;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\n\r\n\r\nconst AutoSelectField: React.FC<IAutoSelectFieldProps> = ({ values, value, onChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [toolTip, setToolTip] = useState('');\r\n    const intersectString = (a: string, b: string): boolean => {\r\n        const al = a.toLowerCase();\r\n        const bl = b.toLowerCase();\r\n        if (al === bl) return true;\r\n        if (al.startsWith(bl) || bl.startsWith(al)) return true;\r\n        if (al.endsWith(bl) || bl.endsWith(al)) return true;\r\n        if (al.match(bl) || bl.match(al)) return true;\r\n        return false;\r\n    }\r\n    const pressEnter = (e:React.KeyboardEvent<HTMLDivElement>):void => {\r\n        setToolTip(e.key);\r\n        switch (e.key.toUpperCase()) {\r\n            case 'ENTER' :\r\n            case 'ESCAPE' : setIsOpen(false); return;\r\n            default : setIsOpen(true); return;\r\n        }\r\n    };\r\n    return <>\r\n        <TextField title={toolTip} value={value} onChange={(e) => onChange(e.target.value)} onFocus={() => setIsOpen(true)} onKeyUp={(e) => pressEnter(e)} ></TextField>\r\n        {(isOpen) && <Paper style={{position:'absolute', background:'white', zIndex:999}}>\r\n            {values.map(v => {\r\n                if (!intersectString(v, value)) return null;\r\n                else return (<Paper style={{background:'white', cursor:'pointer', margin:'6px', padding:'4px'}} onClick={() => {onChange(v); setIsOpen(false)}}>{v}</Paper>)\r\n            })}\r\n        </Paper>}\r\n    </>\r\n}\r\n\r\nexport default AutoSelectField;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { TextField, Button } from \"@material-ui/core\";\r\n\r\nimport AutoSelectField from \"../AutoSelectField\";\r\n\r\nimport { Character } from \"../Character\";\r\nimport React from \"react\";\r\n\r\nconst Step1: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [species, setSpecies] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [name, setName] = useState('');\r\n    const step = 1;\r\n    if (props.currentNumber !== step) return null;\r\n\r\n    const genderList = (species.toLowerCase() === 'merlion') ? ['linon', 'caion', 'vekon'] : ['male','female'];\r\n\r\n    return <div>\r\n        <h3>Lets get some basic information</h3>\r\n        <div><b>What is your character's name?</b> <TextField onChange={(e) => setName(e.target.value)} value={name}>{name}</TextField></div>\r\n        <div><b>What is your character's species?</b> <AutoSelectField value={species} onChange={(n) => setSpecies(n)} values={['human','merlion','klackon']} ></AutoSelectField> </div>\r\n        <div><b>What is your character's gender?</b> <AutoSelectField values={genderList} value={gender} onChange={(e) => setGender(e)}></AutoSelectField></div>\r\n        <Button variant='outlined'  key='wizard_step1_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, name: name, species: species, gender: gender }))}>Next</Button>\r\n    </div>;\r\n}\r\nexport default Step1;","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport interface IOption {\r\n    key: string;\r\n    value: IOption[];\r\n}\r\n\r\nconst GetOptions = (position: string[], optionTree:IOption[]): string[] => {\r\n    if (position.length === 0) {\r\n        return optionTree.map(o => o.key);\r\n    }\r\n    else if (position.length === 1) {\r\n        const ot = optionTree.find(o => o.key === position[0]);\r\n        if (ot !== undefined) return ot.value.map(o => o.key);\r\n    }\r\n    else if (position.length === 2) {\r\n        let ot = optionTree.find(o => o.key === position[0]);\r\n        if (ot !== undefined){\r\n            ot = ot.value.find(o => o.key === position[1]);\r\n            if (ot !== undefined){\r\n                return ot.value.map(o => o.key);\r\n            }\r\n        } \r\n    }\r\n    return [];\r\n}\r\n\r\ninterface IOptionButtons {\r\n    position: string[];\r\n    tree: IOption[];\r\n    onSelectCallback: (n:string[]) => void;\r\n}\r\n\r\nconst OptionButtons: React.FC<IOptionButtons> = ({position, tree, onSelectCallback}) => {\r\n    return <>{GetOptions(position, tree).map(o => {\r\n        return <Button variant='contained' onClick={() => onSelectCallback([...position, o])}>{o}</Button>\r\n    })}</>;\r\n}\r\n\r\nexport default OptionButtons;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport { Character } from \"../Character\";\r\nimport React from \"react\";\r\nimport OptionButtons, { IOption } from \"./OptionExplorer\";\r\n\r\nconst Step2: React.FC<IStepProps> = ({ character, currentNumber, callback }) => {\r\n    const [currentPosition, setCurrentPosition] = useState<string[]>([]);\r\n    const step = 2;\r\n    if (currentNumber !== step) return <></>;\r\n    \r\n    const makeBackground = () => {\r\n        return `${character.name} was born on/in ${currentPosition.join(', ')}`;\r\n    }\r\n    return <div>\r\n        <h3>where was your character born or hatched?</h3>\r\n        <OptionButtons tree={optionTree} position={currentPosition} onSelectCallback={(n) => setCurrentPosition(n)}></OptionButtons>\r\n        <br />\r\n        Background: {makeBackground()}\r\n        <br />\r\n        <Button variant='outlined' key='wizard_step2_next' onClick={() => callback(step + 1, new Character({ ...character, age: 2, background: makeBackground() }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nconst optionTree: IOption[] = [{\r\n    key: 'Coalition of sol',\r\n    value: [\r\n        {\r\n            key: 'Earth',\r\n            value: [\r\n                {\r\n                    key: 'Euroasia',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'North America',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'South America',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'Africa',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'Greenland',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'Australia',\r\n                    value:[]\r\n                },\r\n                {\r\n                    key: 'Antarctica',\r\n                    value:[]\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            key: 'Mars',\r\n            value: []\r\n        },\r\n        {\r\n            key: 'Ceres',\r\n            value: []\r\n        },\r\n        {\r\n            key: 'Jupiter moon colony',\r\n            value: []\r\n        },\r\n        {\r\n            key: 'Saturn moon coloy',\r\n            value: []\r\n        },\r\n        {\r\n            key: 'Outer planets station or spaceborn',\r\n            value: []\r\n        }\r\n    ]\r\n},\r\n{\r\n    key: 'Centauri Imperium',\r\n    value: []\r\n},\r\n{\r\n    key: 'Fronteer World',\r\n    value: []\r\n}];\r\n\r\nexport default Step2;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport OptionButtons, { IOption } from \"./OptionExplorer\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step3: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [currentPosition, setCurrentPosition] = useState<string[]>([]);\r\n    const step = 3;\r\n    if (props.currentNumber !== step) return null;\r\n    const makeBackground = () => {\r\n        return props.character.background + '.\\nRaised in a ' + currentPosition.join(', ');\r\n    }\r\n    return <div>\r\n        <h3>what kind of family did your character have?</h3>\r\n        <OptionButtons tree={optionTree} position={currentPosition} onSelectCallback={(n) => setCurrentPosition(n)}></OptionButtons>\r\n        <br/>\r\n        Background: {makeBackground()}\r\n        <br/>\r\n        <Button key='wizard_step3_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, age: 4, background: makeBackground() }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nconst optionTree: IOption[] = [{\r\n    key: 'good family',\r\n    value: []\r\n},\r\n{\r\n    key: 'bad family',\r\n    value: []\r\n},\r\n{\r\n    key: 'foster family',\r\n    value: []\r\n},\r\n{\r\n    key: 'orphanage',\r\n    value: []\r\n},\r\n{\r\n    key: 'homeless',\r\n    value: []\r\n}];\r\n\r\nexport default Step3;","import IStepProps from \"./WizardSteps\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\nimport { GetTraits, Trait } from \"../traits/Traits\";\r\n\r\nconst Step4: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [traits, setTraits] = useState<Trait[]>([]);\r\n    const step = 4;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what is your characters strengths and weaknesses</h3>\r\n        {GetTraits().map(trait => {\r\n            return <Button onClick={() => setTraits([...traits, trait])}>{trait.name}</Button>\r\n        })}\r\n        <br/>\r\n        {traits.map(trait => <p>{trait.name}</p>)}\r\n        <br/>\r\n        <Button key='wizard_step4_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, traits: traits }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step4;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step5: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 5;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of personality does your character have?</h3>\r\n        <Button key='wizard_step5_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step5;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step6: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 6;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what interests and hobbies does your character have?</h3>\r\n        <Button key='wizard_step6_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step6;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step7: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 7;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what education does your character have?</h3>\r\n        <Button key='wizard_step7_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step7;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step8: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 8;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>how does your character make a living?</h3>\r\n        <Button key='wizard_step8_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step8;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step9: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 9;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>repeat step 8 until finished</h3>\r\n        <Button key='wizard_step9_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step9;","import React, { useState } from 'react';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { Character, ICharacter } from './Character';\r\nimport { CharacterSheet } from './CharacterSheet';\r\nimport { GetSkillList } from './Skills';\r\nimport Step0 from './Wizard/Step0';\r\nimport Step1 from './Wizard/Step1';\r\nimport Step2 from './Wizard/Step2';\r\nimport Step3 from './Wizard/Step3';\r\nimport Step4 from './Wizard/Step4';\r\nimport Step5 from './Wizard/Step5';\r\nimport Step6 from './Wizard/Step6';\r\nimport Step7 from './Wizard/Step7';\r\nimport Step8 from './Wizard/Step8';\r\nimport Step9 from './Wizard/Step9';\r\n\r\nconst Wizard: React.FC = () => {\r\n    const [viewStep, setViewStep] = useState(0);\r\n    const [character, setCharacter] = useState(new Character({\r\n        name: '',\r\n        species: '',\r\n        gender: '',\r\n        age: 1,\r\n        strength: 1,\r\n        agility: 1,\r\n        endurance: 1,\r\n        intelligence: 1,\r\n        perception: 1,\r\n        willpower: 1,\r\n        skills: GetSkillList()\r\n    } as ICharacter));\r\n    const [viewSheet, setViewSheet] = useState(false);\r\n    const setData = (n: number, c: Character) => {\r\n        setViewStep(n);\r\n        setCharacter(c);\r\n        setViewSheet(false);\r\n    };\r\n    return <div>\r\n        <h2>Character Creator Wizard</h2>\r\n        <p>Answering these questions will produce a template of a character with a set of abilities and matching backstory that makes some kind of sense.\r\n            <br/>\r\n            But you are expected to modify and correct it.\r\n        </p>\r\n        <hr />\r\n        <Step0 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step0>\r\n        <Step1 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step1>\r\n        <Step2 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step2>\r\n        <Step3 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step3>\r\n        <Step4 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step4>\r\n        <Step5 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step5>\r\n        <Step6 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step6>\r\n        <Step7 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step7>\r\n        <Step8 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step8>\r\n        <Step9 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step9>\r\n        <hr />\r\n        <Button key='toggle_sheet' onClick={() => setViewSheet(!viewSheet)}>Toggle character sheet</Button>\r\n        {viewSheet === true ? <CharacterSheet initialCharacter={character} characterCallback={(c) => setCharacter(c)} ></CharacterSheet> : null}\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Wizard;"],"sourceRoot":""}