{"version":3,"sources":["components/Character.tsx","components/Skills.tsx","components/Label.tsx","components/Field.tsx","components/StringField.tsx","components/CharacterSheet.tsx","components/perks/TemplatePerk.tsx","components/Perks.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["fSum","n","x","i","Character","copy","name","species","gender","age","background","strength","agility","endurance","perception","willpower","intelligence","skills","perks","this","GetSkillList","undefined","Math","min","floor","sqrt","perkCost","length","map","p","cost","reduce","a","b","s","level","start","agePhases","expPhases","console","error","prevPhase","phase","currentAgePhase","expPhase","ageRange","characterPoints","characterPointsHuman","characterPointsMerlion","characterPointsKlackon","getStartingPointsAvailable","combat","pilot","spells","investigation","persuation","intimidation","larceny","stealth","survival","science","computer","medicine","surgery","empathy","subtrefuge","athletics","acrobatics","search","slightOfHand","sort","attribute","Label","children","style","display","minWidth","Field","label","value","onChange","max","modifier","enableButtons","useState","viewChildren","setViewChildren","ma","mi","total","Paper","className","Button","key","size","variant","onClick","StringField","props","enableEdit","TextField","e","target","CharacterSheet","useReducer","useCharacter","initialCharacter","character","dispatch","charJSON","setCharJSON","edit","setEdit","perksList","GetPerkList","textAlign","characterCallback","json","JSON","stringify","makeJSONText","Grid","container","spacing","item","xs","sm","getCalculatedPointsUsed","getMaximumPointsAvailable","getMaxStrength","action","getMaxAgility","getMaxEndurance","getMaxPerception","getMaxWillpower","getMaxIntelligence","getExperienceMultiplier","getHitpoints","getMana","getDamageBonusSmall","getDamageBonusMedium","getDamageBonusLarge","substring","toUpperCase","description","filter","skill","perkToAdd","perk","state","r","findIndex","push","pta","TemplatePerk","PerkTemplate","data","_description","Skills","generic10All","m","generic20All","generic30All","generic40All","gun1","gun2","gun3","gun4","sortPerk","prevPerk","nextPerk","SkillPerkManual","lazy","GameMaster","WorldAndLore","Wizard","PlayerManual","Conditional","shouldView","padding","fallback","Menu","options","option","callback","App","viewMode","setViewMode","setCharacter","wizard","MainButton","DialogTitle","info","charData","prompt","c","parse","log","loadCharacter","float","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3260a661.chunk.js","sourcesContent":["import { Skill, GetSkillList } from \"./Skills\";\r\nimport { Perk } from './Perks';\r\n\r\nconst fSum = (n: number): number => {\r\n    let x = 0;\r\n    for (let i = 0; i <= n; i++) {\r\n        x += i;\r\n    }\r\n    return x;\r\n};\r\n\r\nexport interface ICharacter {\r\n    name: string;\r\n    species: string;\r\n    gender: string;\r\n    background: string;\r\n    age: number;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n}\r\n\r\nexport class Character {\r\n    name: string;\r\n    species: string;\r\n    gender: string;\r\n    age: number;\r\n    background: string;\r\n    strength: number;\r\n    agility: number;\r\n    endurance: number;\r\n    perception: number;\r\n    willpower: number;\r\n    intelligence: number;\r\n    skills: Skill[];\r\n    perks: Perk[];\r\n    constructor(copy?: ICharacter) {\r\n        this.name = (copy && copy.name) || \"\";\r\n        this.species = (copy && copy.species) || \"\";\r\n        this.gender = (copy && copy.gender) || \"\";\r\n        this.background = (copy && copy.background) || \"\";\r\n        this.strength = (copy && copy.strength) || 4;\r\n        this.agility = (copy && copy.agility) || 4;\r\n        this.endurance = (copy && copy.endurance) || 4;\r\n        this.perception = (copy && copy.perception) || 4;\r\n        this.willpower = (copy && copy.willpower) || 4;\r\n        this.intelligence = (copy && copy.intelligence) || 4;\r\n        this.skills = (copy && copy.skills) || GetSkillList();\r\n        if (copy !== undefined && copy.perks !== undefined) this.perks = copy.perks;\r\n        else this.perks = [];\r\n        this.age = (copy && copy.age) || 24;\r\n    }\r\n\r\n    public getMaxStrength() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 1, 11);\r\n                if (this.age < 26) return 11;\r\n                if (this.age < 36) return 12;\r\n                if (this.age < 50) return 10;\r\n                if (this.age < 66) return 9;\r\n                if (this.age < 90) return 8;\r\n                return 7;\r\n            case 'merlion':\r\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\r\n                if (this.age < 26) return 10;\r\n                if (this.age < 40) return 11;\r\n                if (this.age < 70) return 10;\r\n                if (this.age < 90) return 9;\r\n                return 8;\r\n            case 'klackon':\r\n                return 4 + Math.floor(Math.sqrt(this.age));\r\n            default: return 10;\r\n        }\r\n    }\r\n    public getMaxAgility() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                return 10;\r\n            case 'merlion':\r\n                return 12;\r\n            case 'klackon':\r\n                return 9;\r\n            default: return 10;\r\n        }\r\n    }\r\n    public getMaxEndurance() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                if (this.age < 14) return Math.min(Math.floor(this.age / 18) + 2, 11);\r\n                if (this.age < 26) return 12;\r\n                if (this.age < 36) return 13;\r\n                if (this.age < 50) return 12;\r\n                if (this.age < 66) return 11;\r\n                if (this.age < 90) return 10;\r\n                return 9;\r\n            case 'merlion':\r\n                if (this.age < 12) return Math.min(Math.floor(this.age / 14) + 1, 10);\r\n                if (this.age < 26) return 10;\r\n                if (this.age < 40) return 11;\r\n                if (this.age < 70) return 10;\r\n                if (this.age < 90) return 9;\r\n                return 8;\r\n            case 'klackon':\r\n                return 12\r\n            default: return 10;\r\n        }\r\n    }\r\n    public getMaxPerception() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                if (this.age < 18) return Math.min(Math.floor(this.age / 18) + 1, 13);\r\n                if (this.age < 26) return 12;\r\n                if (this.age < 30) return 11;\r\n                if (this.age < 36) return 9;\r\n                if (this.age < 42) return 8;\r\n                if (this.age < 50) return 7;\r\n                return 6;\r\n            case 'merlion':\r\n                return 11;\r\n            case 'klackon':\r\n                return 12;\r\n            default: return 10;\r\n        }\r\n    }\r\n    public getMaxWillpower() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                return 12;\r\n            case 'merlion':\r\n                return 8;\r\n            case 'klackon':\r\n                return 9;\r\n            default: return 10;\r\n        }\r\n    }\r\n    public getMaxIntelligence() {\r\n        switch (this.species) {\r\n            case 'human':\r\n                return 10;\r\n            case 'merlion':\r\n                return 16;\r\n            case 'klackon':\r\n                return 5 + Math.floor(Math.sqrt(Math.sqrt(this.age)));\r\n            default: return 10;\r\n        }\r\n    }\r\n\r\n    public getCalculatedPointsUsed() {\r\n        const perkCost = this.perks.length > 0 ? this.perks.map(p => p.cost).reduce((a, b) => a + b) : 0;\r\n        return fSum(this.strength) * 4\r\n            + fSum(this.agility) * 4\r\n            + fSum(this.endurance) * 4\r\n            + fSum(this.perception) * 4\r\n            + fSum(this.willpower) * 4\r\n            + fSum(this.intelligence) * 4\r\n            + this.skills.map(s => fSum(s.level)).reduce((a, b) => a + b, 0)\r\n            + perkCost;\r\n    }\r\n\r\n    private characterPoints(start: number, agePhases: number[], expPhases: number[]): number {\r\n        let p = start;\r\n        if (agePhases.length !== expPhases.length) console.error('age Phases and expPhases must be of equal length!');\r\n        let prevPhase = 0;\r\n        for (var phase in agePhases) {\r\n            let currentAgePhase = agePhases[phase];\r\n            let expPhase = expPhases[phase];\r\n\r\n            let ageRange = currentAgePhase - prevPhase;\r\n            if (this.age > prevPhase) p += Math.min(this.age - prevPhase, ageRange) * expPhase;\r\n            prevPhase = currentAgePhase;\r\n        }\r\n\r\n        return p;\r\n    }\r\n\r\n    private characterPointsHuman() {\r\n        return this.characterPoints(300, [18, 26, 40, 70], [16, 12, 8, 4]);\r\n    }\r\n\r\n    private characterPointsMerlion() {\r\n        return this.characterPoints(200, [16, 24, 50, 90], [20, 16, 12, 6]);\r\n    }\r\n\r\n    private characterPointsKlackon() {\r\n        return this.characterPoints(100, [10, 20, 40, 80, 160, 320, 640], [6, 8, 10, 12, 16, 18, 18]);\r\n    }\r\n\r\n\r\n\r\n    public getStartingPointsAvailable() {\r\n\r\n        switch (this.species) {\r\n            case 'human': return this.characterPointsHuman();\r\n            case 'merlion': return this.characterPointsMerlion();\r\n            case 'klackon': return this.characterPointsKlackon();\r\n            default: return this.characterPointsHuman();\r\n        }\r\n    }\r\n\r\n    public getMaximumPointsAvailable() {\r\n        return this.getStartingPointsAvailable() * 2;\r\n    }\r\n\r\n    public getExperienceMultiplier() {\r\n        if (this.age < 16) return 3;\r\n        if (this.age < 20) return 2.5;\r\n        if (this.age < 24) return 2;\r\n        if (this.age < 28) return 1.75;\r\n        if (this.age < 32) return 1.5;\r\n        if (this.age < 36) return 1.25;\r\n        return 1;\r\n    }\r\n\r\n    public getHitpoints() {\r\n        return this.strength + this.endurance * 2;\r\n    }\r\n\r\n    public getMana() {\r\n        return this.endurance + this.willpower * 2\r\n    }\r\n\r\n    public getDamageBonusSmall() {\r\n        return Math.floor(this.strength / 4);\r\n    }\r\n\r\n    public getDamageBonusMedium() {\r\n        return Math.floor(this.strength / 3);\r\n    }\r\n    public getDamageBonusLarge() {\r\n        return Math.floor(this.strength / 2);\r\n    }\r\n}","import combat from './skills/combat.json';\r\nimport pilot from './skills/pilot.json';\r\nimport spells from './skills/spells.json';\r\nimport investigation from './skills/investigation.json';\r\nimport intimidation from './skills/intimidation.json';\r\nimport larceny from './skills/larceny.json';\r\nimport stealth from './skills/stealth.json';\r\nimport survival from './skills/survival.json';\r\nimport science from './skills/science.json';\r\nimport computer from './skills/computer.json';\r\nimport medicine from './skills/medicine.json';\r\nimport surgery from './skills/surgery.json';\r\nimport empathy from './skills/empathy.json';\r\nimport subtrefuge from './skills/subtrefuge.json';\r\nimport athletics from './skills/athletics.json';\r\nimport acrobatics from './skills/acrobatics.json';\r\nimport search from './skills/search.json';\r\nimport slightOfHand from './skills/slightOfHand.json';\r\nimport persuation from './skills/persuation.json';\r\n\r\n\r\nexport interface Skill {\r\n    name: string;\r\n    attribute: string | 'strength' | 'agility' | 'endurance' | 'perception' | 'willpower' | 'intelligence';\r\n    level: number;\r\n    description: string;\r\n}\r\nexport const GetSkillList = (): Skill[] => {\r\n    return [\r\n        { ...combat },\r\n        { ...pilot },\r\n        { ...spells },\r\n        { ...investigation },\r\n        { ...persuation },\r\n        { ...intimidation },\r\n        { ...larceny },\r\n        { ...stealth },\r\n        {  ...survival },\r\n        { ...science },\r\n        { ...computer },\r\n        { ...medicine },\r\n        { ...surgery },\r\n        { ...empathy },\r\n        { ...subtrefuge },\r\n        { ...athletics },\r\n        { ...acrobatics },\r\n        { ...search },\r\n        {  ...slightOfHand }\r\n    ].sort((a, b) => a.attribute < b.attribute ? -1 : 1);\r\n}","    import React from 'react';\r\n\r\nexport const Label: React.FC<{}> = ({children}) => {\r\n    return <label style={{display:'inline-block', minWidth:'140px'}}>{children}</label>;\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Paper, Button } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface FieldProps {\r\n    label: string;\r\n    value: number;\r\n    max?: number;\r\n    min?: number;\r\n    modifier?: number;\r\n    enableButtons?: boolean;\r\n    onChange: (n: number) => void;\r\n}\r\n\r\nexport const Field: React.FC<FieldProps> = ({ label, value, onChange, max, min, modifier, enableButtons, children }) => {\r\n    const [viewChildren, setViewChildren] = useState(false);\r\n    let ma = max !== undefined ? max : 10;\r\n    let mi = min !== undefined ? min : 1;\r\n    let total = modifier !== undefined ? value + modifier : value;\r\n    return <Paper className=\"extraPadding\">\r\n        <Label>{label}:</Label> <Label>{value} {modifier !== undefined ? ` | ${modifier} | ${total}` : null}</Label>\r\n        {enableButtons === true ? <Button key={'fieldbutton_increase_'+label} size=\"small\" variant=\"contained\" onClick={() => onChange(ma <= value ? value : value + 1)}>+</Button> : null}\r\n        {enableButtons === true ? <Button key={'fieldbutton_decrease_'+label}  size=\"small\" variant=\"contained\" onClick={() => onChange(mi >= value ? value : value - 1)}>-</Button> : null}\r\n\r\n        {children !== undefined ? viewChildren === true ?\r\n            <Paper><Button  key={'fieldbutton_children_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(false)}>X</Button>{children} </Paper>\r\n            : (enableButtons === true ? <Button  key={'fieldbutton_children_2_'+label}  size=\"small\" variant=\"contained\" onClick={() => setViewChildren(true)}>?</Button> : null)\r\n            : null}\r\n    </Paper>\r\n}","import React from 'react';\r\nimport { TextField, Paper } from '@material-ui/core';\r\nimport { Label } from './Label';\r\n\r\ninterface FieldProps {\r\n    label: string;\r\n    value: string;\r\n    enableEdit?: boolean;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\nconst StringField: React.FC<FieldProps> = (props: FieldProps) => {\r\n    if (props.enableEdit !== true) return <Paper><Label>{props.label}:</Label><Label>{props.value}</Label></Paper>\r\n    else return <Paper>\r\n        <Label>{props.label}:</Label>\r\n        <TextField value={props.value} onChange={(e) => props.onChange(e.target.value)} >{props.value}</TextField>\r\n    </Paper>\r\n}\r\n\r\nexport default StringField;","import React, { useReducer, useState } from 'react';\r\nimport { Field } from './Field';\r\nimport { Paper, Grid, Button } from '@material-ui/core';\r\nimport { Character } from './Character';\r\nimport { GetPerkList, Perk } from './Perks';\r\nimport StringField from './StringField';\r\n\r\ninterface CharacterSheetProps {\r\n    initialCharacter: Character;\r\n    characterCallback: (c: Character) => void;\r\n}\r\n\r\nexport const CharacterSheet: React.FC<CharacterSheetProps> = (props) => {\r\n    const [character, dispatch] = useReducer(useCharacter, props.initialCharacter);\r\n    const [charJSON, setCharJSON] = useState('');\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const perksList = GetPerkList();\r\n\r\n    const makeJSONText = () => {\r\n        const json = JSON.stringify({ ...character });\r\n        setCharJSON(json);\r\n    };\r\n\r\n    return <Paper style={{ textAlign: 'left' }}>\r\n        <Button key='charactersheet_exit_and_save' onClick={() => props.characterCallback(character)}>exit</Button>\r\n        {charJSON !== '' ? <Button key='charactersheet_close_character_data' onClick={() => setCharJSON('')}>Close character data</Button> : null}\r\n        <Button key='charactersheet_make_json_text' onClick={() => makeJSONText()}>Save character data</Button>\r\n        <Button key='charactersheet_edit' onClick={() => setEdit(!edit)}>edit</Button>\r\n        <Paper>{charJSON}</Paper>\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={12} sm={6}>\r\n                Character points used {character.getCalculatedPointsUsed()} / {character.getStartingPointsAvailable()} ({character.getMaximumPointsAvailable()})\r\n                <Field enableButtons={edit} max={character.getMaxStrength()} label='strength' value={character.strength} onChange={n => dispatch({ action: 'strength', value: n })}>Raw muscle strength</Field>\r\n                <Field enableButtons={edit} max={character.getMaxAgility()} label='agility' value={character.agility} onChange={n => dispatch({ action: 'agility', value: n })}>Steady hands, reflexes</Field>\r\n                <Field enableButtons={edit} max={character.getMaxEndurance()} label='endurance' value={character.endurance} onChange={n => dispatch({ action: 'endurance', value: n })}>Ability to last long</Field>\r\n                <Field enableButtons={edit} max={character.getMaxPerception()} label='perception' value={character.perception} onChange={n => dispatch({ action: 'perception', value: n })}>eyesight, hearing, and how much you smell</Field>\r\n                <Field enableButtons={edit} max={character.getMaxWillpower()} label='willpower' value={character.willpower} onChange={n => dispatch({ action: 'willpower', value: n })}>ability to say \"no\" when it's sooo good</Field>\r\n                <Field enableButtons={edit} max={character.getMaxIntelligence()} label='intelligence' value={character.intelligence} onChange={n => dispatch({ action: 'intelligence', value: n })}>big brainy boy</Field>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <StringField label={'name'} value={character.name} enableEdit={edit} onChange={n => dispatch({ action: 'name', value: 0, name: n })} ></StringField>\r\n                <StringField label={'gender'} value={character.gender} enableEdit={edit} onChange={n => dispatch({ action: 'gender', value: 0, name: n })} ></StringField>\r\n                <StringField label={'species'} value={character.species} enableEdit={edit} onChange={n => dispatch({ action: 'species', value: 0, name: n })} ></StringField>\r\n                <StringField label={'background'} value={character.background} enableEdit={edit} onChange={n => dispatch({ action: 'background', value: 0, name: n })} ></StringField>\r\n                <Field enableButtons={edit} label='age' max={900} min={1} value={character.age} onChange={n => dispatch({ action: 'age', value: n })}>Your age determines your starting, maximum experience, as well as experience multiplier</Field>\r\n                <Paper>Experience multiplier: {character.getExperienceMultiplier()}</Paper>\r\n                <Paper>Hit points: {character.getHitpoints()}</Paper>\r\n                <Paper>mana: {character.getMana()}</Paper>\r\n                <Paper>damage bonus small: {character.getDamageBonusSmall()}</Paper>\r\n                <Paper>damage bonus medium: {character.getDamageBonusMedium()}</Paper>\r\n                <Paper>damage bonus large: {character.getDamageBonusLarge()}</Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                {character.skills.map(s => {\r\n                    let modifier: number = 0;\r\n                    switch (s.attribute) {\r\n                        case 'strength': modifier = character.strength; break;\r\n                        case 'agility': modifier = character.agility; break;\r\n                        case 'endurance': modifier = character.endurance; break;\r\n                        case 'perception': modifier = character.perception; break;\r\n                        case 'willpower': modifier = character.willpower; break;\r\n                        case 'intelligence': modifier = character.intelligence; break;\r\n                    }\r\n                    return <Field key={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\r\n                        enableButtons={edit}\r\n                        modifier={modifier}\r\n                        max={40}\r\n                        min={0}\r\n                        label={s.name + ' ' + s.attribute.substring(0, 3).toUpperCase()}\r\n                        value={s.level}\r\n                        onChange={(n => dispatch({ action: 'skill', name: s.name, value: n }))}>\r\n                        {s.description}\r\n                        {perksList.filter(p => p.skill === s.name).map(p => {\r\n                            return <Button key={'addperk_' + p.name} onClick={() => dispatch({ action: 'addperk', name: p.name, value: 0, perkToAdd: p })}>{p.name}</Button>;\r\n                        })}\r\n                    </Field>\r\n                })}\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n                <h1>Perks</h1>\r\n                {character.perks.map(perk => {\r\n                    return (<p><b>{perk.name}</b> ({perk.cost}) {perk.description()}\r\n                        <Button key={'removeperk_' + perk.name} size=\"small\" onClick={() => dispatch({ action: 'removeperk', name: perk.name, value: 0, perkToAdd: perk })}>X</Button>\r\n                    </p>)\r\n                })}\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>;\r\n}\r\n\r\ninterface dispatcher {\r\n    action: string;\r\n    name?: string;\r\n    value: number;\r\n    perkToAdd?: Perk;\r\n}\r\n\r\nconst useCharacter = (state: Character, action: dispatcher): Character => {\r\n    switch (action.action) {\r\n        case 'strength': return new Character({ ...state, strength: action.value });\r\n        case 'agility': return new Character({ ...state, agility: action.value });\r\n        case 'endurance': return new Character({ ...state, endurance: action.value });\r\n        case 'willpower': return new Character({ ...state, willpower: action.value });\r\n        case 'perception': return new Character({ ...state, perception: action.value });\r\n        case 'intelligence': return new Character({ ...state, intelligence: action.value });\r\n        case 'age': return new Character({ ...state, age: action.value });\r\n        case 'skill':\r\n            let r = new Character({\r\n                ...state\r\n            });\r\n            r.skills[state.skills.findIndex(s => s.name === action.name)].level = action.value;\r\n            return r;\r\n        case 'name': return new Character({ ...state, name: action.name || '' });\r\n        case 'species': return new Character({ ...state, species: action.name || '' });\r\n        case 'gender': return new Character({ ...state, gender: action.name || '' });\r\n        case 'background': return new Character({ ...state, background: action.name || '' });\r\n    }\r\n    if (action.action === 'addperk') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.perkToAdd !== undefined) r.perks.push(action.perkToAdd);\r\n        return r;\r\n    }\r\n    else if (action.action === 'removeperk') {\r\n        let r = new Character({\r\n            ...state\r\n        });\r\n        if (action.perkToAdd !== undefined) {\r\n            let pta = action.perkToAdd;\r\n            r.perks = r.perks.filter(p => p.name !== pta.name);\r\n        }\r\n        return r;\r\n    }\r\n\r\n\r\n    return state;\r\n}","import {Perk} from './../Perks';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport class TemplatePerk implements Perk\r\n{\r\n    name: string;    \r\n    skill: string;\r\n    cost: number;\r\n    description(): JSX.Element {\r\n        return <TextField />;\r\n    }\r\n    constructor(name: string, skill:string, cost: number){\r\n        this.name = name;\r\n        this.skill = skill;\r\n        this.cost = cost;\r\n    }\r\n    \r\n}","import gun1 from './perks/gun1.json';\r\nimport gun2 from './perks/gun2.json';\r\nimport gun3 from './perks/gun3.json';\r\nimport gun4 from './perks/gun4.json';\r\nimport React from 'react';\r\nimport { GetSkillList } from './Skills';\r\nimport { TemplatePerk } from './perks/TemplatePerk';\r\n\r\n\r\nexport interface Perk {\r\n    name: string;\r\n    skill: string;\r\n    cost: number;\r\n    description(): JSX.Element;\r\n}\r\n\r\ninterface IPerk {\r\n    name: string;\r\n    skill: string;\r\n    cost: number;\r\n    description: string;\r\n}\r\n\r\nclass PerkTemplate implements Perk{\r\n    name: string;\r\n    skill: string;\r\n    cost: number;\r\n    _description:string;\r\n    description():JSX.Element  {\r\n        return <>{this._description}</>;\r\n    }\r\n    constructor(data:IPerk) {\r\n        this.name = data.name;\r\n        this.skill = data.skill;\r\n        this.cost = data.cost;\r\n        this._description = data.description;\r\n    }\r\n}\r\nconst Skills =GetSkillList();\r\nexport const GetPerkList = (): Perk[] => {\r\n    \r\n    const generic10All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 10\", m.name,10));\r\n    const generic20All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 20\", m.name,20));\r\n    const generic30All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 30\", m.name,30));\r\n    const generic40All = Skills.map(m => new TemplatePerk(\"custom \"+m.name+\" 40\", m.name,40));\r\n    return [\r\n        ...generic10All,\r\n        ...generic20All,\r\n        ...generic30All,\r\n        ...generic40All,\r\n        new PerkTemplate({ ...gun1 }),\r\n        new PerkTemplate({ ...gun2 }),\r\n        new PerkTemplate({ ...gun3 }),\r\n        new PerkTemplate({ ...gun4 }),\r\n        \r\n    ].sort(sortPerk);\r\n}\r\n\r\nconst sortPerk = (prevPerk:Perk, nextPerk:Perk) => {\r\n    if (prevPerk.skill !== nextPerk.skill) return prevPerk.skill > nextPerk.skill ? 1 : -1;\r\n    else return prevPerk.cost > nextPerk.cost ? 1 : -1;\r\n};","import React, { useState, Suspense, lazy } from 'react';\r\nimport { CharacterSheet } from './components/CharacterSheet';\r\nimport './App.css';\r\nimport { Character, ICharacter } from './components/Character';\r\nimport { Button, DialogTitle } from '@material-ui/core';\r\nconst SkillPerkManual = lazy(() => import('./components/SkillPerkManual'));\r\nconst GameMaster = lazy(() => import('./components/GameMaster'));\r\nconst WorldAndLore = lazy(() => import('./components/WorldAndLore'));\r\nconst Wizard = lazy(() => import('./components/Wizard'));\r\nconst PlayerManual = lazy(() => import('./components/PlayerManual'));\r\n\r\nconst App: React.FC = () => {\r\n  const main = 'main';\r\n  const [viewMode, setViewMode] = useState(main);\r\n  const [character, setCharacter] = useState(new Character());//new Character();\r\n  const characterSheet = 'View Character Sheet';\r\n  const playerManual = 'Player Manual';\r\n  const gameMaster = 'Game Master';\r\n  const worldAndLore = 'World and Lore';\r\n  const skillsAndPerks = 'Skills and Perks';\r\n  const wizard = 'Launch Character Creator Wizard';\r\n  const about = 'About';\r\n  let options = [characterSheet,\r\n    playerManual,\r\n    gameMaster,\r\n    worldAndLore,\r\n    skillsAndPerks,\r\n    wizard,\r\n    about\r\n  ];\r\n  const MainButton = () => <Button onClick={() => setViewMode('main')}>EXIT</Button>;\r\n\r\n  const loadCharacter = () => {\r\n    try {\r\n      console.info('attempting to load character');\r\n      const charData = prompt('paste character string here');\r\n      if (charData !== null) {\r\n        const c = JSON.parse(charData) as ICharacter;\r\n        setCharacter(new Character({ ...c }));\r\n        setViewMode(characterSheet);\r\n        console.log('character was successfully loaded:', { ...c });\r\n      } else console.log('no character info was pasted');\r\n    }\r\n    catch (error) {\r\n      console.error({ error });\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Conditional shouldView={viewMode === main}>\r\n        <DialogTitle>Infinite Darkness</DialogTitle>\r\n        <Menu callback={(option) => setViewMode(option)} options={options} />\r\n        <Button onClick={() => loadCharacter()}>Load Character</Button>\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === characterSheet}>\r\n        <CharacterSheet characterCallback={(c) => { setCharacter(c); setViewMode('main'); }} initialCharacter={character} />\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === playerManual}>\r\n        <MainButton />\r\n        <PlayerManual />\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === gameMaster}>\r\n        <MainButton />\r\n        <GameMaster></GameMaster>\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === worldAndLore}>\r\n        <MainButton />\r\n        <WorldAndLore></WorldAndLore>\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === skillsAndPerks}>\r\n        <MainButton />\r\n        <SkillPerkManual />\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === wizard}>\r\n        <MainButton />\r\n        <Wizard />\r\n      </Conditional>\r\n      <Conditional shouldView={viewMode === about}>\r\n        <MainButton />\r\n        <h2>About</h2>\r\n        <h3>This is a work in progress</h3>\r\n        <p>Author: Thorvaldur Saemundsson</p>\r\n        <p>Technology: ReactJS, github pages</p>\r\n        <p>Project: Infinite Darkness, a sci-fi and fantasy game</p>\r\n        <p>Please formulate any complaints and suggestions in the form of a pull request ;)</p>\r\n        <span style={{ float: 'right', fontSize: '11px' }}>Copyright Thorvaldur Saemundsson</span>\r\n      </Conditional>\r\n    </div>\r\n  );\r\n}\r\ninterface ItemProp {\r\n  shouldView: boolean;\r\n}\r\n\r\nconst Conditional: React.FC<ItemProp> = ({ shouldView, children }) => {\r\n  if (shouldView) return <div style={{ textAlign: 'left', padding: '15px' }}><Suspense fallback={<div>Loading...</div>}>{children}</Suspense></div>;\r\n  else return null;\r\n}\r\n\r\ninterface MenuProps {\r\n  callback: (option: string) => void;\r\n  options: string[];\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = (props) => {\r\n  return <div>{props.options.map(option => <Button key={option} onClick={() => props.callback(option)}>{option}</Button>)}</div>;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}