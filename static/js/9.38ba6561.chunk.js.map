{"version":3,"sources":["components/Wizard/Step0.tsx","components/AutoSelectField.tsx","components/Label.tsx","components/Wizard/Step1.tsx","components/Wizard/OptionExplorer.tsx","components/Wizard/Step2.tsx","components/Wizard/Step3.tsx","components/Wizard/Step4.tsx","components/Wizard/Step5.tsx","components/Wizard/Step6.tsx","components/Wizard/Step7.tsx","components/Wizard/Step8.tsx","components/Wizard/Step9.tsx","views/Wizard.tsx"],"names":["Step0","props","currentNumber","Button","variant","key","onClick","callback","step","character","AutoSelectField","values","value","onChange","useState","isOpen","setIsOpen","toolTip","setToolTip","TextField","title","e","target","onFocus","onKeyUp","toUpperCase","pressEnter","Paper","style","position","background","zIndex","map","v","a","b","al","toLowerCase","bl","startsWith","endsWith","match","intersectString","cursor","margin","padding","Label","children","display","minWidth","AttributeRoller","n","attribute","setAttribute","rerolls","setRerolls","size","newRoll","rollDice","reroll","Case","condition","Step1","species","setSpecies","gender","setGender","name","setName","innerStep","setInnerStep","agility","setAgility","endurance","setEndurance","perception","setPerception","willpower","setWillpower","intelligence","setIntelligence","strength","setStrength","diceSize","setDiceSize","genderList","Math","floor","random","Character","OptionsExplorer","tree","dispatchCallback","parentCallback","hideButton","hasAnswered","setHasAnswered","parentHasAnswered","setParentHasAnswered","dispatch","optionTree","action","Step2","useReducer","useCharacter","c","top","d","Step3","age","Step4","traits","setTraits","GetTraits","trait","Step5","Step6","Step7","Step8","Step9","Wizard","viewStep","setViewStep","skills","GetSkillList","setCharacter","viewSheet","setViewSheet","setData","CharacterSheet","initialCharacter","characterCallback"],"mappings":"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","file":"static/js/9.38ba6561.chunk.js","sourcesContent":["import IStepProps from \"./WizardSteps\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Step0: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 0;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>Press Next to start the wizard</h3>\r\n        <p>This wizard will ask you a series of questions which will progressively build your character from birth to current state, you can press toggle to view your character at any point</p>\r\n        <Button variant='outlined' key='wizard_step0_next' onClick={() => props.callback(step + 1, props.character)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step0;","import React, { useState } from 'react';\r\nimport { Paper, TextField } from '@material-ui/core';\r\n\r\ninterface IAutoSelectFieldProps {\r\n    values: string[];\r\n    value: string;\r\n    onChange: (n: string) => void;\r\n}\r\n\r\n\r\n\r\nconst AutoSelectField: React.FC<IAutoSelectFieldProps> = ({ values, value, onChange }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [toolTip, setToolTip] = useState('');\r\n    const intersectString = (a: string, b: string): boolean => {\r\n        const al = a.toLowerCase();\r\n        const bl = b.toLowerCase();\r\n        if (al === bl) return true;\r\n        if (al.startsWith(bl) || bl.startsWith(al)) return true;\r\n        if (al.endsWith(bl) || bl.endsWith(al)) return true;\r\n        if (al.match(bl) || bl.match(al)) return true;\r\n        return false;\r\n    }\r\n    const pressEnter = (e:React.KeyboardEvent<HTMLDivElement>):void => {\r\n        setToolTip(e.key);\r\n        switch (e.key.toUpperCase()) {\r\n            case 'ENTER' :\r\n            case 'ESCAPE' : setIsOpen(false); return;\r\n            default : setIsOpen(true); return;\r\n        }\r\n    };\r\n    return <>\r\n        <TextField title={toolTip} value={value} onChange={(e) => onChange(e.target.value)} onFocus={() => setIsOpen(true)} onKeyUp={(e) => pressEnter(e)} ></TextField>\r\n        {(isOpen) && <Paper style={{position:'absolute', background:'white', zIndex:999}}>\r\n            {values.map(v => {\r\n                if (!intersectString(v, value)) return null;\r\n                else return (<Paper style={{background:'white', cursor:'pointer', margin:'6px', padding:'4px'}} onClick={() => {onChange(v); setIsOpen(false)}}>{v}</Paper>)\r\n            })}\r\n        </Paper>}\r\n    </>\r\n}\r\n\r\nexport default AutoSelectField;","    import React, { CSSProperties } from 'react';\n\ninterface LabelInterface{\n    style?:CSSProperties;\n}\n\nexport const Label: React.FC<LabelInterface> = ({children, style}) => {\n    return <label style={{ display:'inline-block', minWidth:'140px',...style}}>{children}</label>;\n}\n\n","import IStepProps from \"./WizardSteps\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport AutoSelectField from \"./../AutoSelectField\";\r\nimport { Character } from \"./../Character\";\r\nimport React, { useState } from \"react\";\r\nimport { Label } from \"../Label\";\r\n\r\nconst Step1: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [species, setSpecies] = useState('');\r\n    const [gender, setGender] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [innerStep, setInnerStep] = useState(1);\r\n    const [agility, setAgility] = useState(-1);\r\n    const [endurance, setEndurance] = useState(-1);\r\n    const [perception, setPerception] = useState(-1);\r\n    const [willpower, setWillpower] = useState(-1);\r\n    const [intelligence, setIntelligence] = useState(-1);\r\n    const [strength, setStrength] = useState(-1);\r\n    const [diceSize, setDiceSize] = useState(10);\r\n    const step = 1;\r\n    if (props.currentNumber !== step) return null;\r\n\r\n    const genderList = (species.toLowerCase() === 'merlion') ? ['linon', 'caion', 'vekon'] : ['male', 'female'];\r\n\r\n    const rollDice = () => {\r\n        switch (diceSize) {\r\n            case 10: return () => Math.floor(Math.random() * 10) + 1;\r\n            case 8: return () => Math.floor(Math.random() * 8) + 2;\r\n            default: return () => Math.floor(Math.random() * 6) + 3;\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <Case condition={innerStep === 1}><h3>Lets get some basic information</h3>\r\n            <div><b>What is your character's name?</b> <TextField onChange={(e) => setName(e.target.value)} value={name}>{name}</TextField></div>\r\n            <div><b>What is your character's species?</b> <AutoSelectField value={species} onChange={(n) => setSpecies(n)} values={['human', 'merlion', 'shambra']} ></AutoSelectField> </div>\r\n            <div><b>What is your character's gender?</b> <AutoSelectField values={genderList} value={gender} onChange={(e) => setGender(e)}></AutoSelectField></div></Case>\r\n        <Case condition={innerStep === 2}>\r\n            <h3>Basic stats</h3>\r\n            <Button variant='contained' size='small' onClick={() => setDiceSize(10)}>1d10 {diceSize === 10 ? '(x)' : null}</Button>\r\n            <Button variant='contained' size='small' onClick={() => setDiceSize(8)}>1d8+1 {diceSize === 8 ? '(x)' : null}</Button>\r\n            <Button variant='contained' size='small' onClick={() => setDiceSize(6)}>1d6+2 {diceSize === 6 ? '(x)' : null}</Button>\r\n            <AttributeRoller title='Strength' rollDice={rollDice()} n={strength} callback={(n) => setStrength(n)}></AttributeRoller>\r\n            <AttributeRoller title='Agility' rollDice={rollDice()} n={agility} callback={(n) => setAgility(n)}></AttributeRoller>\r\n            <AttributeRoller title='Endurance' rollDice={rollDice()} n={endurance} callback={(n) => setEndurance(n)}></AttributeRoller>\r\n            <AttributeRoller title='Perception' rollDice={rollDice()} n={perception} callback={(n) => setPerception(n)}></AttributeRoller>\r\n            <AttributeRoller title='Intelligence' rollDice={rollDice()} n={intelligence} callback={(n) => setWillpower(n)}></AttributeRoller>\r\n            <AttributeRoller title='Willpower' rollDice={rollDice()} n={willpower} callback={(n) => setIntelligence(n)}></AttributeRoller>\r\n\r\n        </Case>\r\n        <Button variant='outlined' onClick={() => setInnerStep(innerStep + 1)}>Next</Button>\r\n        <hr />\r\n        <Button variant='outlined' key='wizard_step1_next' onClick={() => props.callback(step + 1, new Character({\r\n            ...props.character,\r\n            strength: strength,\r\n            agility: agility,\r\n            endurance: endurance,\r\n            willpower: willpower,\r\n            perception: perception,\r\n            intelligence: intelligence,\r\n            name: name,\r\n            species: species,\r\n            gender: gender\r\n        }))}>Next</Button>\r\n    </div>;\r\n}\r\ninterface IAttributeRoller {\r\n    title: string;\r\n    callback: (n: number) => void;\r\n    n: number;\r\n    rollDice: () => number;\r\n}\r\n\r\nconst AttributeRoller: React.FC<IAttributeRoller> = (props) => {\r\n    const [attribute, setAttribute] = useState(props.n);\r\n    const [rerolls, setRerolls] = useState(0);\r\n    const reroll = () => {\r\n        let newRoll = props.rollDice();\r\n        setAttribute(newRoll);\r\n        setRerolls(rerolls + 1);\r\n        props.callback(newRoll);\r\n    }\r\n    return <div>\r\n        <Label>{props.title}</Label>: <Label>{attribute}</Label>\r\n        {rerolls < 3 ? <Button variant='contained' size='small' onClick={() => reroll()}>Reroll</Button> : null}\r\n        {rerolls} / 3\r\n    </div>\r\n}\r\n\r\n\r\ninterface ICase {\r\n    condition: boolean;\r\n}\r\n\r\nconst Case: React.FC<ICase> = (props) => {\r\n    if (props.condition) return <>{props.children}</>;\r\n    else return null;\r\n}\r\n\r\nexport default Step1;","import { Button } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { dispatcher } from \"../useCharacter\";\r\n\r\nexport interface IOption {\r\n    key: string;\r\n    value: IOption[];\r\n    dispatch: dispatcher;\r\n}\r\n\r\ninterface IOptionsExplorer {\r\n    tree: IOption;\r\n    dispatchCallback: (d: dispatcher) => void;\r\n    parentCallback: () => void;\r\n    hideButton:boolean;\r\n}\r\n\r\nexport const OptionsExplorer: React.FC<IOptionsExplorer> = ({ tree, dispatchCallback, parentCallback, hideButton }) => {\r\n    const [hasAnswered, setHasAnswered] = useState(false);\r\n    const [parentHasAnswered, setParentHasAnswered] = useState(false);\r\n    if (!hasAnswered && hideButton === false) return <Button variant='outlined'  onClick={() => { dispatchCallback(tree.dispatch); setHasAnswered(true); parentCallback(); }}>{tree.key}</Button>;\r\n    return (<>\r\n        {hideButton && tree.key + '->'}\r\n        {tree.value.map(v => {\r\n                return (<OptionsExplorer hideButton={parentHasAnswered} parentCallback={() => setParentHasAnswered(true)} tree={v} dispatchCallback={dispatchCallback} ></OptionsExplorer>);\r\n            })}\r\n    </>);\r\n}","import IStepProps from \"./WizardSteps\";\r\n\r\nimport {useReducer } from \"react\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { IOption, OptionsExplorer } from \"./OptionExplorer\";\r\nimport { useCharacter } from \"../useCharacter\";\r\n\r\nconst Step2: React.FC<IStepProps> = ({ character, currentNumber, callback }) => {\r\n    const [c, dispatch] = useReducer(useCharacter, character);\r\n    const step = 2;\r\n    if (currentNumber !== step) return <></>;\r\n\r\n    const top: IOption = {\r\n        key: 'Background',\r\n        value: optionTree,\r\n        dispatch: { action: 'background', value: 0, name: '' }\r\n    };\r\n\r\n    return <div>\r\n        <h3>where was your character born or hatched?</h3>\r\n        <OptionsExplorer hideButton={false} parentCallback={() => { }} tree={top} dispatchCallback={(d) => dispatch(d)} ></OptionsExplorer>\r\n        <hr />\r\n        <Button variant='outlined' key='wizard_step2_next' onClick={() => callback(step + 1, c)}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nconst optionTree: IOption[] = [{\r\n    key: 'Coalition of sol',\r\n    dispatch: { action: 'background', value: 0, name: 'Coalition of sol' },\r\n    value: [\r\n        {\r\n            key: 'Earth',\r\n            dispatch: { action: 'background', value: 0, name: ', Earth' },\r\n            value: [\r\n                {\r\n                    key: 'Euroasia',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Euroasia' }\r\n                },\r\n                {\r\n                    key: 'North America',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', North America' }\r\n                },\r\n                {\r\n                    key: 'South America',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', North America' }\r\n                },\r\n                {\r\n                    key: 'Africa',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Africa' }\r\n                },\r\n                {\r\n                    key: 'Greenland',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Greenland' }\r\n                },\r\n                {\r\n                    key: 'Australia',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: ', Australia' }\r\n                },\r\n                {\r\n                    key: 'Antarctica',\r\n                    value: [],\r\n                    dispatch: { action: 'background', value: 0, name: 'Antarctica' }\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            key: 'Mars',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Mars' }\r\n        },\r\n        {\r\n            key: 'Ceres',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Ceres' }\r\n        },\r\n        {\r\n            key: 'Jupiter moon colony',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Jupiter moons' }\r\n        },\r\n        {\r\n            key: 'Saturn moon coloy',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Saturn moons' }\r\n        },\r\n        {\r\n            key: 'Outer planets station or spaceborn',\r\n            value: [],\r\n            dispatch: { action: 'background', value: 0, name: ', Voidborn' }\r\n        }\r\n    ]\r\n},\r\n{\r\n    key: 'Centauri Imperium',\r\n    value: [],\r\n    dispatch: { action: 'background', value: 0, name: 'Centauri Imperium' }\r\n},\r\n{\r\n    key: 'Fronteer World',\r\n    value: [],\r\n    dispatch: { action: 'background', value: 0, name: 'Fronteer world' }\r\n}];\r\n\r\nexport default Step2;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step3: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 3;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of family did your character have?</h3>\r\n        <br/>\r\n        <br/>\r\n        <Button key='wizard_step3_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, age: 4 }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\n\r\nexport default Step3;","import IStepProps from \"./WizardSteps\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\nimport { GetTraits, Trait } from \"../traits/Traits\";\r\n\r\nconst Step4: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const [traits, setTraits] = useState<Trait[]>([]);\r\n    const step = 4;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what is your characters strengths and weaknesses</h3>\r\n        {GetTraits().map(trait => {\r\n            return <Button onClick={() => setTraits([...traits, trait])}>{trait.name}</Button>\r\n        })}\r\n        <br/>\r\n        {traits.map(trait => <p>{trait.name}</p>)}\r\n        <br/>\r\n        <Button key='wizard_step4_next' onClick={() => props.callback(step + 1, new Character({ ...props.character, traits: traits }))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step4;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step5: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 5;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what kind of personality does your character have?</h3>\r\n        <Button key='wizard_step5_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step5;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step6: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 6;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what interests and hobbies does your character have?</h3>\r\n        <Button key='wizard_step6_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step6;","import IStepProps from \"./WizardSteps\";\r\n\r\nimport { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step7: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 7;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>what education does your character have?</h3>\r\n        <Button key='wizard_step7_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step7;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step8: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 8;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>how does your character make a living?</h3>\r\n        <Button key='wizard_step8_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step8;","import IStepProps from \"./WizardSteps\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Character } from \"../Character\";\r\n\r\nconst Step9: React.FC<IStepProps> = (props: IStepProps) => {\r\n    const step = 9;\r\n    if (props.currentNumber !== step) return null;\r\n    return <div>\r\n        <h3>repeat step 8 until finished</h3>\r\n        <Button key='wizard_step9_next' onClick={() => props.callback(step + 1, new Character({...props.character}))}>Next</Button>\r\n    </div>;\r\n}\r\n\r\nexport default Step9;","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Character, ICharacter } from './../components/Character';\nimport { CharacterSheet } from './CharacterSheet';\nimport Step0 from './../components/Wizard/Step0';\nimport Step1 from './../components/Wizard/Step1';\nimport Step2 from './../components/Wizard/Step2';\nimport Step3 from './../components/Wizard/Step3';\nimport Step4 from './../components/Wizard/Step4';\nimport Step5 from './../components/Wizard/Step5';\nimport Step6 from './../components/Wizard/Step6';\nimport Step7 from './../components/Wizard/Step7';\nimport Step8 from './../components/Wizard/Step8';\nimport Step9 from './../components/Wizard/Step9';\nimport { GetSkillList } from '../components/GetSkillList';\n\nconst Wizard: React.FC = () => {\n    const [viewStep, setViewStep] = useState(0);\n    const [character, setCharacter] = useState(new Character({\n        name: '',\n        species: '',\n        gender: '',\n        age: 1,\n        strength: 1,\n        agility: 1,\n        endurance: 1,\n        intelligence: 1,\n        perception: 1,\n        willpower: 1,\n        skills: GetSkillList()\n    } as ICharacter));\n    const [viewSheet, setViewSheet] = useState(false);\n    const setData = (n: number, c: Character) => {\n        setViewStep(n);\n        setCharacter(c);\n        setViewSheet(false);\n    };\n    return <div>\n        <h2>Character Creator Wizard</h2>\n        <p>Answering these questions will produce a template of a character with a set of abilities and matching backstory that makes some kind of sense.\n            <br/>\n            But you are expected to modify and correct it.\n        </p>\n        <hr />\n        <Step0 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step0>\n        <Step1 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step1>\n        <Step2 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step2>\n        <Step3 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step3>\n        <Step4 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step4>\n        <Step5 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step5>\n        <Step6 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step6>\n        <Step7 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step7>\n        <Step8 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step8>\n        <Step9 character={character} currentNumber={viewStep} callback={(n, c) => setData(n, c)}></Step9>\n        <hr />\n        <Button key='toggle_sheet' onClick={() => setViewSheet(!viewSheet)}>Toggle character sheet</Button>\n        {viewSheet === true ? <CharacterSheet initialCharacter={character} characterCallback={(c) => setCharacter(c)} ></CharacterSheet> : null}\n    </div>;\n}\n\n\nexport default Wizard;"],"sourceRoot":""}