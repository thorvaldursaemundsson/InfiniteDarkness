{"version":3,"sources":["components/playermanual/Section.tsx","components/Indexer.tsx","views/SkillPerkManual.tsx"],"names":["Section","title","tab","border","children","useState","isOpen","setIsOpen","tabSize","undefined","className","style","paddingLeft","onClick","Indexed","source","href","id","Indexer","index","anyChildren","indexedItems","child","console","log","x","props","push","map","i","js","perks","GetPerkList","SkillSection","GetSkillList","skill","name","description","useCases","uc","attribute","type","results","r","filter","p","perk","level","TraitSection","currentPerk","setCurrentPerk","GetTraits","trait","display","width","cost","CharacterTraits","SkillPerkManual"],"mappings":"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","file":"static/js/6.da990773.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\ninterface ISection {\r\n    title: string;\r\n    tab?: number;\r\n    border?: boolean | undefined;\r\n}\r\n\r\nconst Section: React.FC<ISection> = ({ title, tab, border, children }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    let tabSize = '0';\r\n    if (tab !== undefined)\r\n        tabSize = tab + 'px';\r\n    return <div className={border === true ? 'bordersection' : ''} style={{ paddingLeft: tabSize }}>\r\n        <Button onClick={() => setIsOpen(!isOpen)}>{title} {isOpen ? '-' : '+'}</Button>\r\n        {isOpen && children}\r\n    </div>;\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\ninterface IIndexedProps {\r\n    title: string;\r\n    source?: string | undefined;\r\n}\r\n\r\nexport const Indexed: React.FC<IIndexedProps> = ({ title, children, source }) => {\r\n    return <>\r\n        <h3><a className='notalink' href={'#' + title} id={title}>{title}</a> <a href={'#' + source}>^</a></h3>\r\n        {children}\r\n    </>;\r\n}\r\n\r\n\r\n\r\ninterface IIndexerProps {\r\n    title: string;\r\n}\r\n\r\nconst Indexer: React.FC<IIndexerProps> = ({ children, title }) => {\r\n\r\n    let index: string[] = [];\r\n    const anyChildren: any = children;\r\n\r\n    const indexedItems: JSX.Element[] = [];\r\n\r\n    console.log({ children });\r\n    for (var child in anyChildren) {\r\n        var x = anyChildren[child];\r\n        if (x.props.title === undefined) {\r\n            console.log(\"Child is not Indexed, it is: \", { x });\r\n        }\r\n        else {\r\n            indexedItems.push(<Indexed title={x.props.title} source={title}>{x.props.children}</Indexed>);\r\n            index.push(x.props.title);\r\n            console.log(\"data\", { x });\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <h4><a className='notalink' href={'#' + title} id={title}>Table of contents </a></h4>\r\n        {index.map(i => <h5> <a href={'#' + i}>{i}</a> </h5>)}\r\n        <hr />\r\n        {indexedItems.map(js => js)}\r\n    </>;\r\n}\r\n\r\n\r\n\r\n\r\nexport default Indexer;","import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { GetTraits } from '../components/traits/Traits';\r\nimport { GetPerkList } from '../components/GetPerkList';\r\nimport { GetSkillList } from '../components/GetSkillList';\r\nimport Section from '../components/playermanual/Section';\r\nimport Indexer, { Indexed } from '../components/Indexer';\r\n\r\nconst SkillPerkManual: React.FC = () => {\r\n    return <div>\r\n        <Indexer title='skillsperks'>\r\n            <Indexed title='Skills and perks'>\r\n                <SkillSection />\r\n            </Indexed>\r\n            <Indexed title='Traits'>\r\n                <TraitSection />\r\n            </Indexed>\r\n            <Indexed title='Character traits'>\r\n                <CharacterTraits />\r\n            </Indexed>\r\n        </Indexer>\r\n    </div>;\r\n}\r\nconst perks = GetPerkList();\r\nconst SkillSection = () => {\r\n    return (<div>\r\n        <p>Skills are the generic things a character can learn to do, every skill gains a bonus from it's main ability.</p>\r\n        <p>Perks are specializations and special capabilities related to skills, each perk has a level, starting at 1.\r\n            <br />\r\n            Perks cost 10 x level\r\n            <br />\r\n            Perks require 6 x level points in their skill\r\n        </p>\r\n\r\n        {GetSkillList().map(skill =>\r\n            <><Section title={skill.name} border={true}>\r\n                <Section tab={5} title='uses' border={true}>\r\n                    <p>{skill.description}</p>\r\n                    <h4>Uses</h4>\r\n                    {skill.useCases.map(uc => <>\r\n                        <b>{uc.name}</b> - ({uc.attribute} {uc.type})\r\n                        {uc.results !== undefined ? <ul>{uc.results.map(r => <li>{r}</li>)}</ul> : null}\r\n                        <p>{uc.description}</p>\r\n                    </>)}\r\n                </Section>\r\n                <Section tab={5} title='perks' border={true}>\r\n                    <h4>Perks</h4>\r\n                    {perks.filter(p => p.skill === skill.name).map(perk => <>\r\n                        <h5>{perk.name}</h5>\r\n                        <b>Cost</b>: {perk.level * 10}<br />\r\n                        {perk.description()}\r\n\r\n                    </>)}\r\n                </Section>\r\n            </Section></>)}\r\n    </div>);\r\n}\r\n\r\nconst TraitSection = () => {\r\n    const [currentPerk, setCurrentPerk] = useState('');\r\n    return (<div>\r\n        <p>Traits are innate characteristics of a character, they can not be added or removed after the start of the game, some traits are purely negative, others positive, some have a combined effect</p>\r\n        <p>Traits often describe a characters behavior, characters with these traits are expected to roleplay in a way which does not conflict with that trait</p>\r\n        <p>It is recommended that a character have between 1 and 3 traits</p>\r\n        <p>Traits in this section affect more than just roleplay, they also affect outcome of the dice</p>\r\n        {GetTraits().map(trait => {\r\n            return (<div>\r\n                <h3><span style={{ display: 'inline-block', width: '200px' }}>{trait.name}</span> {currentPerk !== trait.name ?\r\n                    <Button onClick={() => setCurrentPerk(trait.name)}>?</Button> :\r\n                    <Button onClick={() => setCurrentPerk('')}>X</Button>} </h3>\r\n                {currentPerk === trait.name ? <div>\r\n                    <p><b>Cost</b>: {trait.cost}</p>\r\n                    {trait.description}</div> : null}\r\n            </div>);\r\n        })}\r\n    </div>)\r\n}\r\n\r\nconst CharacterTraits = () =>\r\n    <>\r\n        <h2>Character Traits</h2>\r\n        <p>Character traits describe how your character acts, how you roleplay them. Note that there is always room for interpretation when roleplaying a character whos personality is summed up in 3-5 words. And there is always a choice for which trait to embody at any given time.<br />\r\n        \"it's how my character should act\" is often not an accepted excuse if your roleplay disrupts the game or causes hurt feelings. Ultimately the player is always the author of the character and always fully responsible for their actions.<br />\r\n        </p>\r\n        <p>Roll 1d100 5 times, results 67-100 means free choice. Pick between 3 and 5, preferably at least one negative and at least one positive</p>\r\n        <ol>\r\n            <li>Generous</li>\r\n            <li>Integrity</li>\r\n            <li>Loyal</li>\r\n            <li>Devoted</li>\r\n            <li>Loving</li>\r\n            <li>Kind</li>\r\n            <li>Sincere</li>\r\n            <li>Self-controlled</li>\r\n            <li>Peaceful</li>\r\n            <li>Faithful</li>\r\n            <li>Patient</li>\r\n            <li>Determined</li>\r\n            <li>Persistence</li>\r\n            <li>Adventurous</li>\r\n            <li>Fair</li>\r\n            <li>Cooperative</li>\r\n            <li>Tolerant</li>\r\n            <li>Optimistic</li>\r\n            <li>Spiritual</li>\r\n            <li>Dishonest</li>\r\n            <li>Disloyal</li>\r\n            <li>Unkind</li>\r\n            <li>Mean</li>\r\n            <li>Rude</li>\r\n            <li>Disrespectful</li>\r\n            <li>Impatient</li>\r\n            <li>Greedy</li>\r\n            <li>Abrasive</li>\r\n            <li>Pessimistic</li>\r\n            <li>Cruel</li>\r\n            <li>Unmerciful</li>\r\n            <li>Narcissitic</li>\r\n            <li>Obnoxious</li>\r\n            <li>Malicious</li>\r\n            <li>Petty</li>\r\n            <li>Quarrelsome</li>\r\n            <li>Selfish</li>\r\n            <li>Unforgiving</li>\r\n            <li>Dominant</li>\r\n            <li>Confident</li>\r\n            <li>Persuasive</li>\r\n            <li>Ambitious</li>\r\n            <li>Bossy</li>\r\n            <li>Resourceful</li>\r\n            <li>Decisive</li>\r\n            <li>Charismatic</li>\r\n            <li>Authority</li>\r\n            <li>Enthusiasm</li>\r\n            <li>Bold</li>\r\n            <li>Proactive</li>\r\n            <li>Playful</li>\r\n            <li>Zany</li>\r\n            <li>Active</li>\r\n            <li>Wild</li>\r\n            <li>Silly</li>\r\n            <li>Affectionate</li>\r\n            <li>Funny</li>\r\n            <li>Rough</li>\r\n            <li>Talkative</li>\r\n            <li>Rowdy</li>\r\n            <li>Smart</li>\r\n            <li>Fidgety</li>\r\n            <li>Shy</li>\r\n            <li>Lively</li>\r\n            <li>Impatient</li>\r\n            <li>Stubborn</li>\r\n        </ol>\r\n    </>\r\n\r\n\r\nexport default SkillPerkManual;"],"sourceRoot":""}